#!/bin/bash
# Oliver Kullmann, 21.4.2009 (Swansea)
# Copyright 2009, 2013 Oliver Kullmann
# This file is part of the OKlibrary. OKlibrary is free software; you can redistribute 
# it and/or modify it under the terms of the GNU General Public License as published by
# the Free Software Foundation and included in this library; either version 3 of the 
# License, or any later version.

# Wrapper for satz215, applying first the minisat2-preprocessor.
# All parameters are transferred to satz215 (where the last parameter,
# the filename, is replaced by the preprocessed file).
# The preprocessed file has the same name as the original file plus "_m2pp_$$";
# it is deleted after execution of satz215 is finished.
# There are two additional outputs (besides those of the final satz215-call):
# statistics for the original file (by the OKsolver), and the minisat2-output.

set -o errexit
set -o nounset

script_name="satz215-m2pp"
version_number=0.0.9

if [[ $# == 0 ]]; then
  echo -e "ERROR[${script_name}]: At least one parameter is needed, the filename."
  exit 1
fi

preprocessor=minisat-2.2.0
stat_tool=ExtendedDimacsFullStatistics-O3-DNDEBUG
solver=satz215

filename=$(eval echo "$""{""$#""}") # last parameter
filename_pp=${filename}_m2pp_$$

# the parameters except of the last:
other_arguments=
for (( i = 1; i < $#; ++i )); do other_arguments="${other_arguments} $(eval echo "$""{""$i""}")"; done

cat ${filename} | ${stat_tool}
echo

${preprocessor} -dimacs=${filename_pp} ${filename}
echo

cat ${filename_pp} | ${stat_tool}
echo

# The minisat-preprocessor might produce an empty clause:
if [[ $(grep "^0$" ${filename_pp}) ]]; then
  echo "s UNSATISFIABLE"
  echo "c minisat-2.2.0 preprocessor created empty clause"
  return_value=20
else
  ${solver} ${other_arguments} ${filename_pp}
  return_value=$?
fi

rm ${filename_pp}

exit ${return_value}
