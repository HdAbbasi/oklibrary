#!/bin/bash
# Oliver Kullmann, 23.4.2011 (Guangzhou)
# Copyright 2011 Oliver Kullmann
# This file is part of the OKlibrary. OKlibrary is free software; you can redistribute 
# it and/or modify it under the terms of the GNU General Public License as published by
# the Free Software Foundation and included in this library; either version 3 of the 
# License, or any later version.

# Split a SAT-problem into sub-problems, using the OKsolver

# Usage:
#   SplittingViaOKsolver parameters F
# where F is the CNF in DIMACS format, and parameters are for
# the OKsolver-2002.

# Creates a directory "SplitViaOKsolver_parameters_timestamp", containing
# the following files:
# - Parameters : the parameters passed over to the OKsolver
# - Version : information on the OKsolver
# - F : a copy of the instance
# - Result : output of the OKsolver, after creating the instances
# - N : the number of sub-instances
# - Data : for 1 <= i <= N the number of variables in the partial
#          assignment for the i-th sub-instance
# - Statistics : basic evaluation of Data
# - Md5sum : the sum (in hex) of the md5sums of the files in Instances.
# And in the directory Instances we have files with names 1, ..., N,
# each containing a partial assignment in DIMACS format (one line, starting
# with v, followed by literals set to true, concluded by "0") yielding the
# corresponding sub-instance.

set -o errexit
set -o nounset

script_name="SplittingViaOKsolver"
version_number=0.0.9

timestamp=$(date +"%Y-%m-%d-%H%M%S")

directory=SplitViaOKsolver_$(echo $* | tr -d " -.")_${timestamp}

solver=OKsolver_2002_NTP-O3-DNDEBUG

mkdir ${directory}
cd ${directory}
mkdir Instances

${solver} --version > Version

parameters="$*"
filename="${!#}"
length=$(($#-1))
other_param=${@:1:$length}
new_param="${other_param} -S=${directory}/Instances ${filename}"
echo ${new_param} > Parameters

cp ../${filename} .

cd ..
${solver} ${new_param} > ${directory}/Result

cd ${directory}

N=$(awk '/splitting_cases/ {print $3}' Result)
echo $N > N

sum_md5=0
for F in Instances/*; do
  new_md5=$(md5sum $F | awk '{print $1}' | tr [:lower:] [:upper:])
  sum_md5=$(echo "obase=16;ibase=16;${sum_md5}+${new_md5}" | bc)
done
echo ${sum_md5} > Md5sum

echo " n" > Data
for (( i=1; i<=N; ++i )); do
  F=Instances/$i
  n=$(cat ${F} | wc -w)
  n=$((n-2))
  echo $i $n >> Data
done

echo -e "E=read.table(\"Data\")\nsummary(E)\ntable(E)" | oklib --R --quiet --vanilla | tail +3 > Statistics

