#!/bin/bash
# Oliver Kullmann, 4.4.2009 (Swansea)
# Copyright 2009 Oliver Kullmann
# This file is part of the OKlibrary. OKlibrary is free software; you can redistribute 
# it and/or modify it under the terms of the GNU General Public License as published by
# the Free Software Foundation and included in this library; either version 3 of the 
# License, or any later version.

# "GTTransversalsInc k n t file1 file 2" starts computing the transversal
# number of the hypergraph of arithmetic progressions of size k over 
# {p_1,...,p_n}, where t is the transversal number over {1,...,n-1} (thus the 
# transversal number for n is either t or t+1), and continues with n+1 and so
# on.
# The method is by adding the equality "transversal size = t" to
# the clauses representing the hyperedges, thus obtaining a SAT problem,
# solved then by Minisat (the current default; seems to be strongest on these 
# problems).

script_name="GTTransversalsInc"

if [[ $# != 5 && $# != 6 ]]; then
  echo "ERROR[${script_name}]: 
  Five parameters k, n, t, file1, file2 are needed:
  The progression-length k, the starting number n of primes, the 
  transversal number t for n-1 primes, the output filename for the
  transversal numbers, and the filename for output of the SAT solver.
  The solver-executable is an optional sixth parameter."
  exit 1
fi

K=$1
T=$3
output=$4
output_solver=$5
if [[ $# == 6 ]]; then
  solver=$6
else
  solver="minisat2"
fi
generator="GTTransversals"

echo "k n tau" >> ${output}
for ((N=${2}; 1; ++N)); do
  ${generator} ${K} ${N} ${T}
  file="gt_trans_${K}_${N}_${T}.cnf"
  echo ${file} >> ${output_solver}
  ${solver} ${file} >> ${output_solver} 2>&1
  res=$(echo $?)
  if [[ ${res} != 10 && ${res} != 20 ]]; then
    echo "ERROR[${script_name}]:
    Unexpected return value ${res} from the SAT solver."
    exit 1
  fi
  if [[ ${res} == 20 ]]; then T=$(expr ${T} + 1); fi
  echo "${K} ${N} ${T}" >> ${output}
  echo -e "${K} ${N} ${T}\n" >> ${output_solver}
  rm ${file}
done

exit 0
