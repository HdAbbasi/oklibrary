/* Oliver Kullmann, 26.5.2012 (Swansea) */
/* Copyright 2012 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Matroids/Lisp/Greedoids/tests/Basics.mac
  \brief Tests for basic matroid functions

Use by

oklib_load("OKlib/ComputerAlgebra/Matroids/Lisp/Greedoids/tests/Basics.mac");

*/

/*!
\htmlonly
*/

oklib_include("OKlib/ComputerAlgebra/TestSystem/Lisp/Asserts.mac")$
oklib_include("OKlib/ComputerAlgebra/Hypergraphs/Lisp/SetSystems.mac")$


kill(f)$

/* ***********************
   * Fundamental notions *
   ***********************
*/

okltest_grdfs_p(f) := (
  assert(f(0) = false),
  assert(f([]) = false),
  assert(f([{}]) = false),
  assert(f([{},{}]) = false),
  assert(f([{},{{}}]) = true),
  assert(f([{1,2},{{},{1,2}}]) = false),
  for n : 0 thru 5 do block([N : setn(n), M],
    M : [N, setify(create_list(setn(i),i,0,n))],
    assert(f(M) = true)
  ),
  for n : 0 thru 4 do block([N : setn(n), M],
    M : [N,adjoin({},singletons(N))],
    assert(f(M) = true)
  ),
  for n : 0 thru 3 do block([N : setn(n), M],
    M : [N,powerset(N)],
    assert(f(M) = true)
  ),
  true)$

okltest_antimtrfs_p(f) := (
  assert(f([{},{}]) = false),
  assert(f([{},{{}}]) = true),
  assert(f([{1},{{}}]) = true),
  assert(f([{1,2},{{},{1},{2}}]) = false),
  assert(f([{1,2,3},{{},{1},{1,2},{1,2,3}}]) = true),
  true)$

okltest_gaussian_ss_p(f) := (
  assert(f({}) = true),
  assert(f({{}}) = true),
  assert(f({{1}}) = true),
  assert(f({{},{1}}) = true),
  assert(f({{},{1},{2}}) = true),
  assert(f({{},{1},{1,2},{1,2,3}}) = true),
  assert(f({{},{1},{1,2},{1,2,3},{2,3}}) = false),
  assert(f({{},{1},{1,2},{1,2,3},{2,3},{1,3}}) = false),
  assert(f({{},{1},{1,2},{1,2,3},{2,3},{3}}) = true),
  true)$

/*!
\endhtmlonly
*/
