/* Oliver Kullmann, 26.5.2012 (Swansea) */
/* Copyright 2012 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Matroids/Lisp/Basics.mac
  \brief Basic functionality related to matroids

Use by

oklib_load("OKlib/ComputerAlgebra/Matroids/Lisp/Basics.mac");

*/

/*!
\htmlonly
*/

oklib_include("OKlib/ComputerAlgebra/Hypergraphs/Lisp/Basics.mac")$
oklib_include("OKlib/ComputerAlgebra/DataStructures/Lisp/Lists.mac")$


/* ***********************
   * Fundamental notions *
   ***********************
*/

/* Checking whether S (a set of sets) fulfils the "augmentation property"
   (also "exchange property"):
*/
augmentation_ss_p(S) := block(
[A : sort_length_part_ary(listify(disjoin({},S))), l, found : true],
 l : A[0],
 for i : 1 thru l-1 unless not found do
  for a in A[i] unless not found do
   for j : i+1 thru l unless not found do
    for b in A[j] unless
     (found : some_s(lambda([x], elementp(adjoin(x,a),S)), setdifference(b,a)))
      do 0,
 found)$

/* Checking whether M is a matroid given by the independent sets: */
mtrins_p(M) := hg_p(M) and not emptyp(second(M)) and
 subsumption_closed_p(second(M)) and augmentation_ss_p(second(M))$

/*!
\endhtmlonly
*/
