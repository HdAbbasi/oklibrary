/* Oliver Kullmann, 23.5.2008 (Swansea) */
/* Copyright 2008 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Graphs/Lisp/BicliquePartitions/Bicliques.mac
  \brief Functions regarding biclique in multigraphs

Use by

oklib_load("Transitional/ComputerAlgebra/Graphs/Lisp/BicliquePartitions/Bicliques.mac");

*/

/*!
\htmlonly
*/

/* ***********************
   * Fundamental notions *
   ***********************
*/

/* A "vertex-biclique" ("vbc") in a graph is a pair of sets of vertices
   forming a biclique.
   An "ordered vertex-biclique" ("ovbc") uses lists of vertices instead.
*/

/* The following tests assume that G is a well-formed graph
   (of its type).
*/

vbc_gl_p(B,G) := listp(B) and is(length(B)=2) and
 every(setp, B) and disjointp(B[1],B[2]) and
 every(lambda([b], subsetp(b,G[1])), B) and
 subsetp(map(setify,cartesian_product(B[1],B[2])), G[2])$

vbc_mugl_p(B,G) := listp(B) and is(length(B)=2) and
 every(setp, B) and disjointp(B[1],B[2]) and
 every(lambda([b], subsetp(b,G[1])), B) and
 subsetp(map(setify,cartesian_product(B[1],B[2])), G[2])$

vbc_gg_p(B,G) := listp(B) and is(length(B)=2) and
 every(setp, B) and disjointp(B[1],B[2]) and
 every(lambda([b], subsetp(b,G[1])), B) and
 subsetp(map(setify,cartesian_product(B[1],B[2])), map(G[3],G[2]))$


vbc_dgl_p(B,G) := listp(B) and is(length(B)=2) and
 every(setp, B) and disjointp(B[1],B[2]) and
 every(lambda([b], subsetp(b,G[1])), B) and
 subsetp(cartesian_product(B[1],B[2]), G[2])$




/*!
\endhtmlonly
*/
