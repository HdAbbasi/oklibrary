/* Oliver Kullmann, 24.6.2008 (Swansea) */
/* Copyright 2008 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Graphs/Lisp/tests/Generators.mac
  \brief Tests for basic graph functionality

Use by

oklib_load("Transitional/ComputerAlgebra/Graphs/Lisp/tests/Generators.mac");

*/

/*!
\htmlonly
*/

oklib_include("Transitional/ComputerAlgebra/TestSystem/Lisp/Asserts.mac")$
oklib_include("Transitional/ComputerAlgebra/Graphs/Lisp/Basic.mac")$
oklib_include("Transitional/ComputerAlgebra/Graphs/Lisp/Generators.mac")$

kill(f)$

/* ********************
   * Paths and cycles *
   ********************
*/

okltest_pathgraph_og(f) := (
  assert(f(1) = [[1],[]]),
  assert(f(2) = [[1,2],[{1,2}]]),
  assert(f(3) = [[1,2,3],[{1,2},{2,3}]]),
  true)$

okltest_cyclegraph_ogl(f) := (
  assert(f(1) = [[1],[{1}]]),
  assert(f(3) = [[1,2,3],[{1,2},{2,3},{3,1}]]),
  true)$

okltest_cyclegraph_ogg(f) := (
  for n in cons(1,makelist(i,i,3,6)) do
    assert(ogg2ogl(f(n)) = cyclegraph_ogl(n)),
  assert(gr_equalp(f(2), [[1,2],[1,2],lambda([e],{1,2})]) = true),
  true)$

/*!
\endhtmlonly
*/
