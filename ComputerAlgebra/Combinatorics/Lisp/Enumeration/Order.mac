/* Oliver Kullmann, 2.6.2009 (Swansea) */
/* Copyright 2009 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Combinatorics/Lisp/Enumeration/Order.mac
  \brief Fundamental orders on combinatorial objects

Use by

oklib_load("OKlib/ComputerAlgebra/Combinatorics/Lisp/Enumeration/Order.mac");

*/

/*!
\htmlonly
*/

/* Lexicographical comparison of lists of equal length; return true
   if A is (strictly) less than B lexicographically, and false otherwise.
*/
/* Prerequisite: A, B are lists with length(A) = length(B). */
lex_lessp_l(A,B) := orderlessp(A,B)$
/* The same, but explicitly: */
lex_lessp_l_bydef(A,B) := block([res : false],
  for p in map("[",A,B) do
    if first(p) # second(p) then (
      res : is(first(p) < second(p)), return()),
  return(res))$

/* Colexicographical comparison of lists of equal length; return true
   if A is (strictly) less than B colexicographically, and false otherwise.
*/
/* Prerequisite: A, B are lists with length(A) = length(B). */
colex_lessp_l(A,B) := lex_lessp_l(reverse(A),reverse(B))$

/*!
\endhtmlonly
*/
