/* Oliver Kullmann, 16.3.2008 (Swansea) */
/* Copyright 2008 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/CombinatorialMatrices/Lisp/testobjects/Basics.mac

Use by

oklib_load("Transitional/ComputerAlgebra/CombinatorialMatrices/Lisp/testobjects/Basics.mac");

*/

/*!
\htmlonly
*/

oklib_include("Transitional/ComputerAlgebra/CombinatorialMatrices/Lisp/Basics.mac")$
oklib_include("Transitional/ComputerAlgebra/CombinatorialMatrices/Lisp/tests/Basics.mac")$

/* *****************
   * Basic notions *
   *****************
*/

okltest_binfam_p(binfam_p);

okltest_com_p(com_p);
okltest_scom_p(scom_p);

okltest_sqscom_p(sqscom_p);
okltest_osqcom_p(osqcom_p);

/* *********************
   * Checking equality *
   *********************
*/

okltest_com_equalp(com_equalp);
okltest_scom_equalp(scom_equalp);

/* ***************
   * Conversions *
   ***************
*/

okltest_scom2com(scom2com);
okltest_com2scom(com2scom);

okltest_com2m(com2m);
okltest_ocom2m(ocom2m);
okltest_scom2m(scom2m);

okltest_m2com(m2com);
okltest_m2scom(m2scom);

okltest_com_l(com_l);
okltest_scom_l(scom_l);

/* ***********************
   * Basic constructions *
   ***********************
*/

okltest_emptycom(emptycom);
okltest_emptycom_r(emptycom_r);
okltest_emptycom_c(emptycom_c);
okltest_emptyscom(emptyscom);

okltest_zerocom(zerocom);
okltest_zeroscom(zeroscom);

okltest_constantcom(constantcom);
okltest_constantscom(constantscom);

okltest_idscom(idscom);
okltest_cdiagscom(okltest_cdiagscom);

okltest_all_m(all_m);

okltest_genmatrix_m(genmatrix_m);
okltest_genmatrix_sm(genmatrix_sm);

/* *******************
   * Random matrices *
   *******************
*/

okltest_random_m(random_m);
okltest_random_intiv_m(random_intiv_m);
okltest_random_fpiv_m(random_fpiv_m);
okltest_random_sm(random_sm);

okltest_random_permutation_m(random_permutation_m);
okltest_random_rpermutation_m(random_rpermutation_m);
okltest_random_cpermutation_m(random_cpermutation_m);

okltest_random_spolar_m(random_spolar_m);

/* *******************
   * Transformations *
   *******************
*/

okltest_com2l_r(com2l_r);
okltest_com2ll_r(com2ll_r);
okltest_scom2ll_r(scom2ll_r);
okltest_com2l_c(com2l_c);
okltest_com2ll_c(com2ll_c);
okltest_scom2ll_c(scom2ll_c);

okltest_scom2g(scom2g);
okltest_scom2gl(scom2gl);
okltest_scom2dg(scom2dg);
okltest_scom2dgl(scom2dgl);

okltest_com2ghg(com2ghg);

okltest_trans_l2scom(trans_l2scom);

/* ********************
   * Basic operations *
   ********************
*/

okltest_dim_com(dim_com);
okltest_order_scom(order_scom);

okltest_trans_com(trans_com);
okltest_trans_scom(trans_scom);

/* ************************
   * Algebraic operations *
   ************************
*/

okltest_prod_m(prod_m);

okltest_add_scom(add_scom);
okltest_diff_scom(diff_scom);
okltest_scprod_scom(scprod_scom);
okltest_prod_com(prod_com);

/* ********************
   * Entry statistics *
   ********************
*/

okltest_min_com(min_com);
okltest_max_com(max_com);

okltest_sum_com(sum_com);
okltest_sum_scom(sum_scom);

okltest_abs_com(abs_com);
okltest_abs_scom(abs_scom);

okltest_rowsums_list_com(rowsums_list_com);
okltest_columnsums_list_com(columnsums_list_com);

okltest_com_distribution(com_distribution);

/* ***************
   * Basic tests *
   ***************
*/

okltest_empty_com_p(empty_com_p);

okltest_every_com_p(every_com_p);
okltest_every_scom_p(every_scom_p);
okltest_some_com_p(some_com_p);
okltest_some_scom_p(some_scom_p);

okltest_every_diagc_scom_p(every_diagc_scom_p);
okltest_every_diag_scom_p(every_diag_scom_p);
okltest_every_ndiagc_scom_p(every_ndiagc_scom_p);
okltest_every_ndiag_scom_p(every_ndiag_scom_p);
okltest_some_ndiag_scom_p(some_ndiag_scom_p);

okltest_extscom_com_p(extscom_com_p);
okltest_obsscom_com_p(obsscom_com_p);

okltest_symmetric_scom_p(symmetric_scom_p);
okltest_symmetric_m_p(symmetric_m_p);

/* ***************
   * Polynomials *
   ***************
*/

okltest_charpoly_m(charpoly_m);
okltest_charpoly_scom(charpoly_scom);

/*!
\endhtmlonly
*/
