/* Matthew Gwynne, 15.2.2008 (Swansea) */
/* Copyright 2008 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Cryptology/Lisp/tests/AdvancedEncryptionStandard.mac
  \brief Tests for Advanced Encryption Standard

Use by

oklib_load("Transitional/ComputerAlgebra/Cryptology/Lisp/tests/AdvancedEncryptionStandard.mac");

*/

/*!
\htmlonly
*/

oklib_include("Transitional/ComputerAlgebra/TestSystem/Lisp/Asserts.mac");
kill(f,inv_f,x)$

/* Set of all GF(2^8) elements */
gf2t8set : map(lambda([a], lreduce(lambda([b,i],b + x^i),listify(a),0)),
    powerset({0,1,2,3,4,5,6,7}));

/* Test Sbox and it's inverse */
okltest_sbox(f,inv_f) := block(
  /* Extreme Cases for inv_sbox */
  assert(f(0) = x^6 + x^5 + x + 1),
  assert(f(x^7+x^6+x^5+x^4+x^3+x^2+x^1+1) = x^4 + x^2 + x),
  /* Extreme Cases for inv_sbox */
  assert(f(0) = x^6 + x^5 + x + 1),
  assert(f(x^7+x^6+x^5+x^4+x^3+x^2+x^1+1) = x^4 + x^2 + x),
  print("test"),
  /* Check inverse of sbox for every value */
  every(lambda([a], assert(inv_f(f(a)) = a)), gf2t8set),
true)$

/* Test MixColumns (Few Simple examples) */

/*!
\endhtmlonly
*/
