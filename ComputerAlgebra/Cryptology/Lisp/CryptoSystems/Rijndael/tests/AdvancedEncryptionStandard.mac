/* Matthew Gwynne, 15.2.2008 (Swansea) */
/* Copyright 2008 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Cryptology/Lisp/CryptoSystems/Rijndael/tests/AdvancedEncryptionStandard.mac
  \brief Tests for Advanced Encryption Standard

Use by

oklib_load("Transitional/ComputerAlgebra/Cryptology/Lisp/CryptoSystems/Rijndael/tests/AdvancedEncryptionStandard.mac");

*/

/*!
\htmlonly
*/

oklib_include("Transitional/ComputerAlgebra/TestSystem/Lisp/Asserts.mac");

kill(f)$


/* ********************
   * Basic Operations *
   ********************
*/


/* Test AES sbox operation */
okltest_sbox(f) := block(
  /* Extreme Cases for sbox */
  assert(f(0) = x^6 + x^5 + x + 1),
  assert(f(x^6+x^4+x) = 0),
  assert(f(x^7+x^6+x^5+x^4+x^3+x^2+x^1+1) = x^4 + x^2 + x),
true)$

/* Test inverse of AES sbox operation */
okltest_inv_sbox(f) := block(
  /* Extreme Cases for sbox OK: ??? */
  assert(f(0) = x^6+x^4+x),
  assert(f(x^6 + x^5 + x + 1) = 0),
  assert(f(x^4 + x^2 + x) = x^7+x^6+x^5+x^4+x^3+x^2+x^1+1),
true)$

/* Test AES mixcolumns operation. */
okltest_mixcolumns(f) := block(
  /* Extreme Cases for sbox : OK: ??? */
  assert(totaldisrep(f([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])) = 
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),
  assert(totaldisrep(f([x^5+x^4+x,x^7+x^3,x^5+x^4+1,x^7+x^6+x^5,x^6+x+1,
    x^6+x^4+x^3+x,x^5+x^4+1,x^5+x^4+x^2+x+1,x^7+x^6+x^5+x^4+x^2+x,x^5+x^4,
    x^7+x^4+x^3,x^2+x+1,x^7+x^5+x^3,x^7+x^3+x^2+1,x^7+x^5+x,x^5+x^4+x^2])) = 
    [x^7+x^6+x^5+x^4+x^3+x^2+x+1,x^6+x^4+x^3,x^3+x+1,x^7+x^5+x^4+1,x^4+x^3+
    x^2+1,x^7+x^6+x^5+1,x^6+x,x^7+x^5+x^4+x+1,x^6+x^5+x^2+1,x^5+x^4+x^3+x^2+x,
    x^7+x^6+x^4+x^2+x,x^7+x^2+1,x^7+x^5+x^3,x^7+x^6+x^5+x^3,x^7+x^5+x^2+1,
    x^6+x^5+x+1]),
true)$

/* Test inverse of AES mixcolumns operation. */
okltest_inv_mixcolumns(f) := block(
  /* Extreme Cases for sbox OK: ??? */
  assert(totaldisrep(f([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]))=
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),
  assert(totaldisrep(f([x^7+x^6+x^5+x^4+x^3+x^2+x+1,x^6+x^4+x^3,x^3+x+1,
    x^7+x^5+x^4+1,x^4+x^3+x^2+1,x^7+x^6+x^5+1,x^6+x,x^7+x^5+x^4+x+1,x^6+x^5+
    x^2+1,x^5+x^4+x^3+x^2+x,x^7+x^6+x^4+x^2+x,x^7+x^2+1,x^7+x^5+x^3,x^7+x^6+
    x^5+x^3,x^7+x^5+x^2+1,x^6+x^5+x+1]))=[x^5+x^4+x,x^7+x^3,x^5+x^4+1,x^7+x^6+
    x^5,x^6+x+1,x^6+x^4+x^3+x,x^5+x^4+1,x^5+x^4+x^2+x+1,x^7+x^6+x^5+x^4+x^2+x,
    x^5+x^4,x^7+x^4+x^3,x^2+x+1,x^7+x^5+x^3,x^7+x^3+x^2+1,x^7+x^5+x,x^5+x^4+
    x^2]),
true)$

/* Test AES shiftrows operation */
okltest_shiftrows(f) := block(
  /* Extreme Cases for sbox */
  assert(totaldisrep(f([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]))=
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),
  assert(totaldisrep(f([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16])) =
    [1,2,3,4,6,7,8,5,11,12,9,10,16,13,14,15]),
true)$

/* Test inverse of AES shiftrows operation */
okltest_inv_shiftrows(f) := block(
  assert(totaldisrep(f([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]))=
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),
  assert(totaldisrep(f([1,2,3,4,6,7,8,5,11,12,9,10,16,13,14,15])) =
  [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]),
true)$

/* Test AES key expansion */
okltest_key_expansion(f) := block(
  /* Extreme Cases for sbox */
  assert(totaldisrep(f([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],4,10,lookup_sbox)) = 
  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,x^6+x^5+x,x^6+x^5+x,x^6+x^5+x,x^6+x^5+x,
  x^6+x^5+x+1,x^6+x^5+x+1,x^6+x^5+x+1,x^6+x^5+x+1,x^6+x^5+x+1,x^6+x^5+x+1,
  x^6+x^5+x+1,x^6+x^5+x+1,x^6+x^5+x+1,x^6+x^5+x+1,x^6+x^5+x+1,x^6+x^5+x+1,
  x^7+x^4+x^3+x+1,x^7+x^6+x^5+x^4+x^3+1,x^7+x^4+x^3+x+1,x^7+x^6+x^5+x^4+x^3+1,
  x^7+x^4+x^3,x^7+x^6+x^5+x^4+x^3+x+1,x^7+x^4+x^3,x^7+x^6+x^5+x^4+x^3+x+1,
  x^7+x^4+x^3,x^7+x^6+x^5+x^4+x^3+x+1,x^7+x^4+x^3,x^7+x^6+x^5+x^4+x^3+x+1,
  x^7+x^6+x^3+1,x^7+x^5+x^3+x,x^7+x^6+x^3+1,x^7+x^5+x^3+x,x^7+x^4,
  x^6+x^5+x^3+1,x^7+x^6+x^5+x^4+x,x^3+x+1,x^7+x^4+x^2+x+1,x^6+x^5+x^3+x^2,x^7+
  x^6+x^5+x^4+x^2,x^3+x^2+x+1,x^5+x^4+x^2,x^7+x^6+x^3+x^2+x+1,x^6+x^4+x^2+x+1,
  x^7+x^5+x^3+x^2,x^6+x^4,x^7+x^6+x^5+x^4+x^3+x,x^5+x^4+x+1,x^7+x^4+x^3+1,x^7+
  x^6+x^5+x^3+x^2+x,x^7+x^2+x+1,x^6+x^5+x^4+x^2+1,x^6+x^5+x^4+x^3+x^2+x,x^2+x,
  x^6+x^5+x^3+x,x^7+x^4+x^3+x^2+x,x^7+x^4+1,x^7+x^6+x^4+x^3+x,x^4+x^2+1,x^6+x,
  x^7+x^6+x^5+x^3+x^2+x,x^6+x^5+x^4+x^3+x+1,x^7+1,x^7+x^5+x^4+x,x^5+x^3+x+1,
  x^6+x^5+x^4+x^3+x^2+x+1,x^7+x^6+x^5+x^4+x^3,x^7+x^3+x^2+1,x^7+x^6+x^5+x^4+x+1,
  x^5+x^3+x^2+x,x^6+x^2,x^7+x^6+x^4+x^3+x,x^6+x^3+x+1,x^5+x^3+x+1,x^5+x^4+x^3+
  x^2+x,x^6+x^5+x^4+x^3+x^2,x^7+x^4+x,x^7+x^3,x^3+1,x^7+x^5+x^4+x^3+x+1,
  x^7+x^4,x^7+x^6+x^5+x^3+x^2,x^4+x^2,x^7+x^4+x^3+1,x^6+x^5+x^3+x,x^6+x^5+1,
  x^5+x^2+1,x^7+x^6+x^5+x^4+x^3+x^2+x+1,x^7+x^5+x^4+x^2,x^6+x^3+x+1,
  x^6+x^5+x^4+x^2+1,x^3+1,x^7+x^4+x^3+x+1,x^7+x^2+1,x^7+x^3+x^2,x^5+x^4+x^2+x+1,
  x^7+x^5+x^2+x+1,x^5+1,x^5+x^4+x^2+1,x^7+x^5+x^3+x^2,x^7+x^6+x^2+x,
  x^6+x^5+x^4+x^2+1,x^6+x^4,x^7+x^5+x^3+x^2+x+1,x^4+x^3+x+1,x^4+x^2+x+1,
  x^6+x^5+x,x^6+x^5+x^3+x+1,x^7+x^6+x^5+x^4,x^7+x^2+x+1,x^3+x+1,x^5+x^4+x^3+x^2,
  x^7+x^4+x^3+x+1,x^3+x^2+x,x^5+x^4+x^3+x+1,x^7+x^4+x^2+x+1,x^6+x^4+1,x^7+x^6+
  x^5+x^4+x^3+1,x^7+x^5+x^3+1,x^2+x,x^4+x^3+x^2+1,x+1,x^6+x^5+1,x^3+x,x^7+x^6+
  x^5+x^4+x^3+x,x^5+x^4+x+1,x^5+x^4+x^3,x^2,x^7+x^4+x^3+x^2+x+1,x^7+x^5+x^4+1,
  x^7+x^3+x,x^4+x^3+x^2+1,x^6+x^3+x^2,x^7+x^6+x^4+x^2,x^6+x^5+x^4+x^3+x^2+1,
  x^6+x^5+x^4+x^3+x+1,x^6+x^5+x^2+x,x^7+x^6+x^4+x^3,x^7+x^5+x^4+x^3+1,x^7+x^5
  +x^4+x+1,x^6+x^3+1,x^7+x^6+x^5+x,x^7+x^6+x^4+x^3+x,x^7+x^6+x^4+x^3+x^2+x,
  x^6+1,x^7+x^5+x^4+x^2,x^5+x^4+x^3+x^2+x,x^5+x+1,x^6+x^5+x^3+x^2+x+1,x^7+x^6
  +x^5+x^3+x^2+x+1,x^7+x^4+x,x^7+x^6+x^5+x^3+1,x^7+x^3+x^2+x+1,x^6+x^4+x^3+x+1,
  x^7+x^6+x^5+x,x^6+x^4+1,x^4+x^3,x^7+x^6+x^3+x+1,x^4+1,x^7+x^6+x^3+x^2+x+1,
  x^7+x^3+x^2+x]),
true)$

/* **********************
   * Main AES Algorithm *
   **********************
*/

/* Test individual AES round operation */
okltest_aes_round(f) := block(
  /* Extreme Cases for sbox */
  assert(totaldisrep(f([x^4+x^3+1,x^7+x^5,x^7+x^4+x^3+x,x^7+x^6+x^5+x^3+1,x^5+
  x^4+x^3+x^2+1,x^7+x^6+x^5+x^4+x^2,x^7+x^6+x^2+x,x^7+x^6+x^5+x^4+x^3,x^7+x^6+
  x^5+x+1,x^7+x^6+x^5+x,x^7+x^3+x^2+1,x^6+x^3,x^7+x^5+x^4+x^3+x^2+x,x^5+x^3+x+1
  ,x^5+x^3+x,x^3],[x^7+x^5,x^7+x^3,x^5+x+1,x^5+x^3+x,x^7+x^6+x^5+x^4+x^3+x,x^6+
  x^4+x^2,x^7+x^5+x+1,x^6+x^5+x^3+x^2,x^7+x^6+x^5+x^4+x^3+x^2+x,x^5+x^3+x^2,
  x^5+x^4+x^3+1,x^6+x^5+x^4+x^2+x,x^4+x^2+x+1,x^7+x^5+x^4+1,x^5+x^4+x^3+1,
  x^2+1],lookup_sbox)) = [x^7+x^5+x^2,x^6+x^5+x^3,x^6+x^5+x^3+x+1,x,x^7+x^4+
  x^3+x^2,x^7+x^4+x^3+x^2+x+1,x^6+x^4+x^3+x+1,x^6+x^5+x^3+x,x^6+x^5+x^4+
  x^3+x^2+x+1,x^5+x^4+x^2+1,x^7+x^6+x^5+x^3+x,x^6+x^4,x^7+x^6+x^5+x^4+x,x^5+
  x^3+x+1,x^6+x+1,x^6+x^3+1]),
  assert(totaldisrep(f([x^6+x^3,x^6+x^5+x^2+x+1,x^6+x^3+x^2+1,x^7+x^6+x^4+x^2+x
  ,x^6+x^5+x^3+x^2,x^4+x^3+x^2+1,x^7+x^6+x^5+x+1,x^6+x^4+x^3+x^2+x+1,x^6+x^3+
  x^2+x,x^7+x^4+x^3+x^2+1,x^7+x^5+x^4+1,x^6+x^4+x^3,x^7+x^6+x^5+x^3+x^2+x,x^3+
  x^2+1,x^5+x^4+x^3,x^7+x^6+x^5+x^2+x+1],[x^7+x^6+x^5+x^3+x^2+x+1,x^7+x^5+x^3,
  x^7+x^5+x^4+x^2+x,x^7+x^6+x^4+x^3+x+1,x^6+x^2,x^6+x^4+x,x^6+x^5+x^4+1,x^3+x+1
  ,x^7+x^5+x^2+1,x^6+x^4+x^3+x+1,x^5+x^2+1,x^7+x^5+x^3+x^2+1,x^6+1,x^6+x^5+x^4+
  x^3+x^2+x+1,x^5+x^4+x^3+x+1,0], lookup_sbox)) = [x^7+x^6+x^5,x^7+x^6+x^3,x^7+
  x^6+x^4+x^3+1,x^7+x^2+1,x^7+x^4+x,x^6+x^5+x+1,x^7+x^5+x^4+1,x^7+x^5+x^4+x^3,
  x^6+x^5+x^4+x^3+x^2+x+1,x^6+x^5+x+1,x^5+x^4+x^2+1,x^7+x^5+x^4+x^3+x^2+x,x^7+
  x^6+x^5+x^3,x^7+x^6,x^6+x^4,1]),
true)$

/* Test inverse of individual AES round operation */
okltest_inv_aes_round(f) := block(
  /* Extreme Cases for sbox */
  assert(totaldisrep(f([x^7+x^5+x^2,x^6+x^5+x^3,x^6+x^5+x^3+x+1,x,x^7+x^4+x^3+
  x^2,x^7+x^4+x^3+x^2+x+1,x^6+x^4+x^3+x+1,x^6+x^5+x^3+x,x^6+x^5+x^4+x^3+x^2+x+1
  ,x^5+x^4+x^2+1,x^7+x^6+x^5+x^3+x,x^6+x^4,x^7+x^6+x^5+x^4+x,x^5+x^3+x+1,x^6+x+
  1,x^6+x^3+1],[x^7+x^5,x^7+x^3,x^5+x+1,x^5+x^3+x,x^7+x^6+x^5+x^4+x^3+x,x^6+x^4
  +x^2,x^7+x^5+x+1,x^6+x^5+x^3+x^2,x^7+x^6+x^5+x^4+x^3+x^2+x,x^5+x^3+x^2,
  x^5+x^4+x^3+1,x^6+x^5+x^4+x^2+x,x^4+x^2+x+1,x^7+x^5+x^4+1,x^5+x^4+x^3+1,
  x^2+1],lookup_inv_sbox)) = [x^4+x^3+1,x^7+x^5,x^7+x^4+x^3+x,x^7+x^6+x^5+x^3+1,
  x^5+x^4+x^3+x^2+1,x^7+x^6+x^5+x^4+x^2,x^7+x^6+x^2+x,x^7+x^6+x^5+x^4+x^3,
  x^7+x^6+x^5+x+1,x^7+x^6+x^5+x,x^7+x^3+x^2+1,x^6+x^3,x^7+x^5+x^4+x^3+x^2+x,
  x^5+x^3+x+1,x^5+x^3+x,x^3]),
  assert(totaldisrep(f([x^7+x^6+x^5,x^7+x^6+x^3,x^7+x^6+
  x^4+x^3+1,x^7+x^2+1,x^7+x^4+x,x^6+x^5+x+1,x^7+x^5+x^4+1,x^7+x^5+x^4+x^3,x^6+
  x^5+x^4+x^3+x^2+x+1,x^6+x^5+x+1,x^5+x^4+x^2+1,x^7+x^5+x^4+x^3+x^2+x,x^7+x^6+
  x^5+x^3,x^7+x^6,x^6+x^4,1],[x^7+x^6+x^5+x^3+x^2+x+1,x^7+x^5+x^3,x^7+x^5+
  x^4+x^2+x,x^7+x^6+x^4+x^3+x+1,x^6+x^2,x^6+x^4+x,x^6+x^5+x^4+1,x^3+x+1,x^7+
  x^5+x^2+1,x^6+x^4+x^3+x+1,x^5+x^2+1,x^7+x^5+x^3+x^2+1,x^6+1,x^6+x^5+x^4+x^3+
  x^2+x+1,x^5+x^4+x^3+x+1,0], lookup_inv_sbox)) = [x^6+x^3,x^6+x^5+x^2+x+1,x^6+x^3+
  x^2+1,x^7+x^6+x^4+x^2+x,x^6+x^5+x^3+x^2,x^4+x^3+x^2+1,x^7+x^6+x^5+x+1,x^6+
  x^4+x^3+x^2+x+1,x^6+x^3+x^2+x,x^7+x^4+x^3+x^2+1,x^7+x^5+x^4+1,x^6+x^4+x^3,
  x^7+x^6+x^5+x^3+x^2+x,x^3+x^2+1,x^5+x^4+x^3,x^7+x^6+x^5+x^2+x+1]),
true)$

/* Test full AES encryption */
okltest_aes_encrypt(f) := block(
  assert(totaldisrep(f([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],lookup_sbox)) = 
    [x^6+x^5+x^2+x,x^7+x^6+x^5+x^3+x^2+x+1,x^7+x^3,x^7+x^6+x^3+x,
    x^7+x^6+x^5+x^3+1,x^7+x^3+x,x^6+x^3+x^2,x^5+x^4+x^2,x^6+x^3+x+1,x^5+x^3+
    x^2,x^7+x^6+x^5+x^4+x^3+x,x^5+x^3+x+1,x^7+x^6+x^4+x^2,x^5+x^4+x^3+x+1,
    x^6+x^4+x^3+1,x^5+x^3+x^2+x]),
  assert(totaldisrep(f([x^5+x^4+x,x^7+x^3,x^5+x^4+1,x^7+x^6+x^5,x^6+x+1,x^6+
    x^4+x^3+x,x^5+x^4+1,x^5+x^4+x^2+x+1,x^7+x^6+x^5+x^4+x^2+x,x^5+x^4,x^7+
    x^4+x^3,x^2+x+1,x^7+x^5+x^3,x^7+x^3+x^2+1,x^7+x^5+x,x^5+x^4+x^2],
    [x^5+x^3+x+1,x^5+x^3,x^7+x^5+x^3+x+1,x^3+1,x^6+x^5+x^4+x^3+x^2+x,
    x^7+x^5+x^3+x^2+x,x^7+x^6+x^5+x^4+x^2+x+1,x^7+x^6+x^3+x^2+x+1,
    x^4+x^2+1,x^7+x^6+x^4+x,x^4+x^2+1,x^6+x^3+x^2+x+1,x^4+x^2+x,x^7
    +x^5+x^2+x,x^7+x^3,x^5+x^4+x^3+x^2], lookup_sbox)) = 
    [x^5+x^4+x^3+1,x,x^7+x^6+x^4+x^3+x^2,x^4+x^3+1,x^5+x^2+1,x^7+x^6+x^4+
    x^3+x^2,x^4+1,x^6+x^5+x^3+x,x^7+x^2,x^3+1,x^7+x^2+1,x^3+x+1,x^4+x^3+x^2+1,
    x^7+x^6+x^5+x^4+x^3+x+1,x^7+x^4+x^2+x+1,x^5+x^4+x]),
true)$

/* Test full AES decryption */
okltest_aes_decrypt(f) := block(
  /* Extreme Cases for sbox */
  assert(totaldisrep(f([x^5+x^4+x^3+1,x,x^7+x^6+x^4+x^3+x^2,x^4+x^3+1,x^5+x^2+1
    ,x^7+x^6+x^4+x^3+x^2,x^4+1,x^6+x^5+x^3+x,x^7+x^2,x^3+1,x^7+x^2+1,x^3+x+1,
    x^4+x^3+x^2+1,x^7+x^6+x^5+x^4+x^3+x+1,x^7+x^4+x^2+x+1,x^5+x^4+x],
    [x^5+x^3+x+1,x^5+x^3,x^7+x^5+x^3+x+1,x^3+1,x^6+x^5+x^4+x^3+x^2+x,
    x^7+x^5+x^3+x^2+x,x^7+x^6+x^5+x^4+x^2+x+1,x^7+x^6+x^3+x^2+x+1,x^4+x^2+1,x^7
    +x^6+x^4+x,x^4+x^2+1,x^6+x^3+x^2+x+1,x^4+x^2+x,x^7+x^5+x^2+x,x^7+x^3,x^5+
    x^4+x^3+x^2],lookup_sbox, lookup_inv_sbox)) =
    [x^5+x^4+x,x^7+x^3,x^5+x^4+1,x^7+x^6+x^5,x^6+x+1,x^6+x^4+x^3+x,
     x^5+x^4+1,x^5+x^4+x^2+x+1,x^7+x^6+x^5+x^4+x^2+x,x^5+x^4,x^7+x^4+x^3,
     x^2+x+1,x^7+x^5+x^3,x^7+x^3+x^2+1,x^7+x^5+x,x^5+x^4+x^2]),
  assert(totaldisrep(f([x^6+x^5+x^2+x,x^7+x^6+x^5+x^3+x^2+x+1,x^7+x^3,x^7+x^6+
    x^3+x,x^7+x^6+x^5+x^3+1,x^7+x^3+x,x^6+x^3+x^2,x^5+x^4+x^2,x^6+x^3+x+1,x^5+
    x^3+x^2,x^7+x^6+x^5+x^4+x^3+x,x^5+x^3+x+1,x^7+x^6+x^4+x^2,x^5+x^4+x^3+x+1,
    x^6+x^4+x^3+1,x^5+x^3+x^2+x],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
    lookup_sbox, lookup_inv_sbox)) = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]),
true)$

/*!
\endhtmlonly
*/
