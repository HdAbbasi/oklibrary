/* Matthew Gwynne, 4.3.2008 (Swansea) */
/* Copyright 2008, 2009 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Cryptology/Lisp/CryptoSystems/Rijndael/testobjects/AdvancedEncryptionStandard.mac

Use by

oklib_load("OKlib/ComputerAlgebra/Cryptology/Lisp/CryptoSystems/Rijndael/testobjects/AdvancedEncryptionStandard.mac");

*/

/*!
\htmlonly
*/

oklib_include("OKlib/ComputerAlgebra/Cryptology/Lisp/CryptoSystems/Rijndael/AdvancedEncryptionStandard.mac")$
oklib_include("OKlib/ComputerAlgebra/Cryptology/Lisp/CryptoSystems/Rijndael/tests/AdvancedEncryptionStandard.mac")$


/* *************
   * Constants *
   *************
*/



/* ***************************************
   * Custom Field Operations             *
   ***************************************
*/


/* ***************
   * Conversions *
   ***************
*/


/* *********
   * S box *
   *********
*/

okltest_sbox(sbox);
okltest_sbox(lookup_sbox);
okltest_inv_sbox(inv_sbox);
okltest_inv_sbox(lookup_inv_sbox);

/* *************
   * Sub-bytes *
   *************
*/



/* **************
   * Shift rows *
   **************
*/

okltest_shiftrows(shiftrows);
okltest_inv_shiftrows(inv_shiftrows);

/* ***************
   * Mix columns *
   ***************
*/

okltest_mixcolumn(lookup_mixcolumn);
okltest_inv_mixcolumn(lookup_inv_mixcolumn);
okltest_mixcolumn(mixcolumn);
okltest_inv_mixcolumn(inv_mixcolumn);

okltest_mixcolumns(mixcolumns);
okltest_inv_mixcolumns(inv_mixcolumns);

/* *****************
   * Key expansion *
   *****************
*/

okltest_key_expansion(key_expansion); 

/* *********************************
   * AES encryption and decryption *
   *********************************
*/

okltest_aes_round(aes_round);
okltest_inv_aes_round(inv_aes_round);

okltest_aes_encrypt(aes_encrypt);
okltest_aes_decrypt(aes_decrypt);

/* *************************************
   * Convenience instantiations of AES *
   *************************************
*/

okltest_aes_encrypt_generic(aes_encrypt_l);
if oklib_test_level >= 1 then okltest_aes_encrypt_generic(aes_encrypt_f)
else true;

okltest_aes_decrypt_generic(aes_decrypt_l);
if oklib_test_level >= 1 then okltest_aes_decrypt_generic(aes_decrypt_f)
else true;

okltest_aes_encrypt_hex(aes_encrypt_hex);
okltest_aes_decrypt_hex(aes_decrypt_hex);

okltest_aes_int(aes_int);

/*!
\endhtmlonly
*/
