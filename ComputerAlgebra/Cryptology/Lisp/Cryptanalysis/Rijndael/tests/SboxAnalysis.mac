/* Matthew Gwynne, 2.4.2008 (Swansea) */
/* Copyright 2008 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Cryptology/Lisp/Cryptanalysis/Rijndael/tests/SboxAnalysis.mac
  \brief Tests for the analysis functions of the AES Sbox

Use by

oklib_load("Transitional/ComputerAlgebra/Cryptology/Lisp/Cryptanalysis/Rijndael/tests/SboxAnalysis.mac");

*/

/*!
\htmlonly
*/

oklib_include("Transitional/ComputerAlgebra/TestSystem/Lisp/Asserts.mac");

kill(f)$


okltest_polynomial2list(f) := block(
  for n : 0 thru 3 do
    assert(f(n,0) = []),
  for n : 0 thru 3 do
    assert(f(0,n) = makelist(0,i,1,n)),
  for n : 0 thru 3 do
    assert(f(n,1) = [n]),
  for n : 0 thru 3 do
    for m : 0 thru 3 do
      assert(first(f(m*x^n,n+1)) = m),
  assert(f(x^7+5*x+2,10) = [0,0,1,0,0,0,0,0,5,2]),
  assert(f(x^7+5*x+2,10) = [0,0,1,0,0,0,0,0,5,2]),
  assert(f(x^4+x+1,8) = [0,0,0,1,0,0,1,1]),
true)$

okltest_binary_list_to_dnf_c(f) := block(
  assert(f([]) = {}),
  assert(f([0,0,0]) = {-1,-2,-3}),
  assert(f([0,1,0]) = {-1,2,-3}),
  assert(f([1,0,0]) = {1,-2,-3}),
  assert(f([1,1,1]) = {1,2,3}),
  assert(f([1,0,0,1,1,0,0,1]) = {1,-2,-3,4,5,-6,-7,8}),
true)$

okltest_generate_full_aes_sbox_dnf_fcs(f) := block([sboxFullDNF],
  sboxFullDNF : f(),
  assert(length(sboxFullDNF[2]) = 256),
  assert(length(sboxFullDNF[1]) = 16),
  assert(apply_pa(setify(makelist(i,i,1,8)), sboxFullDNF[2])=
    {{-14,-13,-12,-9,10,11,15,16}}),
  assert(apply_pa(setify(makelist(-i,i,1,8)), sboxFullDNF[2])=
    {{-16,-13,-11,-10,-9,12,14,15}}),
true)$

/*!
\endhtmlonly
*/
