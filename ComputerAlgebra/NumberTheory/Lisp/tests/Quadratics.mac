/* Oliver Kullmann, 5.8.2009 (Swansea) */
/* Copyright 2009, 2016 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/NumberTheory/Lisp/tests/Quadratics.mac
  \brief Tests for auxiliary number theory functions

Use by

oklib_load("OKlib/ComputerAlgebra/NumberTheory/Lisp/tests/Quadratics.mac");

*/

/*!
\htmlonly
*/

oklib_include("OKlib/ComputerAlgebra/TestSystem/Lisp/Asserts.mac")$

oklib_include("OKlib/ComputerAlgebra/NumberTheory/Lisp/Quadratics.mac")$

kill(f)$

/* ******************************
   * Counting integer equations *
   ******************************
*/

okltest_count_quadintsol(f) := block(
  assert(f(0,0) = 1),
  assert(f(0,-1) = 0),
  assert(f(0,1) = 2),
  assert(create_list(f(1,n),n,0,9) = [0,0,1,2,4,5,7,8,10,12]),
  /* XXX */
  if oklib_test_level = 0 then return(true),
  assert(create_list(f(1,n),n,10,20) = [14,15,18,19,21,23,26,27,30,31,34]),
  true)$


/* ******************
   * Square numbers *
   ******************
*/

okltest_isquarep(f) := (
  assert(f(-1) = false),
  assert(f(0) = true),
  assert(f(1) = true),
  assert(f(2) = false),
  assert(f(4) = true),
  for n : 2 thru 100 do (
    assert(f(n^2) = true),
    assert(f(n^2-1) = false)
  ),
  true)$


/* *******************
   * Sums of squares *
   *******************
*/

okltest_pythtripp(f) := (
  assert(f(3,4,5) = true),
  assert(f(-3,4,5) = false),
  assert(f(4,3,5) = false),
  assert(f(3,4,5.0) = false),
  /* XXX */
  true)$

okltest_pythtriptp(f) := (
  assert(f(0) = false),
  assert(f([3,4,5]) = true),
  assert(f([5,4,3]) = false),
  /* XXX */
  true)$

okltest_pythtrip_hypo_bydef(f) := (
  assert(f(-1) = []),
  assert(f(0) = []),
  assert(f(5) = [[3,4,5]]),
  assert(f(25) = [[15,20,25],[7,24,25]]),
  assert(f(5.0) = []),
  for n : 0 thru (if oklib_test_level=0 then 100 else if oklib_test_level=1 then 200 else 1000) do
    assert(length(f(n)) = count_pythtrip_hypo(n)),
  true)$

okltest_count_pythtrip_hypo_bydef(f) := (
  assert(f(-1) = 0),
  assert(f(50) = 2),
  assert(f(65) = 4),
  true)$

okltest_count_pythtrip_hypo(f) := (
  assert(f(-1) = 0),
  assert(f(20000) = 4),
  assert(f(4392910636193001837) = 1),
  true)$

/*!
\endhtmlonly
*/
