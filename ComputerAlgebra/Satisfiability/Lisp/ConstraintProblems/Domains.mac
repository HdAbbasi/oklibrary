/* Oliver Kullmann, 1.12.2007 (Swansea) */
/* Copyright 2007, 2008, 2009 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Satisfiability/Lisp/ConstraintProblems/Domains.mac
  \brief Functions for handling domains

Use by

oklib_load("OKlib/ComputerAlgebra/Satisfiability/Lisp/ConstraintProblems/Domains.mac");

*/

/*!
\htmlonly
*/

/*
 A "domain association" is a non-empty list D of sets, where the variables are
 {1, ..., |D|}, and D[i] is the domain of variable i.
*/

/* ********************
   * Helper functions *
   ********************
*/

/* For a domain association returns the list of domain sizes: */
dom_lengths(dom) := map(length,dom)$
/* For a domain association returns the list of logs of domain sizes.
   Prerequisite: No empty domains. */
log_dom_lengths(dom) := float(map(log,dom_lengths(dom)))$


/* ***************************
   * Heuristical evaluations *
   ***************************
*/

/* For a domain association returns the minimal domain size. */
min_dom_size(dom) := lmin(dom_lengths(dom))$

/* For a domain association returns the maximal domain size */
max_dom_size(dom) := lmax(dom_lengths(dom))$

/* For a domain association returns the sum of logarithms of domain sizes */
sum_log_dom_size(dom) := xreduce("+", log_dom_lengths(dom))$

/*!
\endhtmlonly
*/
