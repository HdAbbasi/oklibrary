/* Oliver Kullmann, 2.2.2008 (Swansea) */
/* Copyright 2008 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Satisfiability/Lisp/ClauseSets/tests/Hypergraphs.mac
  \brief Tests for graph- and hypergraph-functionality regarding clause-sets

Use by

oklib_load("Transitional/ComputerAlgebra/Satisfiability/Lisp/ClauseSets/tests/Hypergraphs.mac");

*/

/*!
\htmlonly
*/

oklib_include("Transitional/ComputerAlgebra/TestSystem/Lisp/Asserts.mac");
oklib_include("Transitional/ComputerAlgebra/Satisfiability/Lisp/Generators/Generators.mac");
oklib_include("Transitional/ComputerAlgebra/Graphs/Lisp/Basic.mac");

kill(f)$

/* *******************
   * Transformations *
   *******************
*/

okltest_cvg_cs(f) := block([F,G],
  assert(f({}) = [{},{}]),
  assert(f({{}}) = [{{}},{}]),
  for n : 0 thru 5 do (
    F : full_fcs(n)[2],
    G : f(F),
    assert(G[1] = F),
    assert(completegrp(G))
  ),
  true)$


/* ************
   * Measures *
   ************
*/

okltest_min_degree_cvg_cs(f) := block(
  assert(f({}) = inf),
  assert(f({{}}) = 0),
  assert(f({{1}}) = 0),
  assert(f({{1},{-1}}) = 1),
  assert(f({{1},{-1},{}}) = 0),
  true)$

okltest_max_degree_cvg_cs(f) := block(
  assert(f({}) = minf),
  assert(f({{}}) = 0),
  assert(f({{1}}) = 0),
  assert(f({{1},{-1}}) = 1),
  assert(f({{1},{-1},{}}) = 1),
  true)$

okltest_deficiency_fcs(f) := block(
  assert(f([{},{}]) = 0),
  assert(f([{},{{}}]) = 1),
  assert(f([{1},{{1}}]) = 0),
  assert(f([{1},{{1},{-1}}]) = 1),
  assert(f([{1},{{1},{-1},{}}]) = 2),
  assert(f([{1,2},{{1},{-1}}]) = 0),
  true)$

okltest_max_deficiency_fcs(f) := block(
  assert(f([{},{}]) = 0),
  assert(f([{},{{}}]) = 1),
  assert(f([{1},{{1}}]) = 0),
  assert(f([{1},{{1},{-1}}]) = 1),
  assert(f([{1},{{1},{-1},{}}]) = 2),
  assert(f([{1,2},{{1},{-1}}]) = 1),
  true)$


/*!
\endhtmlonly
*/
