/* Oliver Kullmann, 17.4.2009 (Swansea) */
/* Copyright 2009, 2011 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Satisfiability/Lisp/ClauseSets/tests/NonBoolean.mac
  \brief Tests for the basic operations with clause-sets

Use by

oklib_load("OKlib/ComputerAlgebra/Satisfiability/Lisp/ClauseSets/tests/NonBoolean.mac");

*/

/*!
\htmlonly
*/

oklib_include("OKlib/ComputerAlgebra/TestSystem/Lisp/Asserts.mac")$
oklib_include("OKlib/ComputerAlgebra/Satisfiability/Lisp/ClauseSets/NonBoolean.mac")$

kill(f)$


/* **************************
   * Variables and literals *
   **************************
*/

okltest_nbl_p(f) := block([v,e],
  assert(f(1) = false),
  assert(f([1]) = false),
  assert(f([1,2]) = true),
  assert(f([v,e]) = true),
  assert(f([1,2,3]) = false),
  true)$

okltest_var_nbl(f) := block([x,y],
  assert(f([x,y]) = x),
  true)$

okltest_val_nbl(f) := block([x,y],
  assert(f([x,y]) = y),
  true)$

okltest_snbl_p(f) := block([x,y,z],
  assert(f(1) = false),
  assert(f([]) = false),
  assert(f([x,y,z]) = false),
  assert(f([x,y,-1]) = true),
  assert(f([x,y,1]) = true),
  true)$

okltest_var_snbl(f) := block([x,y,z],
  assert(f([x,y,z]) = x),
  true)$

okltest_val_snbl(f) := block([x,y,z],
  assert(f([x,y,z]) = y),
  true)$

okltest_sgn_snbl(f) := block([x,y,z],
  assert(f([x,y,z]) = z),
  true)$

okltest_pl_p(f) := block([x,y],
  assert(f(0) = false),
  assert(f([]) = false),
  assert(f([x,y]) = false),
  assert(f([x,{}]) = true),
  true)$

okltest_var_pl(f) := block([x,y],
  assert(f([x,y]) = x),
  true)$

okltest_val_pl(f) := block([x,y],
  assert(f([x,y]) = y),
  true)$

okltest_spl_p(f) := block([x,y,z],
  assert(f(0) = false),
  assert(f([]) = false),
  assert(f([x,y,z]) = false),
  assert(f([x,{},z]) = false),
  assert(f([x,{},1]) = true),
  assert(f([x,{},-1]) = true),
  true)$

okltest_var_spl(f) := block([x,y,z],
  assert(f([x,y,z]) = x),
  true)$

okltest_val_spl(f) := block([x,y,z],
  assert(f([x,y,z]) = y),
  true)$

okltest_sgn_spl(f) := block([x,y,z],
  assert(f([x,y,z]) = z),
  true)$


/* ***********
   * Clauses *
   ***********
*/

okltest_nbc_p(f) := block([x,y],
  assert(f(0) = false),
  assert(f({x}) = false),
  assert(f({}) = true),
  assert(f({[x,y]}) = true),
  assert(f({[x,y],[x,1]}) = false),
  assert(f({[x,y],[1,x]}) = true),
  true)$

okltest_var_nbc(f) := (
  assert(f({}) = {}),
  assert(f({[1,2],[2,2],[3,1]}) = {1,2,3}),
  true)$

okltest_val_nbc(f) := block(
  assert(f({}) = {}),
  assert(f({[1,2],[2,2],[3,1]}) = {1,2}),
  true)$

okltest_snbc_p(f) := block([x,y],
  assert(f(0) = false),
  assert(f({[x,y]}) = false),
  assert(f({}) = true),
  assert(f({[x,y,1]}) = true),
  assert(f({[x,y,-1]}) = true),
  assert(f({[x,y,1],[x,z,-1]}) = false),
  assert(f({[x,y,1],[y,x,1],[z,z,-1]}) = true),
  true)$

okltest_var_snbc(f) := (
  assert(f({}) = {}),
  assert(f({[1,2,1],[2,2,-1],[3,1,1]}) = {1,2,3}),
  true)$

okltest_val_snbc(f) := (
  assert(f({}) = {}),
  assert(f({[1,2,1],[2,2,1],[3,1,1]}) = {1,2}),
  true)$

okltest_sgn_snbc(f) := (
  assert(f({}) = {}),
  assert(f({[1,2,1],[2,2,1],[3,1,1]}) = {1}),
  assert(f({[1,2,1],[2,2,-1],[3,1,1]}) = {1,-1}),
  true)$


/* ***************
   * Clause-sets *
   ***************
*/

okltest_nbcs_p(f) := block([x,y],
  assert(f(0) = false),
  assert(f({0}) = false),
  assert(f({}) = true),
  assert(f({{}}) = true),
  assert(f({{[x,y]}}) = true),
  assert(f({{[x,y,x]}}) = false),
  /* XXX */
  true)$

okltest_var_nbcs(f) := (
  assert(f({}) = {}),
  assert(f({{}}) = {}),
  assert(f({{[1,5]}}) = {1}),
  assert(f({{[1,5],[2,6]},{[1,7],[3,8]}}) = {1,2,3}),
  true)$

okltest_val_nbcs(f) := (
  assert(f({}) = {}),
  assert(f({{}}) = {}),
  assert(f({{[1,5]}}) = {5}),
  assert(f({{[1,5],[2,6]},{[1,6],[3,7]}}) = {5,6,7}),
  true)$

okltest_lit_nbcs(f) := (
  assert(f({}) = {}),
  assert(f({{}}) = {}),
  assert(f({{[1,5]}}) = {[1,5]}),
  assert(f({{[1,5],[2,6]},{[1,7],[3,8]}}) = {[1,5],[2,6],[1,7],[3,8]}),
  true)$

okltest_snbcs_p(f) := block([x,y],
  assert(f(0) = false),
  assert(f({0}) = false),
  assert(f({}) = true),
  assert(f({{}}) = true),
  assert(f({{[x,y,1]}}) = true),
  assert(f({{[x,y,x]}}) = false),
  true)$

okltest_var_snbcs(f) := (
  assert(f({}) = {}),
  assert(f({{}}) = {}),
  assert(f({{[1,5,1]}}) = {1}),
  assert(f({{[1,5,1],[2,6,-1]},{[1,7,1],[3,8,-1]}}) = {1,2,3}),
  true)$

okltest_val_snbcs(f) := (
  assert(f({}) = {}),
  assert(f({{}}) = {}),
  assert(f({{[1,5,1]}}) = {5}),
  assert(f({{[1,5,1],[2,6,1]},{[1,6,-1],[3,7,-1]}}) = {5,6,7}),
  true)$

okltest_sgn_snbcs(f) := (
  assert(f({}) = {}),
  assert(f({{}}) = {}),
  assert(f({{[1,5,1]}}) = {1}),
  assert(f({{[1,5,1],[2,6,1]},{[1,6,-1],[3,7,-1]}}) = {1,-1}),
  true)$

okltest_lit_snbcs(f) := (
  assert(f({}) = {}),
  assert(f({{}}) = {}),
  assert(f({{[1,5,1]}}) = {[1,5,1]}),
  assert(f({{[1,5,1],[2,6,-1]},{[1,7,-1],[3,8,1]}}) = {[1,5,1],[2,6,-1],[1,7,-1],[3,8,1]}),
  true)$

okltest_nbcl_p(f) := block([x,y],
  assert(f(0) = false),
  assert(f([0]) = false),
  assert(f([]) = true),
  assert(f([{}]) = true),
  assert(f([{[x,y]}]) = true),
  assert(f([{[x,y,x]}]) = false),
  /* XXX */
  true)$

okltest_var_nbcl(f) := (
  assert(f([]) = {}),
  assert(f([{}]) = {}),
  assert(f([{[1,5]}]) = {1}),
  assert(f([{[1,5],[2,6]},{[1,7],[3,8]}]) = {1,2,3}),
  true)$

okltest_val_nbcl(f) := (
  assert(f([]) = {}),
  assert(f([{}]) = {}),
  assert(f([{[1,5]}]) = {5}),
  assert(f([{[1,5],[2,6]},{[1,6],[3,7]}]) = {5,6,7}),
  true)$

okltest_lit_nbcl(f) := (
  assert(f([]) = {}),
  assert(f([{}]) = {}),
  assert(f([{[1,5]}]) = {[1,5]}),
  assert(f([{[1,5],[2,6]},{[1,7],[3,8]}]) = {[1,5],[2,6],[1,7],[3,8]}),
  true)$

okltest_snbcl_p(f) := block([x,y,z],
  assert(f(0) = false),
  assert(f([0]) = false),
  assert(f([]) = true),
  assert(f([{}]) = true),
  assert(f([{[x,y,1]}]) = true),
  assert(f([{[x,y,x]}]) = false),
  assert(f([{[x,y,1],[x,z,-1]}]) = false),
  assert(f([{[x,y,1],[y,z,-1]}]) = true),
  true)$

okltest_var_snbcl(f) := block(
  assert(f([]) = {}),
  assert(f([{}]) = {}),
  assert(f([{[1,5,1]}]) = {1}),
  assert(f([{[1,5,1],[2,6,1]},{[1,7,1],[3,8,-1]}]) = {1,2,3}),
  true)$

okltest_val_snbcl(f) := block(
  assert(f([]) = {}),
  assert(f([{}]) = {}),
  assert(f([{[1,5,-1]}]) = {5}),
  assert(f([{[1,5,1],[2,6,1]},{[1,6,1],[3,7,-1]}]) = {5,6,7}),
  true)$

okltest_sgn_snbcl(f) := (
  assert(f([]) = {}),
  assert(f([{}]) = {}),
  assert(f([{[1,5,-1]}]) = {-1}),
  assert(f([{[1,5,1],[2,6,1]},{[1,6,1],[3,7,-1]}]) = {1,-1}),
  true)$

okltest_lit_snbcl(f) := block(
  assert(f([]) = {}),
  assert(f([{}]) = {}),
  assert(f([{[1,5,1]}]) = {[1,5,1]}),
  assert(f([{[1,5,-1],[2,6,-1]},{[1,7,-1],[3,8,1]}]) = {[1,5,-1],[2,6,-1],[1,7,-1],[3,8,1]}),
  true)$

okltest_nbfcs_p(f) := (
  assert(f(0) = false).
  assert(f([0]) = false),
  assert(f([0,0]) = false),
  assert(f([{},{}]) = true),
  assert(f([{},{{}}]) = true),
  assert(f([{1},{{[1,5]}}]) = true),
  assert(f([{1},{{[2,1]}}]) = false),
  /* XXX */
  true)$

okltest_var_nbfcs(f) := (
  assert(f([{},{}]) = {}),
  assert(f([{},{{}}]) = {}),
  assert(f([{1},{}]) = {1}),
  assert(f([{1},{{}}]) = {1}),
  assert(f([{1,2},{{[1,5]}}]) = {1,2}),
  true)$

okltest_val_nbfcs(f) := (
  assert(f([{},{}]) = {}),
  assert(f([{},{{}}]) = {}),
  assert(f([{1},{}]) = {}),
  assert(f([{1},{{}}]) = {}),
  assert(f([{1,2},{{[1,5]}}]) = {5}),
  assert(f([{1,3,5},{{[1,11],[3,22]},{[5,11],[3,33]}}]) = {11,22,33}),
  true)$

okltest_lit_nbfcs(f) := (
  assert(f([{},{}]) = {}),
  assert(f([{},{{}}]) = {}),
  assert(okltest_lit_nbcs(buildq([f], lambda([F], f(nbcs2nbfcs(F))))) = true),
  true)$

okltest_snbfcs_p(f) := (
  assert(f(0) = false).
  assert(f([0]) = false),
  assert(f([0,0]) = false),
  assert(f([{},{}]) = true),
  assert(f([{},{{}}]) = true),
  assert(f([{1},{{[1,5,1]}}]) = true),
  assert(f([{1},{{[2,1,-1]}}]) = false),
  assert(f([{1,2},{{[1,-77,-1],[1,88,1]}}]) = false),
  assert(f([{1,2},{{[1,-77,-1],[2,88,1]}}]) = true),
  true)$

okltest_var_snbfcs(f) := (
  assert(f([{},{}]) = {}),
  assert(f([{},{{}}]) = {}),
  assert(f([{1},{}]) = {1}),
  assert(f([{1},{{}}]) = {1}),
  assert(f([{1,2},{{[1,5,1]}}]) = {1,2}),
  true)$

okltest_val_snbfcs(f) := (
  assert(f([{},{}]) = {}),
  assert(f([{},{{}}]) = {}),
  assert(f([{1},{}]) = {}),
  assert(f([{1},{{}}]) = {}),
  assert(f([{1,2},{{[1,5,-1]}}]) = {5}),
  assert(f([{1,3,5},{{[1,11,1],[3,22,-1]},{[5,11,1],[3,33,-1]}}]) = {11,22,33}),
  true)$

okltest_sgn_snbfcs(f) := (
  assert(f([{},{}]) = {}),
  assert(f([{},{{}}]) = {}),
  assert(f([{1},{}]) = {}),
  assert(f([{1},{{}}]) = {}),
  assert(f([{1,2},{{[1,5,-1]}}]) = {-1}),
  assert(f([{1,3,5},{{[1,11,1],[3,22,-1]},{[5,11,1],[3,33,-1]}}]) = {1,-1}),
  true)$

okltest_lit_snbfcs(f) := (
  assert(f([{},{}]) = {}),
  assert(f([{},{{}}]) = {}),
  assert(okltest_lit_snbcs(buildq([f], lambda([F], f(snbcs2snbfcs(F))))) = true),
  true)$

okltest_nbfcl_p(f) := (
  assert(f(0) = false).
  assert(f([0]) = false),
  assert(f([0,0]) = false),
  assert(f([{},[]]) = false),
  assert(f([[],{}]) = false),
  assert(f([[],[]]) = true),
  assert(f([[],[{}]]) = true),
  assert(f([[1],[{[1,5]}]]) = true),
  assert(f([[1],[{[2,1]}]]) = false),
  assert(f([[1,2],[{[1,10],[2,11]}]]) = true),
  assert(f([[1,2,2],[{[1,10],[2,11]}]]) = false),
  /* XXX */
  true)$

okltest_var_nbfcl(f) := (
  assert(f([[],[]]) = {}),
  assert(f([[],[{}]]) = {}),
  assert(f([[1],[]]) = {1}),
  assert(f([[1],[{}]]) = {1}),
  assert(f([[1,2],[{[1,5]}]]) = {1,2}),
  assert(okltest_var_nbfcs(buildq([f],lambda([FF],f(nbfcs2nbfcl(FF))))) = true),
  true)$

okltest_val_nbfcl(f) := (
  assert(f([[],[]]) = {}),
  assert(f([[],[{}]]) = {}),
  assert(f([[1],[]]) = {}),
  assert(f([[1],[{}]]) = {}),
  assert(f([[1,2],[{[1,5]}]]) = {5}),
  assert(f([[1,3,5],[{[1,11],[3,22]},{[5,11],[3,33]}]]) = {11,22,33}),
  assert(okltest_val_nbfcs(buildq([f],lambda([FF],f(nbfcs2nbfcl(FF))))) = true),
  true)$

okltest_lit_nbfcl(f) := (
  assert(f([[],[]]) = {}),
  assert(f([[],[{}]]) = {}),
  assert(okltest_lit_nbcl(buildq([f], lambda([F], f(nbcl2nbfcl(F))))) = true),
  true)$

okltest_snbfcl_p(f) := (
  assert(f(0) = false).
  assert(f([0]) = false),
  assert(f([0,0]) = false),
  assert(f([{},[]]) = false),
  assert(f([[],{}]) = false),
  assert(f([[],[]]) = true),
  assert(f([[],[{}]]) = true),
  assert(f([[1],[{[1,5,1]}]]) = true),
  assert(f([[1],[{[2,1,1]}]]) = false),
  assert(f([[1,2],[{[1,10,-1],[2,11,-1]}]]) = true),
  assert(f([[1,2,2],[{[1,10,1],[2,11,1]}]]) = false),
  /* XXX */
  true)$

okltest_var_snbfcl(f) := (
  assert(f([[],[]]) = {}),
  assert(f([[],[{}]]) = {}),
  assert(f([[1],[]]) = {1}),
  assert(f([[1],[{}]]) = {1}),
  assert(f([[1,2],[{[1,5,-1]}]]) = {1,2}),
  assert(okltest_var_snbfcs(buildq([f],lambda([FF],f(snbfcs2snbfcl(FF))))) = true),
  true)$

okltest_val_snbfcl(f) := (
  assert(f([[],[]]) = {}),
  assert(f([[],[{}]]) = {}),
  assert(f([[1],[]]) = {}),
  assert(f([[1],[{}]]) = {}),
  assert(f([[1,2],[{[1,5,1]}]]) = {5}),
  assert(f([[1,3,5],[{[1,11,-1],[3,22,1]},{[5,11,1],[3,33,-1]}]]) = {11,22,33}),
  assert(okltest_val_snbfcs(buildq([f],lambda([FF],f(snbfcs2snbfcl(FF))))) = true),
  true)$

okltest_sgn_snbfcl(f) := (
  assert(f([[],[]]) = {}),
  assert(f([[],[{}]]) = {}),
  assert(f([[1],[]]) = {}),
  assert(f([[1],[{}]]) = {}),
  assert(f([[1,2],[{[1,5,1]}]]) = {1}),
  assert(f([[1,3,5],[{[1,11,-1],[3,22,1]},{[5,11,1],[3,33,-1]}]]) = {1,-1}),
  assert(okltest_sgn_snbfcs(buildq([f],lambda([FF],f(snbfcs2snbfcl(FF))))) = true),
  true)$

okltest_lit_snbfcl(f) := (
  assert(f([[],[]]) = {}),
  assert(f([[],[{}]]) = {}),
  assert(okltest_lit_snbcl(buildq([f], lambda([F], f(snbcl2snbfcl(F))))) = true),
  true)$

okltest_nbfcsud_p(f) := (
  assert(f(0) = false),
  assert(f([]) = false),
  assert(f([0,0,0]) = false),
  assert(f([{},{},{}]) = true),
  assert(f([{1},{},{10}]) = true),
  assert(f([{1},{{}},{10}]) = true),
  assert(f([{1},{{[2,10]}},{10}]) = false),
  assert(f([{1},{{[1,11]}},{10}]) = false),
  assert(f([{1},{{[1,10]}},{10}]) = true),
  /* XXX */
  true)$

okltest_snbfcsud_p(f) := (
  assert(f(0) = false),
  assert(f([]) = false),
  assert(f([0,0,0]) = false),
  assert(f([{},{},{}]) = true),
  assert(f([{1},{},{10}]) = true),
  assert(f([{1},{{}},{10}]) = true),
  assert(f([{1},{{[2,10,1]}},{10}]) = false),
  assert(f([{1},{{[1,11,-1]}},{10}]) = false),
  assert(f([{1},{{[1,10]}},{10}]) = false),
  assert(f([{1,2},{{[2,10,1]},{[1,11,-1]}},{10}]) = false),
  assert(f([{1,2},{{[2,10,1]},{[1,11,-1]}},{10,11}]) = true),
  true)$

okltest_nbfclud_p(f) := block(
  assert(f(0) = false),
  assert(f([]) = false),
  assert(f([0,0,0]) = false),
  assert(f([[],[],[]]) = true),
  assert(f([[1],[],[10]]) = true),
  assert(f([[1],[{}],[10]]) = true),
  assert(f([[1],[{[2,10]}],[10]]) = false),
  assert(f([[1],[{[1,11]}],[10]]) = false),
  assert(f([[1],[{[1,10]}],[10]]) = true),
  assert(f([[1,2],[{[1,10]}],[10,11]]) = true),
  assert(f([[1,2,1],[{[1,10]}],[10,11]]) = false),
  assert(f([[1,2],[{[1,10]}],[10,11,11]]) = false),
  /* XXX */
  true)$

okltest_snbfclud_p(f) := block(
  assert(f(0) = false),
  assert(f([]) = false),
  assert(f([0,0,0]) = false),
  assert(f([[],[],[]]) = true),
  assert(f([[1],[],[10]]) = true),
  assert(f([[1],[{}],[10]]) = true),
  assert(f([[1],[{[2,10,1]}],[10]]) = false),
  assert(f([[1],[{[1,11,1]}],[10]]) = false),
  assert(f([[1],[{[1,10,1]}],[10]]) = true),
  assert(f([[1,2],[{[1,10,-1]}],[10,11]]) = true),
  assert(f([[1,2,1],[{[1,10,1]}],[10,11]]) = false),
  assert(f([[1,2],[{[1,10,1]}],[10,11,11]]) = false),
  assert(f([[1,2],[{[1,10,1]},{[2,12,-1]}],[10,11,12]]) = true),
  true)$

okltest_nbfcsfd_p(f) := block([D],
  assert(f(0) = false),
  assert(f([]) = false),
  assert(f([0,0,0]) = false),
  assert(f([{},{},{}]) = true),
  assert(f([{1},{},D]) = true),
  assert(f([{1},{{[1,10]}},D]) = false),
  assert(f([{1},{{[1,10]}},lambda([x],11)]) = false),
  assert(f([{1},{{[1,10]}},lambda([x],10)]) = false),
  assert(f([{1},{{[1,10]}},lambda([x],{10})]) = true),
  /* XXX */
  true)$

okltest_snbfcsfd_p(f) := block([D],
  assert(f(0) = false),
  assert(f([]) = false),
  assert(f([0,0,0]) = false),
  assert(f([{},{},{}]) = true),
  assert(f([{1},{},D]) = true),
  assert(f([{1},{{[1,10]}},D]) = false),
  assert(f([{1},{{[1,10]}},lambda([x],11)]) = false),
  assert(f([{1},{{[1,10]}},lambda([x],10)]) = false),
  assert(f([{1},{{[1,10]}},lambda([x],{10})]) = false),
  assert(f([{1},{{[1,10,1]}},lambda([x],{10})]) = true),
  assert(f([{1,2},{{[1,77,1],[2,88,-1]}},lambda([x],{77})]) = false),
  assert(f([{1,2},{{[1,77,1],[2,88,-1]}},lambda([x],if x=1 then {77} else {88})]) = true),
  true)$

okltest_nbfclfd_p(f) := block([D],
  assert(f(0) = false),
  assert(f([]) = false),
  assert(f([0,0,0]) = false),
  assert(f([[],[],[]]) = true),
  assert(f([[1],[],D]) = true),
  assert(f([[1],[{[1,10]}],D]) = false),
  assert(f([[1],[{[1,10]}],lambda([x],11)]) = false),
  assert(f([[1],[{[1,10]}],lambda([x],10)]) = false),
  assert(f([[1],[{[1,10]}],lambda([x],{10})]) = true),
  /* XXX */
  true)$

okltest_snbfclfd_p(f) := block([D],
  assert(f(0) = false),
  assert(f([]) = false),
  assert(f([0,0,0]) = false),
  assert(f([[],[],[]]) = true),
  assert(f([[1],[],D]) = true),
  assert(f([[1],[{[1,10,1]}],D]) = false),
  assert(f([[1],[{[1,10,-1]}],lambda([x],11)]) = false),
  assert(f([[1],[{[1,10,1]}],lambda([x],10)]) = false),
  assert(f([[1],[{[1,10,1]}],lambda([x],{10})]) = true),
  assert(f([[1,2],[{[1,77,1],[2,88,-1]}],lambda([x],{77})]) = false),
  assert(f([[1,2],[{[1,77,1],[2,88,-1]}],lambda([x],if x=1 then {77} else {88})]) = true),
  true)$

okltest_nbfcsfd_equalp(f) := block(
  /* XXX */
  true)$


/* ***************
   * Conversions *
   ***************
*/

okltest_nbcs2nbcl(f) := (
  assert(f({}) = []),
  assert(f({{}}) = [{}]),
  /* XXX */
  true)$

okltest_nbcl2nbcs(f) := (
  assert(f([]) = {}),
  assert(f([{}]) = {{}}),
  /* XXX */
  true)$

okltest_nbfcs2nbfcl(f) := (
  assert(f([{},{}]) = [[],[]]),
  assert(f([{},{{}}]) = [[],[{}]]),
  /* XXX */
  true)$

okltest_nbfcl2nbfcs(f) := (
  assert(f([[],[]]) = [{},{}]),
  assert(f([[],[{}]]) = [{},{{}}]),
  /* XXX */
  true)$

okltest_nbfcs2nbcs(f) := block([A,B],
  assert(f([A,B]) = B),
  /* XXX */
  true)$

okltest_nbfcl2nbcl(f) := block([A,B],
  assert(f([A,B]) = B),
  /* XXX */
  true)$

okltest_nbfcsud2nbfclud(f) := (
  assert(f([{},{},{}]) = [[],[],[]]),
  assert(f([{1,2,3},{{}},{10,11,12}]) = [[1,2,3],[{}],[10,11,12]]),
  /* XXX */
  true)$

okltest_nbfclud2nbfcsud(f) := (
  assert(f([[],[],[]]) = [{},{},{}]),
  assert(f([[1,2,3],[{}],[10,11,12]]) = [{1,2,3},{{}},{10,11,12}]),
  /* XXX */
  true)$

okltest_nbfcsfd2nbfclfd(f) := block([D],
  assert(nbfcsfd_equalp(f([{},{},D]), [[],[],D]) = true),
  assert(nbfcsfd_equalp(f([{1,2,3},{{}},D]), [[1,2,3],[{}],D]) = true),
  /* XXX */
  true)$

okltest_nbfclfd2nbfcsfd(f) := block([D],
  assert(nbfcsfd_equalp(f([[],[],D]), [{},{},D])),
  assert(nbfcsfd_equalp(f([[1,2,3],[{}],lambda([x],[x])]), [{1,2,3},{{}},lambda([x],{x})])),
  /* XXX */
  true)$

okltest_nbcs2nbfcs(f) := (
  assert(f({}) = [{},{}]),
  assert(f({{}}) = [{},{{}}]),
  assert(f({{[1,10]}}) = [{1},{{[1,10]}}]),
  /* XXX */
  true)$

okltest_nbcl2nbfcl(f) := (
  assert(f([]) = [[],[]]),
  assert(f([{}]) = [[],[{}]]),
  assert(f([{[1,10]}]) = [[1],[{[1,10]}]]),
  assert(f([{[2,10],[3,11]},{[1,20]}]) = [[1,2,3],[{[2,10],[3,11]},{[1,20]}]]),
  /* XXX */
  true)$

okltest_nbfcsud2nbfcsfd(f) := block([D],
  assert(nbfcsfd_equalp(f([{},{},{}]), [{},{},D]) = true),
  assert(nbfcsfd_equalp(f([{},{{}},{}]), [{},{{}},D])),
  /* XXX */
  true)$

/*!
\endhtmlonly
*/
