/* Oliver Kullmann, 29.11.2007 (Swansea) */
/* Copyright 2007 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Satisfiability/Lisp/ClauseSets/Generators.mac
  \brief Functions for basic operations with clause-sets

Use by

load("$OKPLATFORM/OKsystem/Transitional/ComputerAlgebra/Satisfiability/Lisp/ClauseSets/Generators.mac");

where $OKPLATFORM has to be replaced by the path to the OKplatform directory.

Needs ComputerAlgebra/Hypergraphs/Lisp/Generators.mac and
ComputerAlgebra/Satisfiability/Lisp/ClauseSets/BasicOperations.mac.

*/

/* Boolean clause-sets, wholes solutions are the partitionings of {1,...,n}
 into two parts such that none of them contains an arithmetic progression
 of size k */
VanDerWaerden2_cs_f(k,n) := (local(k,n), block([G : ArithmeticProgressions(k,n)], [G[1], union(G[2], comp_cs(G[2]))]));

output_VanDerWaerden2_cs_f(k,n,filename) := 
 (local(k,n,filename), 
  output_cs_f(
    sconcat("Van der Waerden problem: 2 parts, arithmetic progressions of size ", k, ", ", n, " elements."), 
    VanDerWaerden2_cs_f(k,n),
    filename));

