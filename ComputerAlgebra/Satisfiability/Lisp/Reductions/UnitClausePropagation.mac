/* Oliver Kullmann, 23.12.2008 (Schwalbach) */
/* Copyright 2008 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Satisfiability/Lisp/Reductions/UnitClausePropagation.mac
  \brief Functions for unit-clause-propagation on clause-sets

Use by

oklib_load("Transitional/ComputerAlgebra/Satisfiability/Lisp/Reductions/UnitClausePropagation.mac");

*/

/*!
\htmlonly
*/

oklib_include("Transitional/ComputerAlgebra/Satisfiability/Lisp/ClauseSets/PartialAssignments.mac")$
oklib_include("Transitional/ComputerAlgebra/Satisfiability/Lisp/ClauseSets/BasicOperations.mac")$
oklib_include("Transitional/ComputerAlgebra/Hypergraphs/Lisp/SetSystems.mac")$

/* The most basic algorithm for unit-clause propagation, input a clause-set,
   output the reduced clause-set.
*/
ucp_cs_0(F) := block([U],
  do (
    if empty_element_p(F) then return({{}}),
    if emptyp(U : lunion(scs_k(F,1))) then return(F),
    if clashp(U,U) then return({{}}),
    F : apply_pa_cs(U,F)
  ))$

/*!
\endhtmlonly
*/
