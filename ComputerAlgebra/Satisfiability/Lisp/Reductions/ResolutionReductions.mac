/* Oliver Kullmann, 24.5.2008 (Swansea) */
/* Copyright 2008 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Satisfiability/Lisp/Reductions/ResolutionReductions.mac
  \brief Special cases of applications of resolutions which yield reductions

Use by

oklib_load("Transitional/ComputerAlgebra/Satisfiability/Lisp/Reductions/ResolutionReductions.mac");

*/

/*!
\htmlonly
*/

oklib_include("Transitional/ComputerAlgebra/Satisfiability/Lisp/Resolution/Basics.mac")$


/* ****************************
   * 2-Subsumption resolution *
   ****************************
*/

/* Checks whether a clause-set is reduced w.r.t. 2-subsumption resolution */
redtsrp(F) := block(
 [LF : listify(F), l : length(F), found : false],
 for i : 1 thru l-1 unless found do block([C : LF[i]],
  for j : i+1 thru l unless found do
   if two_subsumption_resolvable(C, LF[j]) then found : true),
 return(not found))$

/*!
\endhtmlonly
*/

