/* Oliver Kullmann, 1.6.2008 (Swansea) */
/* Copyright 2008 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Satisfiability/Lisp/Autarkies/MatchingAutarkies.mac
  \brief Functions related to the largest autarky in partial assignments

Use by

oklib_load("Transitional/ComputerAlgebra/Satisfiability/Lisp/Autarkies/MatchingAutarkies.mac");

*/

/*!
\htmlonly
*/

oklib_include("Transitional/ComputerAlgebra/Hypergraphs/Lisp/SetSystems.mac")$
oklib_include("Transitional/ComputerAlgebra/Satisfiability/Lisp/ClauseSets/Hypergraphs.mac")$


/* *****************************
   * Matching-lean clause-sets *
   *****************************
*/

/* Testing matching-leanness of clause-sets by the strict maximality of the 
   maximum deficiency. */
matchinglean_smax_p(F) := if emptyp(F) then true else block(
 [V : var_cs(F), def],
  def : deficiency_fcs([V,F]),
  if def <= 0 then return(false),
  block([found : false],
    for C in F unless found do 
      found : is(def <= max_deficiency_fcs([V,disjoin(C,F)])),
    return(not found)))$

/* An example for a claw-free matching lean clause-set of deficiency 1.
   From [Kullmann, SAT 2003], Section 5. */
clawfree_mlean_def1 : 
[setn(8), {
  {1,3,8},{1,-3,4},{-1,-2,6,7},{-1,-2,-5,-6},{2,-3,-4,-5},{-4,5,-7,-8},
  {-1,5,-6,8},{-1,4,6,-7},{2,3,7,-8}
 }]$

/*!
\endhtmlonly
*/

