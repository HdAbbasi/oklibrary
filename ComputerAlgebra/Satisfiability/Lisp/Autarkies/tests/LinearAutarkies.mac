/* Oliver Kullmann, 19.7.2008 (Swansea) */
/* Copyright 2008 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Satisfiability/Lisp/Autarkies/tests/LinearAutarkies.mac
  \brief Tests related to extraction of the largest autarky

Use by

oklib_load("OKlib/ComputerAlgebra/Satisfiability/Lisp/Autarkies/tests/LinearAutarkies.mac");

*/

/*!
\htmlonly
*/

oklib_include("OKlib/ComputerAlgebra/TestSystem/Lisp/Asserts.mac")$
oklib_include("OKlib/ComputerAlgebra/Algebra/Lisp/Groupoids/BasicNotions.mac")$

kill(f)$

/* ********************
   * Basic operations *
   ********************
*/

okltest_laut_paocs_p(f) := (
  assert(f({},[]) = true),
  assert(f({},[{}]) = true),
  assert(f({1},[{},{1},{1,2}]) = true),
  assert(f({1,2},[{1,2},{-1,2},{-2,1}]) = true),
  assert(f({1,-2,3},[{1,2,-3},{-1,-2,-3},{3}]) = false),
  true)$

okltest_all_laut_ocs(f) := block(
  assert(f([]) = {{}}),
  assert(f([{}]) = {{}}),
  assert(f([{1}]) = {{},{1}}),
  assert(f([{1},{-1}]) = {{}}),
  assert(f([{1},{-1,2}]) = {{},{2},{1,2}}),
  if oklib_test_level = 0 then return(true),
  assert(f([{1,2,-3},{-1,-2,-3},{3}]) = {{},{1,-2},{-1,2}}),
  true)$

okltest_lautmon_ocs(f) := block(
    exm : [
   [], [{}],
   [{1},{2}]
  ],
  for F in exm do
    assert(mon_p(f(F))),
  if oklib_test_level = 0 then return(true),
  exm1 : [
   [{1,-2},{2,-3},{3,4}]
  ],
  for F in exm1 do
    assert(mon_p(f(F))),
  true)$

okltest_extlaut_paocs_p(f) := (

  true)$

okltest_find_linearautarky_ocs(f) := block(
  assert(f([]) = false),
  assert(f([{}]) = false),
  assert(f([{1}]) = {1}),
  assert(f([{1},{-1}]) = false),
  assert(f([{1},{1,2},{-2}]) = {1,-2}),
  assert(f([{1,2},{-1,2},{1,-2}]) = {1,2}),
  true)$

/*!
\endhtmlonly
*/
