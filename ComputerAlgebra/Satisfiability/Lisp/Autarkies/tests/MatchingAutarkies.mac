/* Oliver Kullmann, 1.6.2008 (Swansea) */
/* Copyright 2008 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Satisfiability/Lisp/Autarkies/tests/MatchingAutarkies.mac
  \brief Tests related to extraction of the largest autarky

Use by

oklib_load("Transitional/ComputerAlgebra/Satisfiability/Lisp/Autarkies/tests/MatchingAutarkies.mac");

*/

/*!
\htmlonly
*/

oklib_include("Transitional/ComputerAlgebra/TestSystem/Lisp/Asserts.mac")$
oklib_include("Transitional/ComputerAlgebra/Hypergraphs/Lisp/SetSystems.mac")$
oklib_include("Transitional/ComputerAlgebra/Satisfiability/Lisp/ClauseSets/Hypergraphs.mac")$
oklib_include("Transitional/ComputerAlgebra/Satisfiability/Lisp/ClauseSets/Statistics.mac")$
oklib_include("Transitional/ComputerAlgebra/Satisfiability/Lisp/ConflictCombinatorics/HittingClauseSets.mac")$
oklib_include("Transitional/ComputerAlgebra/Satisfiability/Lisp/Autarkies/MatchingAutarkies.mac")$

kill(f)$


okltest_matchinglean_smax_p(f) := block(
  assert(f({}) = true),
  assert(f({{}}) = true),
  assert(f({{1}}) = false),
  assert(f({{1},{-1}}) = true),
  assert(f({{1},{1,2}}) = false),
  assert(f({{1},{1,2},{2,-1}}) = true),
  true)$

okltest_clawfree_mlean_def1(FF) := block(
  assert(FF[1] = setn(8)),
  assert(deficiency_fcs(FF) = 1),
  assert(literal_degrees_list_fcs(FF) = [[2,15],[4,1]]),
  assert(variable_degrees_list_cs(FF[2]) = [[4,7],[6,1]]),
  assert(hitting1rcsp(FF[2]) = true),
  assert(sat_decision_hitting_cs(FF[2]) = true), 
    /* The satisfiability of FF is actually implied, since every unsatisfiable
    hitting clause-set with deficiency 1 must contain a variables with
    (1,1)-occurrence. */
  assert(matchinglean_smax_p(FF[2]) = true),
  true)$

/*!
\endhtmlonly
*/
