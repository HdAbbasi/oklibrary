/* Oliver Kullmann, 16.9.2008 (Swansea) */
/* Copyright 2008, 2009 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Satisfiability/Lisp/MinimalUnsatisfiability/tests/Transformations.mac
  \brief Tests for functions about transformations related to minimal unsatisfiability

Use by

oklib_load("OKlib/ComputerAlgebra/Satisfiability/Lisp/MinimalUnsatisfiability/tests/Transformations.mac");

*/

/*!
\htmlonly
*/

oklib_include("OKlib/ComputerAlgebra/TestSystem/Lisp/Asserts.mac")$
oklib_include("OKlib/ComputerAlgebra/Satisfiability/Lisp/ClauseSets/Statistics.mac")$
oklib_include("OKlib/ComputerAlgebra/Satisfiability/Lisp/ClauseSets/Hypergraphs.mac")$
oklib_include("OKlib/ComputerAlgebra/Satisfiability/Lisp/Generators/Generators.mac")$


kill(f)$

/* **************************************************
   * Translated minimally unsatisfiable clause-sets *
   **************************************************
*/

okltest_usat_musat_repo_sat() := [
 [{},{}],
 [{1},{{-1}}],
 [{1},{{1}}],
 [{1,2},{{1},{2}}]
]$

okltest_usat_musat_repo_usat() := [
 [{},{{}}],
 [{1},{{1},{-1}}],
 [{1},{{},{1}}],
 [{1},{{},{1},{-1}}]
]$

okltest_n_var_usat_musat(f) := block(
  for FF in okltest_usat_musat_repo_sat() do
    assert(f(FF) = nvar_f(usat_musat(FF))),
  for FF in okltest_usat_musat_repo_Usat() do
    assert(f(FF) = nvar_f(usat_musat(FF))),
  for n : 0 thru 3 do block([FF : full_fcs(n)],
    assert(f(FF) = nvar_f(usat_musat(FF)))),
  true)$

okltest_n_cl_usat_musat(f) := block(
  for FF in okltest_usat_musat_repo_sat() do
    assert(f(FF) = ncl_fcs(usat_musat(FF))),
  for FF in okltest_usat_musat_repo_usat() do
    assert(f(FF) = ncl_fcs(usat_musat(FF))),
  for n : 0 thru 3 do block([FF : full_fcs(n)],
    assert(f(FF) = ncl_fcs(usat_musat(FF)))),
  true)$

okltest_deficiency_usat_musat(f) := block(
  for FF in okltest_usat_musat_repo_sat() do
    assert(f(FF) = deficiency_fcs(usat_musat(FF))),
  for FF in okltest_usat_musat_repo_usat() do
    assert(f(FF) = deficiency_fcs(usat_musat(FF))),
  for n : 0 thru 3 do block([FF : full_fcs(n)],
    assert(f(FF) = deficiency_fcs(usat_musat(FF)))),
  true)$

okltest_ncl_list_usat_musat(f) := block(
  for FF in okltest_usat_musat_repo_sat() do
    assert(f(FF) = ncl_list_fcs(usat_musat(FF))),
  for FF in okltest_usat_musat_repo_Usat() do
    assert(f(FF) = ncl_list_fcs(usat_musat(FF))),
  for n : 0 thru 3 do block([FF : full_fcs(n)],
    assert(f(FF) = ncl_list_fcs(usat_musat(FF)))),
  true)$

okltest_n_var_sat_musat(f) := block(
  for FF in okltest_sat_musat_repo_sat() do
    assert(f(FF) = nvar_f(sat_musat(FF))),
  for FF in okltest_sat_musat_repo_Usat() do
    assert(f(FF) = nvar_f(sat_musat(FF))),
  for n : 0 thru 3 do block([FF : full_fcs(n)],
    assert(f(FF) = nvar_f(sat_musat(FF)))),
  true)$

okltest_n_cl_sat_musat(f) := block(
  for FF in okltest_sat_musat_repo_sat() do
    assert(f(FF) = ncl_fcs(sat_musat(FF))),
  for FF in okltest_sat_musat_repo_usat() do
    assert(f(FF) = ncl_fcs(sat_musat(FF))),
  for n : 0 thru 3 do block([FF : full_fcs(n)],
    assert(f(FF) = ncl_fcs(sat_musat(FF)))),
  true)$

okltest_deficiency_sat_musat(f) := block(
  for FF in okltest_sat_musat_repo_sat() do
    assert(f(FF) = deficiency_fcs(sat_musat(FF))),
  for FF in okltest_sat_musat_repo_usat() do
    assert(f(FF) = deficiency_fcs(sat_musat(FF))),
  for n : 0 thru 3 do block([FF : full_fcs(n)],
    assert(f(FF) = deficiency_fcs(sat_musat(FF)))),
  true)$

okltest_ncl_list_sat_musat(f) := block(
  for FF in okltest_sat_musat_repo_sat() do
    assert(f(FF) = ncl_list_fcs(sat_musat(FF))),
  for FF in okltest_sat_musat_repo_Usat() do
    assert(f(FF) = ncl_list_fcs(sat_musat(FF))),
  for n : 0 thru 3 do block([FF : full_fcs(n)],
    assert(f(FF) = ncl_list_fcs(sat_musat(FF)))),
  true)$


/* ********************************************************
   * Max-Clique translated to "SHORT RES" and "SMALL MUS" *
   ********************************************************
*/

okltest_new_k(f) := (
  assert(f(0) = 0),
  assert(f(1) = 2),
  assert(f(2) = 5),
  assert(f(3) = 9),
  assert(f(4) = 14),
  true)$

okltest_maxclique_start(f) := (
  assert(f(0) = {{}}),
  assert(f(1) = {{srfswx(1)}}),
  assert(f(2) = {{srfswx(1),srfswx(2),srfswy(1,2)}}),
  assert(f(3) = {{srfswx(1),srfswx(2),srfswx(3),srfswy(1,2),srfswy(1,3),srfswy(2,3)}}),
  true)$

okltest_maxclique_edges(f) := (

  true)$

okltest_maxclique_cleanup(f) := (

  true)$

okltest_maxclique_mures_fcs(f) := (

  true)$

/*!
\endhtmlonly
*/
