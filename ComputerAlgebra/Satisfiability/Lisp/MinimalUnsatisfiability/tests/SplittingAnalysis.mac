/* Oliver Kullmann, 24.4.2008 (Guangzhou) */
/* Copyright 2008 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Satisfiability/Lisp/MinimalUnsatisfiability/tests/SplittingAnalysis.mac
  \brief Tests for functions about finding irredundant cores

Use by

oklib_load("OKlib/ComputerAlgebra/Satisfiability/Lisp/MinimalUnsatisfiability/tests/SplittingAnalysis.mac");

*/

/*!
\htmlonly
*/

oklib_include("OKlib/ComputerAlgebra/TestSystem/Lisp/Asserts.mac")$
oklib_include("OKlib/ComputerAlgebra/Satisfiability/Lisp/Backtracking/DLL_solvers.mac")$



kill(f)$


okltest_random_splitting_mus(f) := ([S : dll_simplest_trivial2],
  assert(f({{}},0,S) = [{{}}]),
  assert(f({{-1},{1}},1,S) = [{{-1},{1}},{{}}]),
  for n : 0 thru 3 do block(
   [F : full_fcs(n)[2]],
    for s : 0 thru 1 do block(
     [L : f(F,s,S)],
      assert(L[1] = F),
      assert(length(L) = n+1),
      assert(last(L) = {{}}),
      assert(map(nvar_cs,L) = makelist(n-i,i,0,n))
    )
  ),
  true)$

okltest_random_splitting_nsing_mus(f) := ([S : dll_simplest_trivial2],
  assert(f({{}},0,S) = [{{}}]),
  assert(f({{-1},{1}},1,S) = [{{}}]),
  assert(f({{1,2},{1,-2},{-1,3},{-1,-3}},0,S) = [{{}}]),
  for n : 0 thru 3 do block(
   [F : full_fcs(n)[2]],
    for s : 0 thru 1 do block(
     [L : f(F,s,S)],
      assert(L[1] = if n <= 1 then {{}} else F),
      assert(length(L) = max(1,n)),
      assert(last(L) = {{}}),
      assert(map(nvar_cs,L) = if n <= 1 then [0] else append(makelist(n-i,i,0,n-2),[0]))
    )
  ),
  true)$


/*!
\endhtmlonly
*/
