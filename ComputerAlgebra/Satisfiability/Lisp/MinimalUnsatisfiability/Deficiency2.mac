/* Oliver Kullmann, 31.5.2008 (Swansea) */
/* Copyright 2008, 2009 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Satisfiability/Lisp/MinimalUnsatisfiability/Deficiency2.mac
  \brief Generators and analysis w.r.t. minimally unsatisfiable clause-sets of deficiency 2

Use by

oklib_load("OKlib/ComputerAlgebra/Satisfiability/Lisp/MinimalUnsatisfiability/Deficiency2.mac");

*/

/*!
\htmlonly
*/

oklib_include("OKlib/ComputerAlgebra/Hypergraphs/Lisp/SetSystems.mac")$
oklib_include("OKlib/ComputerAlgebra/Satisfiability/Lisp/ClauseSets/BasicOperations.mac")$
oklib_include("OKlib/ComputerAlgebra/Satisfiability/Lisp/Reductions/DP-Reductions.mac")$
oklib_include("OKlib/ComputerAlgebra/Satisfiability/Lisp/MinimalUnsatisfiability/data/uhit_def.mac")$


/* *********************************************************************
   * The saturated minimally unsatisfiable clause-sets of deficiency 2 *
   *********************************************************************
*/

/* Standard clauses: */
pos_c(n) := setn(n)$
neg_c(n) := setmn(-n,-1)$
imp_c(i,n) := if i < n then {-i,i+1} else {-n,1}$

/* The standard MUSAT(def=2) non-singular formal clause-sets (where every
   literal occurs at least twice) for n >= 2: */
musatd2(n) := 
 [setn(n), union({pos_c(n),neg_c(n)}, setify(create_list(imp_c(i,n),i,1,n)))]$


/* *****************************************************
   * Unsatisfiable hitting clause-sets of deficiency 2 *
   *****************************************************
*/

/* Every unsatisfiable hitting clause-set F of deficiency 2 is either of
   type 2 or type 3, depending on whether elimination of singular variables
   yields a clause-set isomorphic to musatd2(2) or musatd2(3).
*/

/* Returns 2, 3 or false, where false results iff F is not an unsatisfiable 
   hitting clause-set of deficiency 2, while otherwise its type is returned:
*/
hittingtype_d2_cs(F) := block([F : singular_dp_reduction(F), T],
 T : classify_candidates_uhit_def([F])[1],
 if T=false or T[2]="new" or T[1][1]#2 then false
 else T[1][2])$


/*!
\endhtmlonly
*/
