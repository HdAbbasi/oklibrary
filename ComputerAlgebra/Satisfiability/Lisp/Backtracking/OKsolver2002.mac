/* Oliver Kullmann, 19.1.2008 (Swansea) */
/* Copyright 2008 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Satisfiability/Lisp/Backtracking/OKsolver2002.mac
  \brief Procedural specifications for the OKsolver-2002

Use by

oklib_load("OKlib/ComputerAlgebra/Satisfiability/Lisp/Backtracking/OKsolver2002.mac");

*/


/*!
\htmlonly
*/

oklib_include("OKlib/ComputerAlgebra/Satisfiability/Lisp/Backtracking/DLL_solvers.mac");

weightingscheme_OKsolver2002(k) :=
  if k = 2 then 1
  elseif k = 3 then 0.2
  elseif k = 4 then 0.05
  elseif k = 5 then 0.01
  elseif k = 6 then 0.003
  else 20.4514 * 0.218673^k$

distances_OKsolver2002 : 
  [wn_newclauses_2(weightingscheme_OKsolver2002), delta_n]$

heuristics_OKsolver2002 : 
  heuristics_lookahead_distances(
    generalised_ucp1,
    distances_OKsolver2002,
    [prod_proj],
    logprobrand)$
aheuristics_OKsolver2002 : 
  amended_heuristics_lookahead_distances(
    generalised_ucp1,
    distances_OKsolver2002,
    [prod_proj],
    logprobrand,
    [])$


/* The following abstraction of OKsolver_2002 ignores: 
  - clause-sets are for the OKsolver_2002 clause-*lists*;
  - the order of variables and clauses;
  - rounding errors regarding the heuristics;
  - tree pruning ("intelligent backtracking"), and so we
    specify actually "OKsolver_2002_NTP".
*/

OKsolver_2002(FF) := dll_red(FF, heuristics_OKsolver2002, generalised_ucp_ple1)$
OKsolver_2002_st(FF) := dll_red_st(FF, heuristics_OKsolver2002, generalised_ucp_ple1)$
OKsolver_2002_ast(FF) := dll_red_st_dist(FF, aheuristics_OKsolver2002, generalised_ucp_ple1)$

/*
 Splitting trees produced by OKsolver_2002_st for unsatisfiable clause-sets
 are r_2-splitting trees.
*/

/*!
\endhtmlonly
*/

