/* Oliver Kullmann, 3.4.2008 (Swansea) */
/* Copyright 2008 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Satisfiability/Lisp/Counting/Backtracking.mac
  \brief Functions related to counting of satisfying assignments via inclusion/exclusion techniques

Use by

oklib_load("Transitional/ComputerAlgebra/Satisfiability/Lisp/Counting/Backtracking.mac");

*/

/*!
\htmlonly
*/

oklib_include("Transitional/ComputerAlgebra/Satisfiability/Lisp/Backtracking/SplittingTrees.mac");
oklib_include("Transitional/ComputerAlgebra/Satisfiability/Lisp/Backtracking/DLL_solvers.mac");


/* For a SAT solver S returning a splitting tree, return a function from
   formal clause-sets to (precise) SAT-probabilities. */
satprob_dll_generic(S) := buildq([S], lambda([FF],
 count_sat_st(S(FF),FF[1]) / 2^(length(FF[1]))))$
/* Convenience instantiations: */
satprob_dll_simplest_trivial1 : satprob_dll_generic(dll_simplest_st_trivial1)$


/*!
\endhtmlonly
*/
