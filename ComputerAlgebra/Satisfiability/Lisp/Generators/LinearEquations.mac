/* Oliver Kullmann, 11.5.2013 (Swansea) */
/* Copyright 2013 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Satisfiability/Lisp/Generators/LinearEquations.mac
  \brief Generators for clause-sets related to linear equations

Use by

oklib_load("OKlib/ComputerAlgebra/Satisfiability/Lisp/Generators/LinearEquations.mac");

*/

/*!
\htmlonly
*/

oklib_include("OKlib/ComputerAlgebra/DataStructures/Lisp/Lists.mac")$
oklib_include("OKlib/ComputerAlgebra/Hypergraphs/Lisp/SetSystems.mac")$
oklib_include("OKlib/ComputerAlgebra/Satisfiability/Lisp/ClauseSets/BasicOperations.mac")$
oklib_include("OKlib/ComputerAlgebra/Satisfiability/Lisp/ClauseSets/PartialAssignments.mac")$
oklib_include("OKlib/ComputerAlgebra/Satisfiability/Lisp/ClauseSets/Substitutions.mac")$
oklib_include("OKlib/ComputerAlgebra/NumberTheory/Lisp/Auxiliary.mac")$


/* *********************
   * Parity conditions *
   *********************
*/

/* The repetition-free clause-list of full clauses over variables 1, ..., n,
   such that the satisfying assignments are given by the condition that the
   sum over the values is even resp. odd, that is, the list of full clauses
   having an odd resp. even number of negative literals; the order is
   lexicographical:
*/
even_parity_cl(n) :=
  sublist(all_tass_l(setn(n)),
          lambda([C], oddp(sum_l(map(negsignum, listify(C))))))$
/* Now supplying the list V of variables: */
even_parity_wv_cl(V) :=
  sublist(all_tass_l(setify(V)),
          lambda([C], oddp(sum_l(map(negsignum, listify(C))))))$
/* As formal clause-list: */
even_parity_fcl(n) := [create_list(i,i,1,n),even_parity_cl(n)]$

odd_parity_cl(n) :=
  sublist(all_tass_l(setn(n)),
          lambda([C], evenp(sum_l(map(negsignum, listify(C))))))$
/* Now supplying the list V of variables: */
odd_parity_wv_cl(V) :=
  sublist(all_tass_l(setify(V)),
          lambda([C], evenp(sum_l(map(negsignum, listify(C))))))$
/* As formal clause-list: */
odd_parity_fcl(n) := [create_list(i,i,1,n),odd_parity_cl(n)]$


/*!
\endhtmlonly
*/
