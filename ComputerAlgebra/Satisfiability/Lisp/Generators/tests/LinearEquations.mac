/* Oliver Kullmann, 11.5.2013 (Swansea) */
/* Copyright 2013 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Satisfiability/Lisp/Generators/tests/LinearEquations.mac
  \brief Tests for clause-set-generators

Use by

oklib_load("OKlib/ComputerAlgebra/Satisfiability/Lisp/Generators/tests/LinearEquations.mac");

*/

/*!
\htmlonly
*/

oklib_include("OKlib/ComputerAlgebra/TestSystem/Lisp/Asserts.mac")$

kill(f)$


/* *********************
   * Parity conditions *
   *********************
*/

okltest_even_parity_cl(f) := (
  assert(f(0) = []),
  assert(f(1) = [{-1}]),
  assert(f(2) = [{-2,1},{-1,2}]),
  assert(f(3) = [{-3,-2,-1},{-3,2,1},{3,-2,1},{3,2,-1}]),
  true)$

okltest_even_parity_wv_cl(f) := (
  assert(okltest_even_parity_cl(buildq([f], lambda([n], f(create_list(i,i,1,n))))) = true),
  assert(f([5,7]) = [{-7,5},{-5,7}]),
  true)$

okltest_even_parity_fcl(f) := (
  /* XXX */
  true)$

okltest_odd_parity_cl(f) := (
  assert(f(0) = [{}]),
  assert(f(1) = [{1}]),
  assert(f(2) = [{-1,-2},{2,1}]),
  assert(f(3) = [{-3,-2,1},{-3,2,-1},{3,-2,-1},{1,2,3}]),
  true)$

okltest_odd_parity_wv_fcl(f) := (
  /* XXX */
  true)$

okltest_odd_parity_fcl(f) := (
  /* XXX */
  true)$


/* **********************
   * Parity constraints *
   **********************
*/

okltest_gprt2prt(f) := (
  assert(f([[],0]) = []),
  assert(f([[],1]) = false),
  assert(f([[1],0]) = [1]),
  assert(f([[1],1]) = [-1]),
  assert(f([[1,1],0]) = []),
  assert(f([[1,1],1]) = false),
  assert(f([[1,-1],0]) = false),
  assert(f([[1,-1],1]) = []),
  assert(f([[1,1,-1],0]) = [-1]),
  assert(f([[1,1,-1],1]) = [1]),
  assert(f([[1,1,-1,-1],0]) = []),
  assert(f([[1,1,-1,-1],1]) = false),
  assert(f([[1,1,2,-1,-1],0]) = [2]),
  assert(f([[1,1,2,-1,-1],1]) = [-2]),
  assert(f([[1,1,2,-1,-1,2],0]) = []),
  assert(f([[1,1,2,-1,-1,2],1]) = false),
  assert(f([[-2,1,1,2,-1,-1,2],0]) = [-2]),
  assert(f([[-2,1,1,2,-1,-1,2],1]) = [2]),
  assert(f([[-2,1,1,2,-1,-1,2,1,3],0]) = [-1,2,3]),
  assert(f([[-2,1,1,2,-1,-1,2,-1,-3],1]) = [-3,-1,2]),
  assert(f([[-2,1,1,2,-1,-1,2,-1,-3],0]) = [-1,2,3]),
  true)$

okltest_prt2cl_0(f) := (
  /* XXX */
  true)$

okltest_prt2cl_aux_1(f) := (
  /* XXX */
  true)$

okltest_gen_2xor_fcl(f) := (
  /* XXX */
  true)$


/*!
\endhtmlonly
*/
