/* Oliver Kullmann, 2.11.2008 (Swansea) */
/* Copyright 2008 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Satisfiability/Lisp/Generators/tests/PlantedSolutions.mac
  \brief Tests for generators for instances with planted solutions

Use by

oklib_load("OKlib/ComputerAlgebra/Satisfiability/Lisp/Generators/tests/PlantedSolutions.mac");

*/

/*!
\htmlonly
*/

oklib_include("OKlib/ComputerAlgebra/TestSystem/Lisp/Asserts.mac")$
oklib_include("OKlib/ComputerAlgebra/Satisfiability/Lisp/Backtracking/DLL_solvers.mac")$

kill(f)$

/* *******************************************
   * Minimally uniquely satisfiable problems *
   *******************************************
*/

okltest_minUNISAT(f) := block([solver],
  set_random(0),
  assert(f([{},{}],{},solver) = {}),
  solver : dll_simplest_trivial2,
  assert(f([{1},{{1}}],{},solver) = {}),
  assert(f([{1},{}],{-1},solver) = {-1}),
  assert(f([{1},{{1}}],{1},solver) = {}),
  assert(f([{1,2},{{1,2},{1,-2}}],{1},solver) = {}),
  assert(f([{1,2},{{1,2}}],{1,2},solver) = {1,2}),
  assert(f([{1,2},{{1,2}}],{1,-2},solver) = {-2}),
  assert(f([{1,2,3},{{1,2},{2,3}}],{-1,-3,2},solver) = {-1,-3}),
  assert(f([{1},{{1},{-1}}],{1},solver) = {}),
  assert(f([{1},{{-1}}],{1},solver) = {1}),
  assert(f([{1,2},{{1},{-1}}],{1},solver) = {}),
  assert(f([{1,2},{{1},{2}}],{-1,-2},solver) = {-2}),
  assert(f([{1,2},{{1}}],{2},solver) = {2}),
  assert(f([{1,2},{{1}}],{1,2},solver) = {2}),
  true)$

/*!
\endhtmlonly
*/
