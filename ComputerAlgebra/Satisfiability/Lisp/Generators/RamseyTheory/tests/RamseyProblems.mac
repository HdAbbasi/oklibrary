/* Oliver Kullmann, 4.9.2008 (Swansea) */
/* Copyright 2008, 2009, 2010 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Satisfiability/Lisp/Generators/RamseyTheory/tests/RamseyProblems.mac
  \brief Tests for clause-set-generators

Use by

oklib_load("OKlib/ComputerAlgebra/Satisfiability/Lisp/Generators/RamseyTheory/tests/RamseyProblems.mac");

*/

/*!
\htmlonly
*/

oklib_include("OKlib/ComputerAlgebra/TestSystem/Lisp/Asserts.mac")$

okltest_ramsey2_ofcs(f) := (
  assert(f(0,0,0) = [[colv({})], [{colv({})},{-colv({})}]]),
  assert(f(1,0,0) = [[colv({})], []]),
  assert(f(0,1,0) = [[], []]),
  assert(f(0,0,1) = [[colv({})], [{colv({})},{-colv({})}]]),
  assert(f(1,1,0) = [[], []]),
  assert(f(1,0,1) = [[colv({})], [{colv({})},{-colv({})}]]),
  assert(f(0,1,1) = [[colv({1})], []]),
  assert(f(1,1,1) = [[colv({1})], [{colv({1})},{-colv({1})}]]),
  true)$

okltest_ramsey2_stdofcs(f) := (
  assert(f(0,0,0) = [[1], [{1},{-1}]]),
  assert(f(1,0,0) = [[1], []]),
  assert(f(0,1,0) = [[], []]),
  assert(f(0,0,1) = [[1], [{1},{-1}]]),
  assert(f(1,1,0) = [[], []]),
  assert(f(1,0,1) = [[1], [{1},{-1}]]),
  assert(f(0,1,1) = [[1], []]),
  assert(f(1,1,1) = [[1], [{1},{-1}]]),
  true)$


okltest_ramsey2_symbr2_cs(f) := block(
  for i : 0 thru 5 do
    assert(f(i) = {}),
  for i : 0 thru 17 do 
    assert(length(f(i)) = 6 * floor(max((i - 3),0) / 3)),
  assert(f(6) = {{-colv({1,2}),colv({1,3})},{-colv({1,2}),
    colv({2,3})},{colv({1,2}),-colv({1,3})},{colv({1,2}),-colv({2,3})},
    {-colv({1,3}),colv({2,3})},{colv({1,3}),-colv({2,3})}}),
  true)$

okltest_ramsey2_symbr2_stdcs(f) := block(
  for i : 0 thru 5 do
    assert(f(i) = {}),
  for i : 0 thru 17 do 
    assert(length(f(i)) = 6 * floor(max((i - 3),0) / 3)),
  assert(f(6) = {{-3,1},{-3,2},{-2,1},{-2,3},{-1,2},{-1,3}}),
  true)$

okltest_ramsey_symbr2_fcl(f) := block(
  for i : 0 thru 3 do
    for j : 0 thru 3 do
      assert(f(i,j,0) = [[],[]]),
  assert(f(2,2,6) =
    [[nbv({1,2},1),nbv({1,2},2),nbv({1,3},1),nbv({1,3},2),nbv({1,4},1),
      nbv({1,4},2),nbv({1,5},1),nbv({1,5},2),nbv({1,6},1),nbv({1,6},2),
      nbv({2,3},1),nbv({2,3},2),nbv({2,4},1),nbv({2,4},2),nbv({2,5},1),
      nbv({2,5},2),nbv({2,6},1),nbv({2,6},2),nbv({3,4},1),nbv({3,4},2),
      nbv({3,5},1),nbv({3,5},2),nbv({3,6},1),nbv({3,6},2),nbv({4,5},1),
      nbv({4,5},2),nbv({4,6},1),nbv({4,6},2),nbv({5,6},1),nbv({5,6},2)],
     [{-nbv({1,3},1),-nbv({2,3},2)},{-nbv({1,3},2),-nbv({2,3},1)},
      {-nbv({1,2},1),-nbv({2,3},2)},{-nbv({1,2},2),-nbv({2,3},1)},
      {-nbv({1,2},1),-nbv({1,3},2)},{-nbv({1,2},2),-nbv({1,3},1)},
      {nbv({1,2},1),nbv({1,2},2)},{nbv({1,3},1),nbv({1,3},2)},
      {nbv({1,4},1),nbv({1,4},2)},{nbv({1,5},1),nbv({1,5},2)},
      {nbv({1,6},1),nbv({1,6},2)},{nbv({2,3},1),nbv({2,3},2)},
      {nbv({2,4},1),nbv({2,4},2)},{nbv({2,5},1),nbv({2,5},2)},
      {nbv({2,6},1),nbv({2,6},2)},{nbv({3,4},1),nbv({3,4},2)},
      {nbv({3,5},1),nbv({3,5},2)},{nbv({3,6},1),nbv({3,6},2)},
      {nbv({4,5},1),nbv({4,5},2)},{nbv({4,6},1),nbv({4,6},2)},{nbv({5,6},1),
      nbv({5,6},2)}]]),
  true)$

okltest_ramsey_symbr2_stdfcl(f) := block(
  for i : 0 thru 3 do
    for j : 0 thru 3 do
      assert(f(i,j,0) = [[],[]]),
  assert(f(2,2,6) =
    [[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,
    28,29,30],[{-6,-3},{-5,-4},{-6,-1},{-5,-2},{-4,-1},{-3,-2},{1,2},{3,4},
    {5,6},{7,8},{9,10},{11,12},{13,14},{15,16},{17,18},{19,20},{21,22},{23,24},
    {25,26},{27,28},{29,30}]]),
  true)$

okltest_ramsey_symbr2_stdfcl(f) := block(
  for i : 0 thru 3 do
    for j : 0 thru 3 do
      assert(f(i,j,0) = [[],[]]),
  assert(f(2,2,6) =
    [[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,
    28,29,30],[{-6,-3},{-5,-4},{-6,-1},{-5,-2},{-4,-1},{-3,-2},{1,2},{3,4},
    {5,6},{7,8},{9,10},{11,12},{13,14},{15,16},{17,18},{19,20},{21,22},{23,24},
    {25,26},{27,28},{29,30}]]),
  true)$

okltest_ramsey_symbr2_eqs(f) := block(
  for i : 0 thru 5 do 
    assert(f(2,2,i) = {}),
  for i : 0 thru 17 do
    assert(length(f(2,2,i)) = floor(max((i - 3),0) / 3)),
  true)$

okltest_ramsey2_symbr3_cs(f) := block(
  for i : 0 thru 3 do
    assert(f(i) = {}),
  assert(f(4) = {{-colv({1,2}),colv({1,3})},{colv({1,2}),-colv({1,3})}}),
  true)$

okltest_ramsey2_symbr3_eqs(f) := block(
  assert(f(0) = {{}}),
  assert(f(1) = {{}}),
  assert(f(2) = {{{1,2}}}),
  assert(f(3) = {{{1,2}}}),
  assert(f(4) = {{{1,2},{1,3}}}),
  true)$

okltest_ramsey2_symbr3_eqs_m(f) := block(
  assert(
      okltest_ramsey2_symbr3_eqs(buildq([f:f],lambda([a],f(1,a))))),
  true)$


/*!
\endhtmlonly
*/
