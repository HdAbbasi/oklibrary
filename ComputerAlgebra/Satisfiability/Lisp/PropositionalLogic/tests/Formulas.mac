/* Oliver Kullmann, 9.2.2008 (Swansea) */
/* Copyright 2008 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Satisfiability/Lisp/PropositionalLogic/tests/Formulas.mac
  \brief Tests for basic functionality regarding propositional formulas

Use by

oklib_load("OKlib/ComputerAlgebra/Satisfiability/Lisp/PropositionalLogic/tests/Formulas.mac");

*/

/*!
\htmlonly
*/

oklib_include("OKlib/ComputerAlgebra/TestSystem/Lisp/Asserts.mac")$

kill(f)$

okltest_var_prpl(f) := block([v],
  assert(f(v) = {v}),
  assert(f(neg(v)) = {v}),
  assert(f(true) = {}),
  assert(f(false) = {}),
  true)$

okltest_var_ft(f) := block([v,w],
  assert(f([true]) = {}),
  assert(f([false]) = {}),
  assert(f([v]) = {v}),
  assert(f([neg(v)]) = {v}),
  assert(f(["and", [v], [w]]) = {v,w}),
  true)$

okltest_apply_pa_prpl(f) := block([v,w,phi],
  assert(f(phi,false) = false),
  assert(f(phi,true) = true),
  assert(f({},v) = v),
  assert(f({},neg(v)) = neg(v)),
  assert(f({w},v) = v),
  assert(f({neg(w)},v) = v),
  assert(f({w}, neg(v)) = neg(v)),
  assert(f({neg(w)}, neg(v)) = neg(v)),
  assert(f({neg(v)},v) = false),
  assert(f({v},v) = true),
  assert(f({neg(v)}, neg(v)) = true),
  assert(f({v}, neg(v)) = false),
  true)$

okltest_tseitin_trans_basic(f) := block([F,T,a,b,c,d],
  F : ["and",
    ["or", ["and", [a], [b]], ["and", [c], [d]]],
    ["or", ["and", [neg(a)], [b]], ["and", [c], [neg(d)]]]],
  T : f(F),
  assert(nvar_ft(T) = 16-1 + 4),
  T : basic_simplification_ft(T),
  assert(nvar_ft(T) = 16-1 + 4),
  true)$

/*!
\endhtmlonly
*/
