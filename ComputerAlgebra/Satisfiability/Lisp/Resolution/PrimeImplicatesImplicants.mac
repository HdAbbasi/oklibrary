/* Oliver Kullmann, 27.3.2008 (Swansea) */
/* Copyright 2008 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Satisfiability/Lisp/Resolution/PrimeImplicatesImplicants.mac
  \brief Functions regarding computation of prime implicates/implicants of boolean functions and clause-sets

Use by

oklib_load("Transitional/ComputerAlgebra/Satisfiability/Lisp/Resolution/PrimeImplicatesImplicants.mac");

*/

/*!
\htmlonly
*/

oklib_include("Transitional/ComputerAlgebra/Satisfiability/Lisp/Resolution/Basics.mac");


/* The special case of min_resolution_closure_cs where the input clauses
   are all full (contain all variables). */
min_2resolution_closure_cs(F) := block(
 [IF : [], CI : F, PI : {}, N : length(var_cs(F)) ],
 for i : N step -1 thru 1 do block(
   PI : CI,
   CI : two_subsumption_resolvents_cs(PI),
   PI : setdifference(min_elements(union(CI,PI)), CI),
   IF : cons(PI,IF)
 ),
 IF : cons(PI,IF),
 return(apply(union, IF)))$


/*!
\endhtmlonly
*/
