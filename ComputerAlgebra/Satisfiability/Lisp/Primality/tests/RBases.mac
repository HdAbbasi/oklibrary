/* Oliver Kullmann, 28.12.2009 (Swansea) */
/* Copyright 2009 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Satisfiability/Lisp/Primality/tests/RBases.mac
  \brief Tests for components related to r-bases

Use by

oklib_load("OKlib/ComputerAlgebra/Satisfiability/Lisp/Primality/tests/RBases.mac");

*/

/*!
\htmlonly
*/

oklib_include("OKlib/ComputerAlgebra/TestSystem/Lisp/Asserts.mac")$
oklib_include("OKlib/ComputerAlgebra/Satisfiability/Lisp/Reductions/Basics.mac")$
oklib_include("OKlib/ComputerAlgebra/Satisfiability/Lisp/Reductions/tests/Basics.mac")$
oklib_include("OKlib/ComputerAlgebra/Satisfiability/Lisp/Reductions/GeneralisedUCP.mac")$
oklib_include("OKlib/ComputerAlgebra/Satisfiability/Lisp/Backtracking/DLL_solvers.mac")$
oklib_include("OKlib/ComputerAlgebra/Satisfiability/Lisp/MinimalUnsatisfiability/tests/Cores.mac")$


/* ************
   * Sampling *
   ************
*/

okltest_rand_rbase_cs(f) := block([S, R, fr],
  assert(okltest_subsumption_elimination_cs(buildq([f], lambda([F], f(F,weakest_reduction_cs)))) = true),
  assert(okltest_subsumption_elimination_cs(buildq([f], lambda([F], f(F,generalised_ucp0_cs)))) = true),
  S : dll_simplest_first_shortest_clause,
  R : buildq([S],lambda([F], strongest_reduction_cs(F,S))),
  fr : buildq([f,R],lambda([F], f(F,R))),
  assert(okltest_some_irr_cs(fr) = true),
  /* XXX */
  true)$

/*!
\endhtmlonly
*/
