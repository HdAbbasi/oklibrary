/* Rui Wang, 6.10.2009 (Swansea) */
/* Copyright 2009 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Trees/Lisp/tests/ReingoldTilford.mac
  \brief Tests related to Reingold-Tilford algorithm

Use by

oklib_load("OKlib/ComputerAlgebra/Trees/Lisp/tests/ReingoldTilford.mac");

*/

/*!
\htmlonly
*/

oklib_include("OKlib/ComputerAlgebra/TestSystem/Lisp/Asserts.mac")$

kill(f)$


/* ******************************
   * Reingold-Tilford algorithm *
   ******************************
*/

okltest_reingold_tilford_rt(f) := block([x,y],
  assert(f([],[x,y]) = [[[x,y]]]),
  assert(f([[]],[0,0]) = [[[0,0]],[[[-1,-1]]]]),
  assert(f([[],[]],[0,0]) = [[[0,0]],[[[-1,-1]]],[[[1,-1]]]]),
  assert(f([[[]],[[]]],[0,0]) = [[[0,0]],[[[-1,-1]],[[[-2,-2]]]],[[[1,-1]],[[[0,-2]]]]]),
  assert(f([[[],[]],[[]]],[0,0]) = [[[0,0]],[[[-2,-1]],[[[-3,-2]]],[[[-1,-2]]]],[[[2,-1]],[[[1,-2]]]]]),
  assert(f([[[],[]],[[],[]]],[0,0]) = [[[0,0]],[[[-2,-1]],[[[-3,-2]]],[[[-1,-2]]]],[[[2,-1]],[[[1,-2]]],[[[3,-2]]]]]),
  assert(f([[]],[4,5]) = [[[4,5]],[[[3,4]]]]),
  assert(f([[],[]],[4,5]) = [[[4,5]],[[[3,4]]],[[[5,4]]]]),
  assert(f([[[]],[[]]],[4,5]) = [[[4,5]],[[[3,4]],[[[2,3]]]],[[[5,4]],[[[4,3]]]]]),
  assert(f([[[],[]],[[]]],[4,5]) = [[[4,5]],[[[2,4]],[[[1,3]]],[[[3,3]]]],[[[6,4]],[[[5,3]]]]]),
  assert(f([[[],[]],[[],[]]],[4,5]) = [[[4,5]],[[[2,4]],[[[1,3]]],[[[3,3]]]],[[[6,4]],[[[5,3]]],[[[7,3]]]]]),
  true)$

okltest_reingold_tilford_remove_annotations(f) := block([x,y],
  assert(f([[[x,y],[x,x]]]) = [[[x,y]]]),
  assert(f([[[0,0],[-1,0]],[[[-1,-1],[0,0]]]]) = [[[0,0]],[[[-1,-1]]]]),
  assert(f([[[0,0],[-1,1]],[[[-1,-1],[0,0]]],[[[1,-1],[0,0]]]]) = [[[0,0]],[[[-1,-1]]],[[[1,-1]]]]),
  assert(f([[[0,0],[-2,1]],[[[-1,-1],[-1,0]],[[[-2,-2],[0,0]]]],[[[1,-1],[-1,0]],[[[0,-2],[0,0]]]]]) = [[[0,0]],[[[-1,-1]],[[[-2,-2]]]],[[[1,-1]],[[[0,-2]]]]]),
  assert(f([[[0,0],[-3,2]],[[[-2,-1],[-1,1]],[[[-3,-2],[0,0]]],[[[-1,-2],[0,0]]]],[[[2,-1],[-1,0]],[[[1,-2],[0,0]]]]]) = [[[0,0]],[[[-2,-1]],[[[-3,-2]]],[[[-1,-2]]]],[[[2,-1]],[[[1,-2]]]]]),
  assert(f([[[0,0],[-3,3]],[[[-2,-1],[-1,1]],[[[-3,-2],[0,0]]],[[[-1,-2],[0,0]]]],[[[2,-1],[-1,1]],[[[1,-2],[0,0]]],[[[3,-2],[0,0]]]]]) = [[[0,0]],[[[-2,-1]],[[[-3,-2]]],[[[-1,-2]]]],[[[2,-1]],[[[1,-2]]],[[[3,-2]]]]]),
  true)$
 
okltest_reingold_tilford_annotated(f) := block([x,y],
  assert(f([],[x,y]) = [[[x,y],[x,x]]]),
  assert(f([[]],[0,0]) = [[[0,0],[-1,0]],[[[-1,-1],[0,0]]]]),
  assert(f([[],[]],[0,0]) = [[[0,0],[-1,1]],[[[-1,-1],[0,0]]],[[[1,-1],[0,0]]]]),
  assert(f([[[]],[[]]],[0,0]) = [[[0,0],[-2,1]],[[[-1,-1],[-1,0]],[[[-2,-2],[0,0]]]],[[[1,-1],[-1,0]],[[[0,-2],[0,0]]]]]),
  assert(f([[[],[]],[[]]],[0,0]) = [[[0,0],[-3,2]],[[[-2,-1],[-1,1]],[[[-3,-2],[0,0]]],[[[-1,-2],[0,0]]]],[[[2,-1],[-1,0]],[[[1,-2],[0,0]]]]]),
  assert(f([[[],[]],[[],[]]],[0,0]) = [[[0,0],[-3,3]],[[[-2,-1],[-1,1]],[[[-3,-2],[0,0]]],[[[-1,-2],[0,0]]]],[[[2,-1],[-1,1]],[[[1,-2],[0,0]]],[[[3,-2],[0,0]]]]]),    
  true)$


/*!
\endhtmlonly
*/
