/* Rui Wang, 28.9.2009 (Swansea) */
/* Copyright 2008, 2009 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Trees/Lisp/ReingoldTilford.mac
  \brief Functions of Reingold-Tilford algorithm

Use by

oklib_load("OKlib/ComputerAlgebra/Trees/Lisp/ReingoldTilford.mac");

*/

/*!
\htmlonly
*/

oklib_include("OKlib/ComputerAlgebra/Graphs/Lisp/ReingoldTilford.mac")$


/* ****************************
   * Reingold-Tilford algorithm *
   ****************************
*/

/* To be finished */
rt(T,x,y) := 

/* Obsoleted but keep as reference. 
ltd(T,x,y) := cons([x,y],
            map(ltd,T,
                create_list(x+(-1)^i,i,1,length(T)),
                create_list((y-1),i,1,length(T))));

ltd2(T,x,y) := if T=[] then x=0 else cons([x,y],
            map(ltd2,T,
                create_list(x,i,1,length(T)),
                create_list((y-1),i,1,length(T))));
*/




/* The mirror image of binary trees. */
mt(T) := reverse(makelist(mt(T[i]),i,1,length(T)))$

/* Translating a tree with coordinates */
/* To be finished */
tl() := 


