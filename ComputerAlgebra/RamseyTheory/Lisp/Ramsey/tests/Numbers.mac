/* Matthew Gwynne, 25.11.2008 (Swansea) */
/* Copyright 2008, 2009 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/RamseyTheory/Lisp/Ramsey/tests/Numbers.mac
  \brief Tests for functions computing Ramsey-numbers

Use by

oklib_load("OKlib/ComputerAlgebra/RamseyTheory/Lisp/Ramsey/tests/Numbers.mac");

*/

/*!
\htmlonly
*/

oklib_include("OKlib/ComputerAlgebra/TestSystem/Lisp/Asserts.mac")$

kill(f)$

okltest_ramsey(f) := block(
  for i : 1 thru 5 do
    assert(f(2,[1,i]) = 1),
  assert(f(2,[3,3]) = 6),
  assert(f(2,[4,4]) = 18),
  assert(f(2,[3,3,3]) = 17),
  true)$


okltest_ramsey_p(f) := block(
  /* XXX */
  true)$


/* *****************
   * Trivial cases *
   *****************
*/

okltest_ramseytrivle_a(f) := block(
  for i : 1 thru 5 do
    assert(f(1,[]) = []),
  assert(f(1,[1,5]) = []),
  assert(f(2,[1,5]) = [1]),
  true)$


okltest_ramseytrivle(f) := block(
  for i : 0 thru 5 do
    assert(f(i) = i),
  true)$


okltest_ramseytriveq_a(f) := block( 
  for i : 1 thru 5 do
    assert(f(1,[]) = []),
  assert(f(1,[1,5]) = [1,[5]]),
  assert(f(2,[1,5]) = []),
  true)$


okltest_ramseytriveq(f) := block(
  assert(f(2,[2,3,3]) = 6),
  assert(f(2,[2,2,2,4,4]) = 18),
  true)$


okltest_ramseytrivk_a(f) := block(
  for i : 1 thru 5 do
    assert(f(1,[]) = []),
  for i : 1 thru 5 do
    assert(f(i,[i]) = [i]),
  assert(f(2,[1,1]) = []),
  true)$


okltest_ramseytrivk(f) := block(
  for i : 0 thru 5 do
    assert(f(i) = i),
  true)$


/* *********************
   * Two-colour graphs *
   *********************
*/

okltest_ramseyg2_3_a(f) := block(
  for i : 3 thru 5 do
    assert(f(i,[3,4]) = []),
  assert(f(2,[]) = []),
  assert(f(2,[3]) = []),
  assert(f(2,[3,4]) = [4]),
  true)$


okltest_ramseyg2_3(f) := block(
  assert(f(1) = 1),
  assert(f(2) = 3),
  assert(f(3) = 6),
  true)$


okltest_ramseyg2_4_a(f) := block(
  for i : 3 thru 5 do
    assert(f(i,[3,4]) = []),
  assert(f(2,[]) = []),
  assert(f(2,[3]) = []),
  assert(f(2,[3,4]) = []),
  assert(f(2,[4,5]) = [5]),
  true)$


okltest_ramseyg2_4(f) := block(
  assert(f(1) = 1),
  assert(f(2) = 4),
  assert(f(4) = 18),
  true)$

okltest_ramseyg2_5_a(f) := block(
  for i : 3 thru 5 do
    assert(f(i,[3,4]) = []),
  assert(f(2,[]) = []),
  assert(f(2,[3]) = []),
  assert(f(2,[3,4]) = []),
  assert(f(2,[4,5]) = []),
  assert(f(2,[5,6]) = [6]),
  true)$


okltest_ramseyg2_5(f) := block(
  assert(f(1) = 1),
  assert(f(2) = 5),
  assert(f(4) = 25),
  assert(f(5) # unknown),
  true)$


okltest_ramseyg2_6_a(f) := block(
  for i : 3 thru 5 do
    assert(f(i,[3,4]) = []),
  assert(f(2,[]) = []),
  assert(f(2,[3]) = []),
  assert(f(2,[3,4]) = []),
  assert(f(2,[4,5]) = []),
  assert(f(2,[6,7]) = [7]),
  true)$


okltest_ramseyg2_6(f) := block(
  assert(f(1) = 1),
  assert(f(2) = 6),
  assert(f(3) = 18),
  assert(f(4) # unknown),
  true)$


okltest_ramseyg2_7_a(f) := block(
  for i : 3 thru 5 do
    assert(f(i,[3,4]) = []),
  assert(f(2,[]) = []),
  assert(f(2,[3]) = []),
  assert(f(2,[3,4]) = []),
  assert(f(2,[4,5]) = []),
  assert(f(2,[7,8]) = [8]),
  true)$


okltest_ramseyg2_7(f) := block(
  assert(f(1) = 1),
  assert(f(2) = 7),
  assert(f(3) = 23),
  assert(f(4) # unknown),
  true)$


okltest_ramseyg2_8_a(f) := block(
  for i : 3 thru 5 do
    assert(f(i,[3,4]) = []),
  assert(f(2,[]) = []),
  assert(f(2,[3]) = []),
  assert(f(2,[3,4]) = []),
  assert(f(2,[4,5]) = []),
  assert(f(2,[8,9]) = [9]),
  true)$


okltest_ramseyg2_8(f) := block(
  assert(f(1) = 1),
  assert(f(2) = 8),
  assert(f(3) = 28),
  assert(f(4) # unknown),
  true)$


okltest_ramseyg2_9(f) := block(
  assert(f(1) = 1),
  assert(f(2) = 9),
  assert(f(3) = 36),
  assert(f(4) # unknown),
  true)$


okltest_ramseyg2_9_a(f) := block(
  for i : 3 thru 5 do
    assert(f(i,[3,4]) = []),
  assert(f(2,[]) = []),
  assert(f(2,[3]) = []),
  assert(f(2,[3,4]) = []),
  assert(f(2,[4,5]) = []),
  assert(f(2,[9,10]) = [10]),
  true)$


okltest_ramseyg2_10(f) := block(
  assert(f(1) = 1),
  assert(f(2) = 10),
  assert(f(3) # unknown),
  true)$


okltest_ramseyg2_10_a(f) := block(
  for i : 3 thru 5 do
    assert(f(i,[3,4]) = []),
  assert(f(2,[]) = []),
  assert(f(2,[3]) = []),
  assert(f(2,[3,4]) = []),
  assert(f(2,[4,5]) = []),
  assert(f(2,[10,11]) = [11]),
  true)$


okltest_ramseyg3_3_3_a(f) := block(
  for i : 3 thru 5 do
    assert(f(i,[3,4]) = []),
  assert(f(2,[]) = []),
  assert(f(2,[3]) = []),
  assert(f(2,[3,4]) = []),
  assert(f(2,[4,5]) = []),
  assert(f(2,[3,3]) = []),
  assert(f(2,[3,3,3]) = [3]),
  true)$


okltest_ramseyg3_3_3(f) := block(
  assert(f(1) = 1),
  assert(f(2) = 6),
  assert(f(3) = 17),
  true)$


/* ***************
   * Hypergraphs *
   ***************
*/

okltest_ramseyhg3_2_4_a(f) := block(
  for i : 3 thru 5 do
    assert(f(i,[3,4]) = []),
  assert(f(2,[]) = []),
  assert(f(2,[3]) = []),
  assert(f(2,[3,4]) = []),
  assert(f(2,[4,5]) = []),
  assert(f(2,[5,6]) = []),
  assert(f(3,[5,6]) = []),
  assert(f(3,[4,6]) = [6]),
  true)$


okltest_ramseyhg3_2_4(f) := block(
  assert(f(4) = 13),
  true)$


/* **********
   * Bounds *
   **********
*/

okltest_ramsey_ub(f) := block(
  for i : 1 thru 5 do 
    assert(f(i) = i),
  for i : 1 thru 5 do
    assert(f([1,i]) = i),
  assert(f(200) = 200),
  assert(f([100,200]) = 200),
  true)$

okltest_ramsey_ub_s(f) := block(
  for i : 1 thru 5 do 
    assert(f(i) = i),
  for i : 1 thru 5 do
    assert(f([1,i]) = i),
  assert(f(200) = 200),
  assert(f([100,200]) = 200),
  assert(f(unknown) = inf),
  assert(f([unknown,10]) = 10),
  assert(f([1,unknown]) = inf),
  true)$


okltest_ramsey_lb(f) := block(
  for i : 1 thru 5 do 
    assert(f(i) = i),
  for i : 1 thru 5 do
    assert(f([i,i+10]) = i),
  assert(f(200) = 200),
  assert(f([100,200]) = 100),
  true)$

okltest_ramsey_lb_s(f) := block(
  for i : 1 thru 5 do 
    assert(f(i) = i),
  for i : 1 thru 5 do
    assert(f([i,i+10]) = i),
  assert(f(200) = 200),
  assert(f([100,200]) = 100),
  assert(f(unknown) = 0),
  assert(f([unknown,10]) = 0),
  assert(f([1,unknown]) = 1),
  true)$

/*!
\endhtmlonly
*/
