/* Oliver Kullmann, 5.8.2012 (Swansea) */
/* Copyright 2012 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/RamseyTheory/Lisp/Schur/Homomorphisms.mac
  \brief Homomorphisms related to Schur-hypergraphs

Use by

oklib_load("OKlib/ComputerAlgebra/RamseyTheory/Lisp/Schur/Homomorphisms.mac");

*/

/*!
\htmlonly
*/

oklib_include("OKlib/ComputerAlgebra/Hypergraphs/Lisp/SetSystems.mac")$
oklib_include("OKlib/ComputerAlgebra/Algebra/Lisp/Ringframes/Rings/ResidueClasses.mac")$ /* to provide inv_residues(n) */
oklib_include("OKlib/ComputerAlgebra/Hypergraphs/Lisp/Generators/Schur.mac")$


/* ***********************************
   * Relations to Ramsey-hypergraphs *
   ***********************************
*/

/* A homomorphism from ramsey_hg(3,2,n+1) to schurtriples_hg(n), as well as a
   sup-homomorphism from ramsey_hg(4,2,n+1) to wschurtriples_hg(n): */
hom_ramsey_schur(n) := lambda([e], second_element(e) - first_element(e))$

/* Due to these morphisms we have
     schur(r)  <= ramsey([2,create_list(3,i,1,r)]) - 1
     wschur(r) <= ramsey([2,create_list(4,i,1,r)]) - 1.
*/

/* For a group G (with inversion) of order n together with an arbitrary
   linear order V (as a repetition-free list) of the base-set of G, a
   homomorphism from ramsey_hg(3,2,n) to grouptriples_ugrp2hg(G):
*/
hom_ramsey_group_ugrpi_l(G,V) := block(
 [compo_ : G[2], inv_ : G[4], A : l2ary(V)],
 buildq([compo_,inv_,A], lambda([e], compo_(A[second_element(e)], inv_(A[first_element(e)])))))$
hom_ramsey_group_ugrpi(G) := hom_ramsey_group_ugrpi_l(G,listify(G[1]))$


/* *****************
   * Automorphisms *
   *****************
*/

/* For x in inv_residues(n+1) an automorphism of schurtriples_pd_hg(n): */
auto_pdschur(n,x) := buildq([n,x], lambda([v], mirrorfold_schur(n)(mod(x*v,n+1))));

/* For x in inv_residues(n+1) an automorphism of wschurtriples_pd_hg(n): */
auto_pdwschur(n,x) := buildq([n,x], lambda([v], mirrorfold_wschur(n)(mod(x*v,n+1))));


/*!
\endhtmlonly
*/
