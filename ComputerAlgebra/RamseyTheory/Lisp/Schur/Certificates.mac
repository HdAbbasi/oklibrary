/* Oliver Kullmann, 15.7.2012 (Swansea) */
/* Copyright 2012 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/RamseyTheory/Lisp/Schur/Certificates.mac
  \brief Functions for investigating certificates of Schur-lower-bounds

Use by

oklib_load("OKlib/ComputerAlgebra/RamseyTheory/Lisp/Schur/Certificates.mac");

*/

/*!
\htmlonly
*/

oklib_include("OKlib/ComputerAlgebra/Hypergraphs/Lisp/SetSystems.mac")$
oklib_include("OKlib/ComputerAlgebra/DataStructures/Lisp/Lists.mac")$
oklib_include("OKlib/ComputerAlgebra/Hypergraphs/Lisp/Generators/Schur.mac")$
oklib_include("OKlib/ComputerAlgebra/RamseyTheory/Lisp/VanderWaerden/Certificates.mac")$


/* *****************
   * Basic notions *
   *****************
*/

/*
   A "Schur-certificate" P for a natural number r corresponds to a solution of
   schur_nbfclud(r,n), that is, certifies that schur(r) > n.

   P is a block partition of {1,...,n} into r blocks, that is, a list of
   r disjoint subsets of {1,...,n} whose union is the whole set.
*/
certificate_schur_p(r,n,P) := is(r = length(P)) and
 blockpartitionp(P,setn(n)) and
 every_s(lambda([b], not has_schurtriple(b)), P)$

/* Check whether P is a palindromic Schur-certificate for r and n: */
certificate_pdschur_p(r,n,P) := palindromic_subsets_p(n,P) and
 certificate_schur_p(r,n,P)$


/*!
\endhtmlonly
*/
