/* Oliver Kullmann, 12.11.2010 (Swansea) */
/* Copyright 2010 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/RamseyTheory/Lisp/VanderWaerden/tests/Certificates.mac
  \brief Tests for functions related to vdW-hypergraphs

Use by

oklib_load("OKlib/ComputerAlgebra/RamseyTheory/Lisp/VanderWaerden/tests/Certificates.mac");

*/

/*!
\htmlonly
*/

oklib_include("OKlib/ComputerAlgebra/TestSystem/Lisp/Asserts.mac")$
oklib_include("OKlib/ComputerAlgebra/Hypergraphs/Lisp/SetSystems.mac")$


kill(f)$

/* *****************
   * Basic notions *
   *****************
*/

okltest_check_certificate_vdw(f) := (
  assert(f([],0,[]) = true),
  assert(f([],1,[]) = false),
  assert(f([],1,[{1}]) = false),
  assert(f([1],0,[{}]) = true),
  assert(f([1],1,[{1}]) = false),
  assert(f([1],1,[{}]) = false),
  assert(f([1],1,[{},{1}]) = false),
  assert(f([1,1],0,[{},{}]) = true),
  assert(f([1,1],1,[{},{}]) = false),
  assert(f([1,1],1,[{1},{}]) = false),
  assert(f([1,1],1,[{2},{2}]) = false),
  assert(f([1,1],2,[{2},{2}]) = false),
  assert(f([1,1],2,[{1},{2}]) = false),
  assert(f([2],0,[{}]) = true),
  assert(f([2],1,[{1}]) = true),
  assert(f([2],2,[{1,2}]) = false),
  assert(f([3],0,[{}]) = true),
  assert(f([3],1,[{1}]) = true),
  assert(f([3],2,[{1,2}]) = true),
  assert(f([2,2],0,[{},{}]) = true),
  assert(f([2,2],1,[{1},{}]) = true),
  assert(f([2,2],2,[{1},{2}]) = true),
  assert(f([2,2],3,[{1,3},{2}]) = false),
  assert(f([3,3],8,[{1,3,6,8},{2,4,5,7,9}]) = false),
  assert(f([3,3],8,[{2,4,5,7},{1,3,6,8}]) = true),
  true)$


/* *******************
   * Transformations *
   *******************
*/

okltest_create_certificate2_vdw(f) := (
  assert(f([],0) = [{},{}]),
  assert(f([1],1) = [{1},{}]),
  assert(f([],1) = [{},{1}]),
  assert(f([1,3,5,6],8) = [{1,3,5,6},{2,4,7,8}]),
  true)$

okltest_certificatevdw2list(f) := (
  assert(f([]) = []),
  for n : 0 thru 5 do
    assert(f(create_list({i},i,1,n)) = create_list([i-1,1],i,1,n)),
  for n : 0 thru 5 do
    assert(f([setn(n)]) = if n=0 then [] else [[0,n]]),
  assert(f([{2,4},{1,3,5,6},{7,8,10},{9}]) = [[1,1],[0,1],[1,1],[0,1],[1,2],[2,2],[3,1],[2,1]]),
  true)$

okltest_certificatevdw2string(f) := (
  assert(f([]) = ""),
  assert(f([{3,4,5},{1,2,6}]) = "1^{2}0^{3}1"),
  assert(f([{4,5,6},{1,2,3}]) = "1^{3}0^{3}"),
  true)$


/*!
\endhtmlonly
*/
