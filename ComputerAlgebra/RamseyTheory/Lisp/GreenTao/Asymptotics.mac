/* Oliver Kullmann, 8.5.2010 (Swansea) */
/* Copyright 2010 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/RamseyTheory/Lisp/GreenTao/Asymptotics.mac
  \brief Asymptotic computations in the context of Green-Tao numbers

Use by

oklib_load("OKlib/ComputerAlgebra/RamseyTheory/Lisp/GreenTao/Asymptotics.mac");

*/

/*!
\htmlonly
*/

oklib_include("OKlib/ComputerAlgebra/NumberTheory/Lisp/PrimeNumbers.mac")$

/* *********************************************
   * The formula from [Grosswald. Hagis, 1979] *
   *********************************************
*/

/* First computing the coefficients C_k = C_gh(k,inf), defined as
     C_k = (prod_{p <= k} 1/p * (p/(p-1))^(k-1)) *
           (prod_{p > k} (p/(p-1))^(k-1) * (p-k+1)/p)
   where p ranges over the prime numbers.

   The first factor is computed by C_gh_fin(k), the second by
   C_gh_inf(k,max_p), where only p <= max_p is considered.
 */

C_gh_fin(k) := prod_l(
 create_list(1/p * (p/(p-1))^(k-1), p, primes_first(count_primes(k))))$

/* Prerequisite: max_p >= 2 */
C_gh_inf(k,max_p) := block(
 [L : rest(primes_first(count_primes(max_p)), count_primes(k))],
  prod_l(map(lambda([p], p^(k-2)*(p-k+1)/(p-1)^(k-1)), L)))$
/* Using floating-point arithmetic: */
C_gh_inf_hp(k,max_p) := block(
 [L : rest(primes_first(count_primes(max_p)), count_primes(k))],
  prod_l(map(lambda([p], bfloat(p^(k-2)*(p-k+1)/(p-1)^(k-1))), L)))$

C_gh(k,max_p) := C_gh_fin(k) * C_gh_inf(k,max_p)$
/* Using floating-point arithmetic: */
C_gh_hp(k,max_p,decimal_digits) := block([fpprec : decimal_digits],
  C_gh_fin(k) * C_gh_inf_hp(k,max_p))$

/*!
\endhtmlonly
*/
