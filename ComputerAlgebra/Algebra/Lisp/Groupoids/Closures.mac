/* Oliver Kullmann, 5.7.2008 (Swansea) */
/* Copyright 2008, 2009 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Algebra/Lisp/Groupoids/Closures.mac
  \brief Regarding the sub-groupoid generated by a set of elements

Use by

oklib_load("OKlib/ComputerAlgebra/Algebra/Lisp/Groupoids/Closures.mac");

*/

/*!
\htmlonly
*/

oklib_include("OKlib/ComputerAlgebra/Algebra/Lisp/Groupoids/Constructions.mac")$


/* Given a composition compo_ and a set S of elements (of the underlying
   gruppoid), compute the closure: */
closure_bydef_grd(compo_,S) := block([S_old : {}],
  while length(S_old) < length(S) do (
    if oklib_monitor then print("Current size of closure is ", length(S)),
    S_old : S,
    S : union(S, complex_compo(compo_)(S,S))
  ),
  return(S_old))$

/* The set of elements of a groupoid which are not representable as 
   compositions of other elements; these elements must be present
   in every generating set: */
indecomposable_elements_bydef_grd(V) := block([U : V[1]],
  for x in U do
    for y in U do block([z : V[2](x,y)],
      if not elementp(z, {x,y}) then
        U : disjoin(z,U)),
  return(U))$

/*!
\endhtmlonly
*/
