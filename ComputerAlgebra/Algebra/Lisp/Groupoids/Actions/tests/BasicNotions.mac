/* Oliver Kullmann, 19.9.2009 (Swansea) */
/* Copyright 2009 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Algebra/Lisp/Groupoids/Actions/tests/BasicNotions.mac
  \brief Tests for the basic groupoid-notions

Use by

oklib_load("OKlib/ComputerAlgebra/Algebra/Lisp/Groupoids/Actions/tests/BasicNotions.mac");

*/

/*!
\htmlonly
*/

oklib_include("OKlib/ComputerAlgebra/TestSystem/Lisp/Asserts.mac")$
oklib_include("OKlib/ComputerAlgebra/Algebra/Lisp/Groupoids/Semigroups/BasicExamples.mac")$
oklib_include("OKlib/ComputerAlgebra/Algebra/Lisp/Groupoids/Groups/CyclicGroups.mac")$
oklib_include("OKlib/ComputerAlgebra/Algebra/Lisp/Ringframes/Rings/ResidueClasses.mac")$

kill(f)$


/* *****************
   * Basic notions *
   *****************
*/

okltest_ecompo_p(f) := (

  /* XXX */
  true)$

okltest_recompo_p(f) := (

  /* XXX */
  true)$

okltest_act_set_p(f) := block([LG],
  LG : [empty_sgr, singleton_mon, cyclic_ugrp(2)],
  for G in LG do
    assert(f(G[2], G[1], G[1]) = true),
  /* XXX */
  true)$

okltest_ract_set_p(f) := (
  assert(okltest_act_set_p(buildq([f], lambda([act2_,A,X], f(lambda([x,a],act2_(a,x)),X,A)))) = true),
  true)$

okltest_act_grd_p(f) := block([G],
  assert(f(empty_sgr[2], empty_sgr[1], empty_sgr) = true),
  assert(f(singleton_mon[2], singleton_mon[1], singleton_mon) = true),
  G : cyclic_ugrp(2),
  assert(f(G[2], G[1], G) = false),
  assert(f(residues_rng(2)[3],G[1],G) = true),
  /* XXX */
  true)$

okltest_ract_grd_p(f) := (
  assert(okltest_act_grd_p(buildq([f], lambda([act2_,A,V], f(lambda([x,a],act2_(a,x)),V,A)))) = true),
  true)$

okltest_act_ugrd_p(f) := block([G],
  assert(f(singleton_mon[2], singleton_mon[1], singleton_mon) = true),
  G : cyclic_ugrp(2),
  assert(f(G[2], G[1], G) = false),
  assert(f(residues_rng(2)[3],G[1],G) = true),
  /* XXX */
  true)$

okltest_ract_ugrd_p(f) := (
  assert(okltest_act_ugrd_p(buildq([f], lambda([act2_,A,V], f(lambda([x,a],act2_(a,x)),V,A)))) = true),
  true)$


/* ***************
   * Conversions *
   ***************
*/



/* ********************
   * Basic operations *
   ********************
*/




/*!
\endhtmlonly
*/
