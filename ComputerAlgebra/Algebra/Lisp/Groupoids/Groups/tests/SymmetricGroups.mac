/* Oliver Kullmann, 11.8.2012 (Swansea) */
/* Copyright 2012 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Algebra/Lisp/Groupoids/Groups/tests/SymmetricGroups.mac
  \brief Tests regarding symmetric groups

Use by

oklib_load("OKlib/ComputerAlgebra/Algebra/Lisp/Groupoids/Groups/tests/SymmetricGroups.mac");

*/

/*!
\htmlonly
*/

oklib_include("OKlib/ComputerAlgebra/TestSystem/Lisp/Asserts.mac")$
oklib_include("OKlib/ComputerAlgebra/Algebra/Lisp/Groupoids/BasicNotions.mac")$
oklib_include("OKlib/ComputerAlgebra/Algebra/Lisp/Groupoids/Groups/SymmetricGroups.mac")$
oklib_include("OKlib/ComputerAlgebra/Algebra/Lisp/Groupoids/InvertibleElements.mac")$

kill(f)$


/* **************************
   * Permutations as lists *
   **************************
*/

okltest_sym_l_ugrpi(f) := (
  assert(f(0) = [{[]},transformation_l_compo, [], permutation_l_inv(0)]),
  for n : 1 thru cokltl(3,4,5) do block([S : f(n)],
    assert(ugrpi_p(S) = true),
    assert(ugrpi2ugrp(S) = sym_l_ugrp(n))
  ),
  true)$

okltest_sym_l_ougrp(f) := (
  assert(f(0) = [[[]],transformation_l_compo, []]),
  for n : 1 thru cokltl(3,4,5) do block([S : f(n)],
    assert(ougrp_p(S) = true),
    assert(ougrp2ugrp(S) = sym_l_ugrp(n))
  ),
  true)$


/* **********************
   * Cycle presentation *
   **********************
*/


/* ********************
   * Basic operations *
   ********************
*/

okltest_numinvolutions_symgrp(f) := (
  assert(f(0) = 1),
  assert(f(1) = 1).
  assert(f(10) = 9496),
  for n : 0 thru cokltl(4,6) do
    assert(f(n) = 1 + length(involutions_ugrd(sym_l_ugrp(n)))),
  true)$

/*!
\endhtmlonly
*/
