/* Oliver Kullmann, 7.7.2008 (Swansea) */
/* Copyright 2008, 2009 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Algebra/Lisp/Groupoids/Semigroups/TransformationMonoids.mac
  \brief Implementing transformation semigroups
        
  Given a set U, here we deliver different representations of the
  transformation monoid T(U), consisting of all maps f: U -> U (with the
  identity as neutral element).

Use by

oklib_load("OKlib/ComputerAlgebra/Algebra/Lisp/Groupoids/Semigroups/TransformationMonoids.mac");

*/

/*!
\htmlonly
*/

oklib_include("OKlib/ComputerAlgebra/Hypergraphs/Lisp/SetSystems.mac")$
oklib_include("OKlib/ComputerAlgebra/DataStructures/Lisp/HashMaps.mac")$


/* ****************************
   * Transformations as lists *
   ****************************
*/

/* Here only standardised sets, i.e., U = {1, ..., n},
   are considered, and then a "transformation as list"
   is a list of length n with elements from U.
*/

/* Composition of transformations as lists. */
/* Prerequisite: length(x) = length(y). */
/* RENAME: trf_l_compo */
transformation_l_compo(x,y) := if length(x) <= 200 then create_list(x[i], i,y)
 else block([a : il2ary(x)],  create_list(a[i], i,y))$
trf_l_compo(x,y) := transformation_l_compo(x,y)$

/* The full transformation monoid over n elements (and thus with n^n
   transformations): */
/* RENAME: trf_l_mon */
transformations_l_mon(n) := 
  [all_transformations_l(setn(n)), 
   transformation_l_compo, 
   create_list(i,i,1,n)]$
trf_l_mon(n) := transformations_l_mon(n)$

/*!
\endhtmlonly
*/
