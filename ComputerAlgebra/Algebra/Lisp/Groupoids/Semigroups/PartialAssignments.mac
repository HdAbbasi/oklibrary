/* Oliver Kullmann, 9.7.2008 (Swansea) */
/* Copyright 2008 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Algebra/Lisp/Groupoids/Semigroups/PartialAssignments.mac
  \brief The monoid of partial assignments

Use by

oklib_load("Transitional/ComputerAlgebra/Algebra/Lisp/Groupoids/Semigroups/PartialAssignments.mac");

*/

/*!
\htmlonly
*/

oklib_include("Transitional/ComputerAlgebra/Satisfiability/Lisp/ClauseSets/PartialAssignments.mac")$


/* *******************************
   * Boolean partial assignments *
   *******************************
*/

/* The composition of partial assignments (which are here represented
   as clauses) is compo_pass.
*/

/* The monoid of partial assignments over the set V of variables: */
pass_mon(V) := [all_pass(V), compo_pass, {}]$
/* The semigroup of partial assignments over the set V of variables: */
pass_sgr(V) := [disjoin({},all_pass(V)), compo_pass]$

/* The natural (faithful) operation of partial assignments over V on 
   V union {z,o}, where z represents 0 and o represents 1: */
natop_pass(z,o) := buildq([z,o],
  lambda([phi,x], 
    if elementp(x,{z,o}) then x 
    elseif elementp(x,phi) then o 
    elseif elementp(-x,phi) then z 
    else x))$

/*!
\endhtmlonly
*/

