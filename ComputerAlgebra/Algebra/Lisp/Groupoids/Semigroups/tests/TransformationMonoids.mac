/* Oliver Kullmann, 7.7.2008 (Swansea) */
/* Copyright 2008 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Algebra/Lisp/Groupoids/Semigroups/tests/TransformationMonoids.mac
  \brief Tests for transformation monoids

Use by

oklib_load("Transitional/ComputerAlgebra/Algebra/Lisp/Groupoids/Semigroups/tests/TransformationMonoids.mac");

*/

/*!
\htmlonly
*/

oklib_include("Transitional/ComputerAlgebra/TestSystem/Lisp/Asserts.mac")$
oklib_include("Transitional/ComputerAlgebra/Algebra/Lisp/Groupoids/BasicNotions.mac")$

kill(f)$


okltest_transformation_l_compo(f) := (
  assert(f([],[]) = []),
  assert(f([1],[1]) = [1]),
  assert(f([1,2],[1,2]) = [1,2]),
  assert(f([1,2],[2,1]) = [2,1]),
  assert(f([2,1],[2,1]) = [1,2]),
  assert(f([2,1,3],[3,2,1]) = [3,1,2]),
  true)$

okltest_transformations_l_mon(f) := (
  for n : 0 thru if oklib_test_level=0 then 2 else 3 do block([M : f(n)],
    assert(length(M[1]) = if n=0 then 1 else n^n),
    assert(mon_p(M) = true)
  ),
  true)$

/*!
\endhtmlonly
*/
