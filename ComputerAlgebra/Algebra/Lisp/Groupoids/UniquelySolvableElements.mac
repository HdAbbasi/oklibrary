/* Oliver Kullmann, 8.7.2008 (Swansea) */
/* Copyright 2008, 2009 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Algebra/Lisp/Groupoids/UniquelySolvableElements.mac
  \brief Tests and search-functions regarding "permutation elements"

Use by

oklib_load("Transitional/ComputerAlgebra/Algebra/Lisp/Groupoids/UniquelySolvableElements.mac");

*/

/*!
\htmlonly
*/

/*
  In a general (possibly infinite) groupoid V we have the following
  notions for an element x:
  - x is left- resp. right-solvable if the left- resp. right-translation
    by x is surjective.
  - x is left- resp. right-cancellable if the left- resp. right-translation
    by x is injective.
  - Let's denote "left-solvable and left-cancellable", i.e., left-translation
    is a bijection, by "left-uniquely-solvable", "right-solvable and 
    right-cancellable" by "right-uniquely-solvable", and 
    "solvable and cancellable" by "uniquely-solvable".

  Now for a finite groupoid both conditions are equivalent, and are
  equivalent to the condition that left resp. right-translations
  are permutations.
*/

/* Check whether x induces a permutation for groupoid V: */
leftpermutation_el_grd(V,x) := is(length(map(lambda([y],V[2](x,y)),V[1])) = length(V[1]))$
rightpermutation_el_grd(V,x) := is(length(map(lambda([y],V[2](y,x)),V[1])) = length(V[1]))$
permutation_el_grd(V,x) := leftpermutation_el_grd(V,x) and rightpermutation_el_grd(V,x)$

/* Whether a groupoid is uniquely solvable:
*/
uniquelysolvable_bydef_grd(V) := every_s(lambda([x],permutation_el_grd(V,x)),V[1])$
/* The condition "qgrp_p" for a groupoid additionally just checks whether
   we have a groupoid at all.
*/


/*!
\endhtmlonly
*/
