/* Oliver Kullmann, 15.7.2012 (Swansea) */
/* Copyright 2012 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Hypergraphs/Lisp/Generators/Schur.mac
  \brief Maxima functions for generating Schur-hypergraphs

Use by

oklib_load("OKlib/ComputerAlgebra/Hypergraphs/Lisp/Generators/Schur.mac");

*/

/*!
\htmlonly
*/

oklib_include("OKlib/ComputerAlgebra/Hypergraphs/Lisp/Basics.mac")$


/* *******************
   * Schur's theorem *
   *******************
*/

/* The hypergraph with vertex set {1, ..., n} (n >= 0) and hyperedges {x,y,z}
   with x+y=z (note that x=y is possible, while z notin {x,y}).
   The order is monotonic (larger n add hyperedges to the end, with first
   z increasing, and second x increasing.
*/
schurtriples_ohg(n) :=
 [create_list(i,i,1,n), create_list({x,z-x,z}, z,2,n, x,1,floor(z/2))]$
schurtriples_hg(n) := ohg2hg(schurtriples_ohg(n))$
/* Without subsumptions ("me" for "minimal elements"):
   Precisely the hyperedges {x,2x} with 3x <= n subsume other hyperedges,
   namely precisely the hyperedge {x,2x,3x}.
*/
schurtriples_me_ohg(n) :=
 [create_list(i,i,1,n),
  delete(0,create_list(if x#z/3 then {x,z-x,z} else 0, z,2,n, x,1,floor(z/2)))]$
schurtriples_me_hg(n) := ohg2hg(schurtriples_me_ohg(n))$


/* Statistics functions: */

nver_schurtriples_hg(n) := n$
nver_schurtriples_ohg(n) := n$

nhyp_list_schurtriples_hg(n) := if n <= 1 then [] elseif n=2 then [[2,1]] else
 [[2, floor(n/2)], [3, floor((n-1)/2) * ceiling((n-1)/2)]]$
nhyp_list_schurtriples_ohg(n) := nhyp_list_schurtriples_hg(n)$
nhyp_list_schurtriples_me_hg(n) := if n <= 1 then [] elseif n<=3 then [[2,1]]
 else [[2, floor(n/2)], [3, floor((n-1)/2)*ceiling((n-1)/2) - floor(n/3)]]$
nhyp_list_schurtriples_me_ohg(n) := nhyp_list_schurtriples_me_hg(n)$

nhyp_schurtriples_hg(n) := floor(n/2) + floor((n-1)/2) * ceiling((n-1)/2)$
nhyp_schurtriples_ohg(n) := nhyp_schurtriples_hg(n)$
nhyp_schurtriples_me_hg(n) := nhyp_schurtriples_hg(n) - floor(n/3)$
nhyp_schurtriples_me_ohg(n) := nhyp_schurtriples_me_hg(n)$


/* k >= 3 */
/* To be completed. */
linequations_ohg(k,n) := block([V : setn(n)],
  0)$
/* Remark: linequations_ohg(3,n) = schurtriples_ohg(3). */

/*!
\endhtmlonly
*/
