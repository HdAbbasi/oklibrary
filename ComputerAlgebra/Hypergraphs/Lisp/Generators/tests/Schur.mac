/* Oliver Kullmann, 15.7.2012 (Swansea) */
/* Copyright 2012 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Hypergraphs/Lisp/Generators/tests/Schur.mac
  \brief Tests for Schur-hypergraph generators

Use by

oklib_load("OKlib/ComputerAlgebra/Hypergraphs/Lisp/Generators/tests/Schur.mac");

*/

/*!
\htmlonly
*/

oklib_include("OKlib/ComputerAlgebra/TestSystem/Lisp/Asserts.mac")$
oklib_include("OKlib/ComputerAlgebra/Hypergraphs/Lisp/Generators/Schur.mac")$
oklib_include("OKlib/ComputerAlgebra/Hypergraphs/Lisp/Statistics.mac")$

kill(f)$


/* *******************
   * Schur's theorem *
   *******************
*/

okltest_schurtriples_ohg(f) := (
  assert(f(0) = [[],[]]),
  assert(f(1) = [[1],[]]),
  assert(f(2) = [[1,2], [{1,1,2}]]),
  assert(f(3) = [[1,2,3], [{1,2},{1,2,3}]]),
  assert(f(4) = [[1,2,3,4], [{1,2},{1,2,3},{1,3,4},{2,2,4}]]),
  assert(f(5) = [[1,2,3,4,5],[{1,2},{1,2,3},{1,3,4},{2,2,4},{1,4,5},{2,3,5}]]),
  assert(f(6) = [[1,2,3,4,5,6],[{1,2},{1,2,3},{1,3,4},{2,2,4},{1,4,5},{2,3,5},{1,5,6},{2,4,6},{3,6}]]),
  true)$

okltest_schurtriples_hg(f) := (
  assert(f(0) = [{},{}]),
  assert(f(1) = [{1},{}]),
  assert(f(2) = [{1,2}, {{1,1,2}}]),
  assert(f(3) = [{1,2,3}, {{1,2},{1,2,3}}]),
  assert(f(4) = [{1,2,3,4}, {{1,2},{1,2,3},{1,3,4},{2,2,4}}]),
  true)$

okltest_schurtriples_me_ohg(f) := (
  assert(f(0) = [[],[]]),
  assert(f(1) = [[1],[]]),
  assert(f(2) = [[1,2], [{1,1,2}]]),
  assert(f(3) = [[1,2,3], [{1,2}]]),
  assert(f(4) = [[1,2,3,4], [{1,2},{1,3,4},{2,2,4}]]),
  assert(f(5) = [[1,2,3,4,5],[{1,2},{1,3,4},{2,2,4},{1,4,5},{2,3,5}]]),
  assert(f(6) = [[1,2,3,4,5,6],[{1,2},{1,3,4},{2,2,4},{1,4,5},{2,3,5},{1,5,6},{3,6}]]),
  true)$

okltest_schurtriples_me_hg(f) := (
  for n : 0 thru if oklib_test_level=0 then 10 else 50 do
   block([G : schurtriples_hg(n)],
    assert(f(n) = [G[1], min_elements(G[2])])
  ),
  true)$

okltest_wschurtriples_ohg(f) := (
  assert(f(0) = [[],[]]),
  assert(f(1) = [[1],[]]),
  assert(f(2) = [[1,2],[]]),
  assert(f(3) = [[1,2,3],[{1,2,3}]]),
  assert(f(4) = [[1,2,3,4],[{1,2,3},{1,3,4}]]),
  assert(f(5) = [[1,2,3,4,5],[{1,2,3},{1,3,4},{1,4,5},{2,3,5}]]),
  assert(f(6) = [[1,2,3,4,5,6],[{1,2,3},{1,3,4},{1,4,5},{2,3,5},{1,5,6},{2,4,6}]]),
  assert(f(7) = [[1,2,3,4,5,6,7],[{1,2,3},{1,3,4},{1,4,5},{2,3,5},{1,5,6},{2,4,6},{1,6,7},{2,5,7},{3,4,7}]]),
  assert(f(8) = [[1,2,3,4,5,6,7,8],[{1,2,3},{1,3,4},{1,4,5},{2,3,5},{1,5,6},{2,4,6},{1,6,7},{2,5,7},{3,4,7},{1,7,8},{2,6,8},{3,5,8}]]),
  for n : 0 thru 15 do block([G : schurtriples_ohg(n)],
    assert(f(n) = [G[1], sublist(G[2], lambda([H], is(length(H)=3)))])
  ),
  true)$

okltest_nhyp_list_schurtriples_ohg(f) := (
  for n : 0 thru 10 do
    assert(f(n) = nhyp_list_ohg(schurtriples_ohg(n))),
  true)$

okltest_nhyp_list_schurtriples_me_ohg(f) := (
  for n : 0 thru 20 do
    assert(f(n) = nhyp_list_ohg(schurtriples_me_ohg(n))),
  true)$

okltest_nhyp_list_wschurtriples_ohg(f) := (
  for n : 0 thru 10 do
    assert(f(n) = nhyp_list_ohg(wschurtriples_ohg(n))),
  true)$

okltest_nhyp_schurtriples_ohg(f) := (
  for n : 0 thru 10 do
    assert(f(n) = nhyp_ohg(schurtriples_ohg(n))),
  true)$

okltest_nhyp_schurtriples_me_ohg(f) := (
  for n : 0 thru 10 do
    assert(f(n) = nhyp_ohg(schurtriples_me_ohg(n))),
  true)$

okltest_nhyp_wschurtriples_ohg(f) := (
  for n : 0 thru 10 do
    assert(f(n) = nhyp_ohg(wschurtriples_ohg(n))),
  true)$

okltest_has_schurtriple(f) := (
  assert(f({}) = false),
  assert(f({0}) = true),
  assert(f({1}) = false),
  assert(f({1,2}) = true),
  assert(f({1,3}) = false),
  assert(f({2,3}) = false),
  assert(f({2,4}) = true),
  assert(f({1,2,3}) = true),
  assert(f({-1,2,3}) = true),
  assert(f({-1,2,4}) = true),
  assert(f({-1,2,5}) = false),
  assert(f({2,4,6,12}) = true),
  assert(f({2,4,7,12}) = true),
  assert(f({2,5,7,12}) = true),
  assert(f({2,6,7,12}) = true),
  assert(f({2,6,7,15}) = false),
  assert(f({4,5,15,16,22,28,29,39,40,41,42,48,49,59}) = false),
  assert(f({1,4,7,10,30}) = false),
  assert(f({1,4,7,10,30,37}) = true),
  true)$


/* ************
   * Symmetry *
   ************
*/

okltest_schurtriples_pd_ohg(f) := (
  assert(f(0) = [[],[]]),
  assert(f(1) = [[1],[]]),
  assert(f(2) = [[1,2],[{1,2}]]),
  assert(f(3) = [[1,2],[{1,2}]]),
  assert(f(4) = [[1,2],[{1,2}]]),
  assert(f(5) = [[1,2,3,4],[{1,2},{1,4},{2,4}]]),
  assert(f(6) = [[1,2,3],[{1,2},{1,3},{2,3}]]),
  assert(f(7) = [[1,2,3,4],[{1,2},{2,3},{2,4},{1,3,4}]]),
  assert(f(8) = [[1,2,3,4,6],[{1,2},{1,4},{2,4},{3,6}]]),
  true)$

okltest_wschurtriples_pd_ohg(f) := (
  assert(f(0) = [[],[]]),
  assert(f(1) = [[1],[]]),
  assert(f(2) = [[1],[]]),
  assert(f(3) = [[1,2],[{1,2}]]),
  assert(f(4) = [[1,2],[{1,2}]]),
  assert(f(5) = [[1,2,3],[{1,2}]]),
  assert(f(6) = [[1,2,3],[{1,2},{1,3},{2,3}]]),
  assert(f(7) = [[1,2,3,4],[{1,2},{2,3},{2,4},{1,3,4}]]),
  assert(f(8) = [[1,2,3,4],[{1,2},{1,4},{2,4}]]),
  true)$

/*!
\endhtmlonly
*/
