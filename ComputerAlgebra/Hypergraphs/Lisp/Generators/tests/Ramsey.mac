/* Oliver Kullmann, 5.8.2012 (Swansea) */
/* Copyright 2012 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Hypergraphs/Lisp/Generators/tests/Ramsey.mac
  \brief Tests for hypergraph generators

Use by

oklib_load("OKlib/ComputerAlgebra/Hypergraphs/Lisp/Generators/tests/Ramsey.mac");

*/

/*!
\htmlonly
*/

oklib_include("OKlib/ComputerAlgebra/TestSystem/Lisp/Asserts.mac")$
oklib_include("OKlib/ComputerAlgebra/Hypergraphs/Lisp/Basics.mac")$
oklib_include("OKlib/ComputerAlgebra/Hypergraphs/Lisp/Generators/Ramsey.mac")$

kill(f)$


/* ********************
   * Ramsey's theorem *
   ********************
*/

okltest_ramsey_hg(f) := (
  for q : 0 thru 3 do
    for r : 0 thru 3 do
      for n : 0 thru 3 do block([G : f(q,r,n)],
        assert(length(G[1]) = binomial(n,r)),
        assert(length(G[2]) = if q>n then 0 else
          if r<=q then (if r=0 then 1 else binomial(n,q)) else 0)),
  true)$

okltest_ramsey_ohg(f) := (
  assert(f(0,0,0) = [[{}],[{{}}]]),
  assert(f(0,0,1) = [[{}],[{{}}]]),
  assert(f(0,1,0) = [[],[]]),
  assert(f(1,0,0) = [[{}],[]]),
  assert(f(0,0,2) = [[{}], [{{}}]]),
  assert(f(0,2,0) = [[], []]),
  assert(f(2,0,0) = [[{}], []]).
  /* XXX */
  for q : 0 thru 3 do
    for r : 0 thru 3 do
      for n : 0 thru 3 do
        assert(ohg_p(f(q,r,n))),
  assert(okltest_ramsey_hg(buildq([f],lambda([q,r,n],ohg2hg(f(q,r,n)))))),
  true)$

okltest_rv_var(f) := block([x,y,z],
  assert(f() = rv()),
  assert(f(x) = rv(x)),
  assert(f(x,y) = rv(x,y)),
  assert(f(x,y,z) = rv(x,y,z)),
  true)$

okltest_set_rv(f) := (
  assert(f({}) = rv()),
  assert(f({1}) = rv(1)),
  assert(f({1,3,5}) = rv(1,3,5)),
  true)$

okltest_ramseyrv_ohg(f) := block(
  /* XXX */
  if oklib_test_level = 0 then return(true),
  assert(okltest_ramsey_ohg(buildq([f], lambda([q,r,n], ev(f(q,r,n), rv([L]):=setify(L), rv)))) = true),
  true)$

okltest_ramsey_stdohg(f) := (
  assert(f(4,3,5) = [[1,2,5,3,6,8,4,7,9,10],[{1,2,3,4},{1,5,6,7},{2,5,8,9},{3,6,8,10},{4,7,9,10}]]),
  /* XXX */
  true)$

okltest_nver_ramsey_ohg(f) := (
  for q : 0 thru 4 do
    for r : 0 thru 5 do
      for n : 0 thru 5 do
        assert(f(q,r,n) = length(ramsey_ohg(q,r,n)[1])),
  true)$

okltest_nver_ramsey_hg(f) := (
  for q : 0 thru 4 do
    for r : 0 thru 5 do
      for n : 0 thru 5 do
        assert(f(q,r,n) = length(ramsey_hg(q,r,n)[1])),
  true)$

okltest_nhyp_ramsey_ohg(f) := (
  for q : 0 thru if oklib_test_level=0 then 4 else 6 do
    for r : 0 thru if oklib_test_level=0 then 6 else 10 do
      for n : 0 thru if oklib_test_level=0 then 6 else 15 do
        assert(f(q,r,n) = length(ramsey_ohg(q,r,n)[2])),
  true)$

okltest_nhyp_ramsey_hg(f) := (
  for q : 0 thru if oklib_test_level=0 then 4 else 6 do
    for r : 0 thru if oklib_test_level=0 then 6 else 10 do
      for n : 0 thru if oklib_test_level=0 then 6 else 15 do 
        assert(f(q,r,n) = length(ramsey_hg(q,r,n)[2])),
  true)$


/*!
\endhtmlonly
*/
