/* Oliver Kullmann, 17.10.2009 (Swansea) */
/* Copyright 2009 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Hypergraphs/Lisp/Generators/tests/GreenTao.mac
  \brief Tests for Green-Tao hypergraph generators

Use by

oklib_load("OKlib/ComputerAlgebra/Hypergraphs/Lisp/Generators/tests/GreenTao.mac");

*/

/*!
\htmlonly
*/

oklib_include("OKlib/ComputerAlgebra/TestSystem/Lisp/Asserts.mac")$
oklib_include("OKlib/ComputerAlgebra/Hypergraphs/Lisp/Generators/Generators.mac")$
oklib_include("OKlib/ComputerAlgebra/Hypergraphs/Lisp/Generators/GreenTao.mac")$

kill(f)$


/* ***********************
   * Green-Tao's theorem *
   ***********************
*/

okltest_arithprog_primes_finish(f) := block(
  assert(okltest_arithprog_primes_finish_nm(buildq([f],lambda([k,p],f[k,p]))) = true),
  true)$

okltest_arithprog_primes_finish_nm(f) := block([prp,prk],
  prp : 6, prk : true,
  assert(f(3,5) = []),
  assert(f(3,7) = [[3,5,7]]),
  assert(f(3,11) = [[3,7,11]]),
  assert(f(3,13) = []),
  assert(f(3,17) = [[5,11,17]]),
  prk : false,
  assert(f(4,5) = []),
  assert(f(4,7) = []),
  assert(f(4,11) = []),
  assert(f(4,13) = []),
  assert(f(4,17) = []),
  assert(f(4,19) = []),
  assert(f(4,23) = [[5,11,17,23]]),
  prp : 30, prk : true,
  assert(f(5,7) = []),
  assert(f(5,23) = []),
  assert(f(5,29) = [[5,11,17,23,29]]),
  /* XXX */
  true)$

okltest_arithprog_primes(f) := (
  /* XXX */
  for k : 0 thru if oklib_test_level=0 then 4 else 6 do
    for n : 0 thru if oklib_test_level=0 then 10 else 40 do block(
     [A : setify(arithmetic_progressions(primes_first(n),k))],
      assert(setify(f(k,n,false)) = A),
      assert(setify(f(k,n,true)) = A)
  ),
  true)$

okltest_arithprog_primes_ohg(f) := (
  assert(f(0,0) = [[],[{}]]),
  assert(f(0,1) = [[2],[{}]]),
  assert(f(1,0) = [[],[]]),
  assert(f(1,1) = [[2],[{2}]]),
  assert(f(1,2) = [[2,3],[{2},{3}]]),
  assert(f(2,0) = [[],[]]),
  assert(f(2,1) = [[2],[]]),
  assert(f(2,2) = [[2,3],[{2,3}]]),
  assert(f(2,3) = [[2,3,5],[{2,3},{2,5},{3,5}]]),
  assert(f(3,4) = [[2,3,5,7],[{3,5,7}]]),
  assert(f(3,5) = [[2,3,5,7,11],[{3,5,7},{3,7,11}]]),
  assert(f(3,6) = [[2,3,5,7,11,13],[{3,5,7},{3,7,11}]]),
  true)$

okltest_nver_arithprog_primes_ohg(f) := (
  for k : 0 thru 4 do
    for n : 0 thru 5 do
      assert(f(k,n) = length(arithprog_primes_ohg(k,n)[1])),
  true)$

okltest_nver_arithprog_primes_hg(f) := (
  for k : 0 thru 4 do
    for n : 0 thru 5 do
      assert(f(k,n) = length(arithprog_primes_hg(k,n)[1])),
  true)$

okltest_nhyp_arithprog_primes_ohg(f) := (
  for k : 0 thru if oklib_test_level=0 then 4 else 6 do
    for n : 0 thru if oklib_test_level=0 then 6 else 40 do
      assert(f(k,n) = length(arithprog_primes_ohg(k,n)[2])),
  true)$

okltest_nhyp_arithprog_primes_hg(f) := (
  for k : 0 thru if oklib_test_level=0 then 4 else 6 do
    for n : 0 thru if oklib_test_level=0 then 6 else 40 do
      assert(f(k,n) = length(arithprog_primes_hg(k,n)[2])),
  true)$


/*!
\endhtmlonly
*/
