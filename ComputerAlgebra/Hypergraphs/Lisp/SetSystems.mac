/* Oliver Kullmann, 29.11.2007 (Swansea) */
/* Copyright 2007 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Hypergraphs/Lisp/SetSystems.mac
  \brief Maxima functions for handling of set systems

Use by

load("$OKPLATFORM/OKsystem/Transitional/ComputerAlgebra/Hypergraphs/Lisp/SetSystems.mac");

where $OKPLATFORM has to be replaced by the path to the OKplatform directory.
*/

/*!
\htmlonly
*/

/* is_empty(S) is true iff S is the empty set system */
is_empty(S) := (local(S), emptyp(S));

/* has_empty_element(S) is true iff set system S contains
the empty set */
has_empty_element(S) := (local(S), some(emptyp, S));

/* setdifference2(S,b) removes the elements of b from every element
of S */
setdifference2(S,b) := (local(S,b), map(lambda([s], setdifference(s,b)), S));

/* remove_with_element(S,a) is the subset of S with all sets not
containing element a */
remove_with_element(S,a) := (local(S,a), subset(S, lambda([s], not elementp(a,s))));
/* more generally, remove_non_disjoint(S,b) is the subset of S with all sets
disjoint to b */
remove_non_disjoint(S,b) := (local(S,b), subset(S, lambda([s], disjointp(s,b))));

/*!
\endhtmlonly
*/
