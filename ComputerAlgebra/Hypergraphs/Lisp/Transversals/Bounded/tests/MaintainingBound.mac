/* Oliver Kullmann, 20.6.2009 (Swansea) */
/* Copyright 2009, 2010 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Hypergraphs/Lisp/Transversals/Bounded/tests/MaintainingBound.mac
  \brief Tests for finding transversals "from below"

Use by

oklib_load("OKlib/ComputerAlgebra/Hypergraphs/Lisp/Transversals/Bounded/tests/MaintainingBound.mac");

*/

/*!
\htmlonly
*/

oklib_include("OKlib/ComputerAlgebra/TestSystem/Lisp/Asserts.mac")$
oklib_include("OKlib/ComputerAlgebra/Hypergraphs/Lisp/Generators/Generators.mac")$
oklib_include("OKlib/ComputerAlgebra/Hypergraphs/Lisp/SetSystems.mac")$

kill(f)$


/* *************************************
   * Finding size-bounded transversals *
   *************************************
*/

okltest_transversals_be(f) := (
  assert(f([],0) = [{}]),
  assert(f([],1) = [{}]),
  assert(f([{}],0) = []),
  assert(f([{}],1) = []),
  assert(f([{1}],0) = []),
  assert(f([{1}],1) = [{1}]),
  assert(f([{1}],2) = [{1}]),
  assert(f([{1,2}],0) = []),
  assert(f([{1,2}],1) = [{1},{2}]),
  assert(f([{1,2}],2) = [{1},{2}]),
  assert(f([{1,2},{2,3}],0) = []),
  assert(f([{1,2},{2,3}],1) = [{2}]),
  assert(elementp(f([{1,2},{2,3}],2), {[{1,2},{1,3},{2}], [{2},{1,3}]}) = true),
  assert(f([{1,2,3},{1,3},{1,2}],1) = [{1}]),
  assert(f([{1,2},{1,3},{2,3}],1) = []),
  true)$

okltest_minimum_transversals_lbbvs_hg(f) := (
  /* XXX */
  true)$

okltest_minimum_transversals_bvs_hg(f) := (
  assert(f([{},{}]) = [{}]),
  for n : 0 thru 5 do block([N : setn(n)],
    assert(f([N, singletons(N)]) = [N])),
  /* XXX */
  true)$


/* *********************************
   * Monotone hypergraph sequences *
   *********************************
*/

okltest_minimum_transversals_mongen(f) := block(
 [A3_ : lambda([n], arithprog_hg(3,n))],
  assert(map(length,f(10,A3_,[{}])) = [1,1,1,3,2,1,4,10,25,4,24]),
  true)$


/* *********************************
   * Stratification of hypergraphs *
   *********************************
*/


/*!
\endhtmlonly
*/
