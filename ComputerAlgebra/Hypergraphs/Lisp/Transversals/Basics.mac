/* Oliver Kullmann, 2.2.2008 (Swansea) */
/* Copyright 2008, 2009 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Hypergraphs/Lisp/Transversals/Basics.mac
  \brief Basic functions for hypergraph transversals

Use by

oklib_load("OKlib/ComputerAlgebra/Hypergraphs/Lisp/Transversals/Basics.mac");

*/

/*!
\htmlonly
*/

oklib_include("OKlib/ComputerAlgebra/Hypergraphs/Lisp/Basics.mac")$
oklib_include("OKlib/ComputerAlgebra/Hypergraphs/Lisp/SetSystems.mac")$
oklib_include("OKlib/ComputerAlgebra/DataStructures/Lisp/Lists.mac")$
oklib_include("OKlib/ComputerAlgebra/Satisfiability/Lisp/ClauseSets/Statistics.mac")$


/* Checking whether T is a transversal for set system S (S may be also
   a list of sets).
   Note that T doesn't need to be minimal.
*/
transversal_p(T,S) := every_s(lambda([H], not disjointp(H,T)), S)$
/* Checking for an exact transversal: */
etransversal_p(T,S) := every_s(lambda([H], is(length(intersection(H,T))=1)), S)$


/* ************************
   * Greedy approximation *
   ************************
*/

/* Finding a "small" transversal by the obvious greedy approach;
   outputs false iff there is no transversal.
*/
greedy_transversal_ohg(G) :=
 if empty_element_p(G[2]) then false else greedy_transversal_(G[2])$
/* For a list S of sets not containing the empty set: */
greedy_transversal_(S) := if emptyp(S) then {} else
 block([x : max_literal_degree_l_cl(S)[2]],
  adjoin(x, greedy_transversal_(remove_with_element_l(S,x))))$


/*!
\endhtmlonly
*/
