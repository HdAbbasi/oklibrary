/* Oliver Kullmann, 30.5.2009 (Swansea) */
/* Copyright 2009 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Hypergraphs/Lisp/Statistics.mac
  \brief Statistics for hypergraphs

Use by

oklib_load("OKlib/ComputerAlgebra/Hypergraphs/Lisp/Statistics.mac");

*/

/*!
\htmlonly
*/

/* ******************
   * Basic measures *
   ******************
*/

/* Counting the number of vertices: */

nver_hg(G) := length(G[1])$
nver_ohg(G) := length(G[1])$
nver_ghg(G) := length(G[1])$
nver_oghg(G) := length(G[1])$

/* Counting the number of hyperedges: */

nhyp_hg(G) := length(G[2])$
nhyp_ohg(G) := length(G[2])$
nhyp_ghg(G) := length(G[2])$
nhyp_oghg(G) := length(G[2])$


/* ******************
   * Vertex degrees *
   ******************
*/

/* The vertex-degrees of a hypergraph, as hash-map. */
vertex_degrees_hg(G) := block([h : sm2hm({})],
 for H in G[2] do
  for v in H do enter_new_occurrence(h,v),
 for v in G[1] do
   if ev_hm(h,v)=false then set_hm(h,v,0),
 return(h))$
vertex_degrees_ohg(G) := vertex_degrees_hg(G)$
/* The same list, but sorted according to the vertex degrees: */
sorted_vertex_degrees_hg(G) := sort(hm2osm(vertex_degrees_hg(G)), 
 lambda([p1,p2],is(second(p1) > second(p2))))$
/* For ordered hypergraphs the sorting is stable w.r.t. the given
   order of vertices:
*/
sorted_vertex_degrees_ohg(G) := block(
 [h : osm2hm(map("[",G[1],create_list(i,i,1,length(G[1]))))],
  sort(hm2osm(vertex_degrees_ohg(G)),
   lambda([p1,p2],is(second(p1) > second(p2) or (second(p1) = second(p2) and ev_hm(h,first(p1)) < ev_hm(h,first(p2)))))))$


/*!
\endhtmlonly
*/
