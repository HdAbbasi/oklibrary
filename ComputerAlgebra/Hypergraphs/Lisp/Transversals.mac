/* Oliver Kullmann, 2.2.2008 (Swansea) */
/* Copyright 2008, 2009 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file ComputerAlgebra/Hypergraphs/Lisp/Transversals.mac
  \brief Functions for hypergraph transversals

Use by

oklib_load("OKlib/ComputerAlgebra/Hypergraphs/Lisp/Transversals.mac");

*/

/*!
\htmlonly
*/

oklib_include("OKlib/ComputerAlgebra/Hypergraphs/Lisp/Basics.mac")$
oklib_include("OKlib/ComputerAlgebra/Hypergraphs/Lisp/SetSystems.mac")$

/* The tranversal hypergraph via the independence hypergraph: */
/* RENAME: transversal_hg_ind */
transversal_hyp_ind(G, Ind) := ecomp_hyp(Ind(G))$
transversal_hg_ind(G, Ind) := transversal_hyp_ind(G, Ind)$

/* The transversal hypergraph of a hypergraph G, via recursive splitting: */
/* RENAME: transversal_hg_rs */
transversal_hyp_rs(G) := [G[1],transversal_ses_rs(min_elements(G[2]))]$
transversal_hg_rs(G) := transversal_hyp_rs(G)$
/* The transversal hypergraph of a set-system S: */
transversal_ses_rs(S) := block([M : listify(S),l, h,S1,S2],
 l : length(M),
 if l = 0 then return({{}})
 elseif l = 1 then return(singletons(M[1]))
 elseif l = 2 then return(block([I : intersection(M[1],M[2])],
  union(singletons(I), 
        upairs(setdifference(M[1],I), setdifference(M[2],I))))),
 h : floor(l/2),
 S1 : rest(M,-h),
 S2 : rest(M,l-h),
 return(min_elements(cunion(transversal_ses_rs(S1),transversal_ses_rs(S2)))))$

/*!
\endhtmlonly
*/
