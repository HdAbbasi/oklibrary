# Oliver Kullmann, 6.3.2002 (Swansea)

#ToDo: Updating the following comments

# Generic makefile, to be used in a general environment for C++
# compilation

# Usage:

# make all
# = make unoptimsed + make optimised

# make unoptimised
# creates all dependencies files, object files, and program files;

# make optimised
# creates the same (names of object and program files modified), but using optimisation options;

# make prebuild
# creates all directories and header files

# make check
# = make test + make testop

# make test
# recompiles the test program if necessary, and runs the test if necessary.

# make testop
# recompiles the test program with optimisation if necessary, and runs the test if necessary.

# make clean
# = make cleanobj cleandep
# make cleanall
# = make clean cleanhead cleanprograms

SHELL = /bin/sh
.SUFFIXES :

define last-element
$(word $(words $1),$1)
endef

ifndef srcdir

this-makefile := $(call last-element,$(MAKEFILE_LIST))
other-makefiles := $(filter-out $(this-makefile),$(MAKEFILE_LIST))
parent-makefile := $(call last-element,$(other-makefiles))
srcdir := $(shell cd $(dir $(parent-makefile)); pwd)

endif

ifndef OKBuildsystem
  ifdef OKBUILDSYSTEM
    OKBuildsystem := $(OKBUILDSYSTEM)
  else
    $(error Either OKBuildsystem or OKBUILDSYSTEM must be defined!)
  endif
endif

include $(OKBuildsystem)/makefile_standardgoals

include $(srcdir)/makefile.definitions.mak

# Definitions required from makefile.definitions:
# General_options
# Optimisation_options
# test_program
# programs
# source_libraries
# link_libraries
# Root

# ToDo: Only Root should stay, while the rest is handled by
# THIS makefile, inspecting its directory and all subdirectories,
# and collecting the required information individually from
# all .hpp and .cpp files by means of annotating files.

source_libraries += -I$(srcdir)

prefix := $(shell cd $(srcdir); cd $(Root); pwd)

exec_prefix := $(prefix)
bindir := $(exec_prefix)/bin
libdir := $(exec_prefix)/lib

includedir := $(prefix)/include

aux_dir := $(prefix)/aux

Directories := $(bindir) $(libdir) $(includedir) $(aux_dir)

# -----------------------------------------------------------------------------------

test_program := $(addprefix $(bindir)/, $(test_program))

programs := $(addprefix $(bindir)/, $(programs))
programs += $(test_program)

# ---------------------------------------------------

name_addition := $(strip $(Optimisation_options))
All_options := $(General_options) $(Optimisation_options)

programs_optimised := $(programs:=$(name_addition))

header_files := $(wildcard $(srcdir)/*.hpp)
header_files := $(notdir $(header_files))
header_files :=  $(addprefix $(includedir)/, $(header_files))

compilation_units := $(wildcard $(srcdir)/*.cpp)
compilation_units := $(notdir $(compilation_units))

dependency_files := $(compilation_units:.cpp=.d)
dependency_files := $(addprefix $(aux_dir)/, $(dependency_files))

object_files := $(compilation_units:.cpp=.o)
object_files := $(addprefix $(libdir)/, $(object_files))
object_files_optimised := $(compilation_units:.cpp=$(name_addition).o)
object_files_optimised := $(addprefix $(libdir)/, $(object_files_optimised))

# ----------------------------------------------------------------

all : unoptimised optimised

prebuild : $(Directories) $(header_files) 

unoptimised :$(programs)

optimised : $(programs_optimised)

check : test testop

test : $(test_program)
	$(test_program)
	touch test
testop : $(test_program)$(name_addition)
	$(test_program)$(name_addition)
	touch testop

force :

# ---------------------------------------------------------------

ifeq ($(firstword $(filter $(special_goals) $(cleaning_goals) $(forced_goals), $(MAKECMDGOALS))),)
include $(dependency_files)
endif

$(Directories) : % :
	mkdir $@

$(header_files) : $(includedir)/%.hpp : $(srcdir)/%.hpp
	cp $< $@

$(dependency_files) : $(aux_dir)/%.d : $(srcdir)/%.cpp
	$(CXX) -MM -MF $@ -MT $(libdir)/$*.o -MT $(libdir)/$*$(name_addition).o -MT $@ $(source_libraries) $<

$(object_files_optimised) : $(libdir)/%$(name_addition).o : $(srcdir)/%.cpp
	$(CXX) -c -o $@ $(Optimisation_options) $(source_libraries) $<
$(object_files) : $(libdir)/%.o : $(srcdir)/%.cpp
	$(CXX) -c -o $@ $(General_options) $(source_libraries) $<

$(programs) : $(bindir)/% : $(libdir)/%.o
	$(CXX) -o $@ $(General_options) $< $(link_libraries)
$(programs_optimised) : $(bindir)/% : $(libdir)/%.o
	$(CXX) -o $@ $(Optimisation_options) $< $(link_libraries)


# --------------------------------

cleanobj :
	- rm $(object_files) $(object_files_optimised)

cleandep :
	- rm $(dependency_files)

clean : cleanobj cleandep
	- rm test testop

cleanhead :
	- rm $(header_files)

cleanprograms :
	- rm $(programs) $(programs_optimised)

cleanall : clean cleanhead cleanprograms

