#!/bin/bash
# Oliver Kullmann, 25.8.2007 (Swansea)

if [[ $# == 0 ]]; then
  echo "oklib: no arguments given."
  exit 0
fi

version=0.1.0.2

if [[ $1 == "--version" ]]; then
  echo "oklib version ${version}"
  exit 0
fi


current_dir=$(pwd)

top_dir=${current_dir}
while [[ ! (-d ${top_dir}/.oklib) ]]; do
  if [[ ${top_dir} == "/" ]]; then
    echo "ERROR[oklib]: Not in an OKlibrary-directory (i.e., no directory containing a directory \".oklib\" on the path)."
    exit 1
  fi
  top_dir=$(dirname ${top_dir})
done
anchor_dir=${top_dir}/.oklib

buildsystem_dir=${anchor_dir}/Configuration/..


if [[ $1 == "--setup" ]]; then
  shift
  command="make --makefile=${buildsystem_dir}/SetUp.mak OKplatform=${top_dir} $*"
  echo ${command}
  ${command}
  exit
fi

if [[ $1 == "--prebuild" ]]; then
  command="make --makefile=${buildsystem_dir}/Makefile OKplatform=${top_dir} prebuild"
  echo ${command}
  ${command}
  exit
fi

if [[ $1 == "--create-package" ]]; then
  shift
  command="make --makefile=${buildsystem_dir}/ReleaseProcess/Makefile OKplatform=${top_dir} $*"
  echo ${command}
  ${command}
  exit
fi


oklib_building_log=${anchor_dir}/log/OKlibBuilding
external_sources_log=${anchor_dir}/log/ExternalSources

defining_dir=${current_dir}
until [[ ${defining_dir} == ${top_dir} ]]; do
  defining_base=$(basename ${defining_dir})

  if [[ ${defining_base} == ExternalSources ]]; then
    command="make --makefile=${buildsystem_dir}/ExternalSources/Makefile --directory=${top_dir}/ExternalSources OKplatform=${top_dir} $@"
    echo ${command}
    ${command} 2> ${external_sources_log}
    if [[ -s ${external_sources_log} ]]; then
      cat ${external_sources_log}
      exit 1
    fi
    exit 0
  elif [[ -f ${defining_dir}/definitions.mak ]]; then
    command="make --makefile=${buildsystem_dir}/OKlibBuilding/Makefile --directory=${current_dir} srcdir=${current_dir} OKplatform=${top_dir} $@"
    echo ${command}
    ${command} 2>&1 | tee ${oklib_building_log}
    exit
  elif [[ ${defining_base} == Transitional ]]; then
    command="make OKplatform=${top_dir} $@"
    echo ${command}
    ${command} 2>&1 | tee ${oklib_building_log}
    exit
  elif [[ ${defining_base} == OKsystem ]]; then
    command="make OKplatform=${top_dir} $@"
    echo ${command}
    ${command} 2>&1 | tee ${oklib_building_log}
    exit
  else
    defining_dir=$(dirname ${defining_dir})
    continue
  fi

done

echo "oklib: no actions."

