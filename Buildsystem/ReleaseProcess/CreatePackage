#!/bin/bash
# Oliver Kullmann, 14.9.2007 (Swansea)
# Copyright 2007 Oliver Kullmann
# This file is part of the OKlibrary. OKlibrary is free software; you can redistribute 
# it and/or modify it under the terms of the GNU General Public License as published by
# the Free Software Foundation and included in this library; either version 3 of the 
# License, or any later version.

set -o errexit -o nounset -o xtrace

if [ ! -d ${packages_dir} ]; then mkdir ${packages_dir}; fi

if [ -s ${release_history_template} ]; then
  counter=$(printf "%.5d" $(($(tail -1 ${release_history_template} | cut --fields=1 --delimiter=" " | sed 's/^0*//') + 1)))
else
  counter=00001
fi

package_name="OKlibrary-${transitional_version}_${counter}"
package_directory=${packages_dir}/${package_name}
package_OKplatform=${package_directory}/OKplatform

if [ -e ${package_directory} ]; then
  echo "ERROR[CreatePackage]: There is already ${package_directory} !"
  exit 1
fi;
mkdir ${package_directory}
cd ${package_directory}

mkdir -p OKplatform/OKsystem
mkdir OKplatform/system_directories
mkdir OKplatform/ExternalSources

cd OKplatform/OKsystem

if [ ${git_upstream:+1} ]; then
  git_origin="--option ${git_upstream}"
else
  git_origin=""
fi
git clone --no-hardlinks ${git_origin} ${git_repository}

cp -r ${documents_dir} .

cd .. # in OKplatform now

env -i PATH=${PATH} make -f OKsystem/Transitional/Buildsystem/SetUp.mak OKplatform=${package_OKplatform} oklibrary_initialisation
ln -s OKsystem/Transitional/Buildsystem/MasterScript/oklib
env -i PATH=${PATH} ./oklib --prebuild make_directories
cp ${readme_file} .

min_tar_package_name=${package_name}-minimal.tar.bz2
echo "Creating minimal package ..."
cd ../.. # package-directory now
tar -cjf ${min_tar_package_name} ${package_name}

cur_date=$(echo ${current_date} | tr --delete [:space:])
cur_SHA=$(cd ${Transitional}; git log HEAD | head -1 | cut --fields=2 --delimiter=" ")
record_begin="${counter} ${transitional_version} ${cur_SHA} ${cur_date}"

printf "%s %s %s %s %s %s" ${record_begin} $(md5sum ${min_tar_package_name}) >> ${release_history_template}

cd ${package_directory}/OKplatform
env -i PATH=${PATH} ./oklib --prebuild create_links

(cd OKsystem; env -i PATH=${PATH} ../oklib rel_path_tool_origin="${rel_path_tool_origin}" html)

tar_package_name=${package_name}.tar.bz2
echo "Creating standard package ..."
env -i PATH=${PATH} ./oklib --prebuild clean_links
cd ../.. # in package-directory now
tar -cjf ${tar_package_name} ${package_name}

printf " %s %s" $(md5sum ${tar_package_name}) >> ${release_history_template}

cd ${package_directory}/OKplatform
env -i PATH=${PATH} ./oklib --prebuild create_links

if [ "${ExternalSources}" != "" ]; then
  echo "Copying ExternalSources ..."
  cp -r ${ExternalSources}/sources ExternalSources
  full_package_name=${package_name}-full
  tar_full_package_name=${full_package_name}.tar.bz2
  echo "Creating full package ..."
  env -i PATH=${PATH} ./oklib --prebuild clean_links
  cd ../.. # in package_directory now
  tar -cjf ${tar_full_package_name} ${package_name}
  printf " %s %s" $(md5sum ${tar_full_package_name}) >> ${release_history_template}
fi

printf "\n" >> ${release_history_template}

rm -rf ${package_directory}

