# Matthew Gwynne, 18.3.2011 (Swansea),

Authors:
 - Matthew Gwynne, csmg@swansea.ac.uk
 - Oliver Kullmann, O.Kullmann@Swansea.ac.uk
 Swansea University, Computer Science, United Kingdom


I AES minimum components benchmarks

We provide translations of CNF minimisation problems for boolean functions.
They come from components of the Advanced Encryption Standard (AES),
and "small-scale" variants.


II Directory content:

  - Benchmarks/sbox_4.pb: smallest CNF for the small-scale AES Sbox
  - Benchmarks/sbox_8.pb: smallest CNF for the AES Sbox
  - Benchmarks/mul_8_x.pb: smallest CNFs for the multiplication by x in the
    AES byte-field (x in {3,9,11,13,14}).

  - MD5_Benchmarks: md5 hash values of benchmarks
  - this README file.


III Background

We investigate translations of AES into SAT. We consider the "key discovery
problem". The "minimum box translation" was used for benchmarks for
the main track of SAT2011. This translation uses CNF representations of
minimum size.

Finding minimum CNF representations for such "boxes" is the concern of
the benchmarks here.

Using such "minimum representations" is a natural starting point. We
investigate other (better) representations in the OKlibrary (see IX).
What constitutes a good translation is the topic of:

@TechReport{GwynneKullmann2011AES,
  author =       {Matthew Gwynne and Oliver Kullmann},
  title =        {Attacking {AES} via {SAT}: Constraints and boolean functions},
  institution =  {arXiv},
  year =         2011,
  number =       {arXiv:??? [cs.DM]},
  month =        {April},
  annote =       {In preparation.}
}


IV Related benchmarks

Additional to this benchmark set, we separately provide:

- Advanced Encryption Standard I benchmarks          (SAT2011 - main track)
    Key discovery problem instances for AES and small-scale variants of AES.
- "The AES challenge" benchmark                      (SAT2011 - main track)
    A full AES instance with an unknown key.
- AES minimum components benchmarks (SAT2011 - MaxSAT)
    Same problems as in this benchmark, but translating into weighted MaxSAT
    problems.


V Instances

  - with size in bytes
  - current smallest sum of weights of falsified clauses.

In Benchmarks:

24142     sbox_4.pb    22 (known optimum)
662020638 sbox_8.pb    294
23669676  mul_8_3.pb   36
35237716  mul_8_9.pb   42
54849639  mul_8_11.pb  66
54473031  mul_8_13.pb  60
52090303  mul_8_14.pb  56

All benchmarks are linear optimisation problems. 


VI The AES boxes

AES consists of various components. We consider these components as
boolean functions. The task is to find minimum CNF representations of them.
These components are all x-bit permutations. They are represented by boolean
functions in 2x variables. We consider the following 7 components:

- 4-bit "small-scale AES Sbox"
- 8-bit "AES Sbox"

8-bit "byte-multiplications" by

- 03
- 09
- 11
- 13
- 14.

For full specification see \cite{GwynneKullmann2011AES}.


VII The translation

The following translation is the natural approach. It is based on minimising
hypergraph transversals.

Consider a 2x-bit boolean function f. Let F be the canonical CNF of f. I.e.,
F contains all maximal clauses following from f.

Recall: A "prime implicate" is a *minimal* clause following from f.
Let m be the number of prime implicates of f.

We construct the positive CNF shg(f) (the "subsumption hypergraph").
We have a variable for every prime implicate. That is, we have m variables.
The clauses D correspond to the clauses C of F. D contains the variables for
prime implicate contained in C.

A satisfying assignment phi for shg(f) corresponds to a CNF F'. F' contains the
prime implicates for variables set to 1. Every such F' is equivalent to F.
F' has minimum size iff the number of 1's in phi is minimum.
Accordingly, we construct a pseudo-boolean instance.

The variables are those of shg(f). We have one constraint encoding each clause
in shg(f). That is, encoding the sum of the literals is >=1. The objective 
function is then the sum of the variables.


VIII On the choice of instances

The Advanced Encryption Standard is widely used and well studied. Analysis of 
these core functions yields new translations of AES. We use these translations 
to attack AES via SAT.

The 8-bit components come directly from the AES. They represent hard 
benchmarks. The 4-bit component offers a feasible benchmark.


IX The OKlibrary http://www.ok-sat-library.org

All developments took place within the OKlibrary. It is an open-source research
platform around the SAT problem.

List of relevant directories in OKplatform/OKsystem/OKlib:

 - Experimentation/Benchmarks: all our benchmark packages
 - Experimentation/Investigations/Cryptography/AdvancedEncryptionStandard: all
   current investigations into AES
 - ComputerAlgebra/Cryptology/Lisp/CryptoSystems/Rijndael/: an AES 
   implementation using the Maxima computer algebra system
 - ComputerAlgebra/Cryptology/Lisp/Cryptanalysis/Rijndael/: the AES-to-SAT
   translation, using the Maxima computer algebra system.

The OKlibrary-internal documentation for the SAT2011-benchmarks is provided at

http://cs.swan.ac.uk/~csoliver/ok-sat-library/internet_html/doc/doxygen_html/d3/d83/SAT2011_8hpp.html

