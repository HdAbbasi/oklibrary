# Matthew Gwynne 18.3.2011 (Swansea)

I Directory content:

  - Benchmarks/sbox_4.pb corresponds to finding a smallest CNF for the 
    8-bit boolean function representing the small scale AES Sbox.
  - Benchmarks/sbox_8.pb corresponds to finding a smallest CNF for the
    16-bit boolean function representing the AES Sbox.
  - Benchmarks/mul_8_x.pb corresponds to finding smallest CNFs for the
    16-bit boolean functions representing multiplication by x in the AES
    byte field, for x in {3,9,11,13,14}.

  - MD5_Benchmarks contains the md5 hash values of benchmarks.
  - this README file.


II Advanced Encryption Standard component benchmarks

We provide translations of CNF minimisation problems for boolean functions,
given by components of the Advanced Encryption Standard (AES) and small scale
variants. Optimal solutions to these benchmarks correspond to minimum size 
CNF representations for the AES Sbox and field multiplications.


III Background

In a forthcoming technical report, we investigate different translations of
AES into SAT. We provide instances of the AES key discovery problem, using
one such translation, which we call "the minimum box translation", to generate
benchmarks for the main track of SAT2011. This translation uses CNF 
representations of minimum size of the components of the AES, with the aim of
producing a translation with as few clauses as possible. Finding such minimum 
CNF representations for these boxes is the problem presented by the set of 
benchmarks discussed here.

Using such minimum representations is a natural starting point. We investigate
other representations in the OKlibrary (see VII) and consider what
constitutes a good translation in a forthcoming technical report on attacking
the AES cipher using SAT:

@TechReport{GwynneKullmann2011AES,
  author =       {Matthew Gwynne and Oliver Kullmann},
  title =        {Attacking {AES} via {SAT}: Constraints and boolean functions},
  institution =  {arXiv},
  year =         2011,
  number =       {arXiv:??? [cs.DM]},
  month =        {April},
  annote =       {In preparation.}
}

Additional to this benchmark set, we separately provide:

- Advanced Encryption Standard I benchmarks          (SAT2011 - main track)
    Key discovery problem instances for AES and small scale variants of AES.
- "The AES challenge" benchmark                      (SAT2011 - main track)
    A full AES instance with an unknown key: a challenge to the SAT community.
- Advanced Encryption Standard component benchmarks  (SAT2011 - MaxSAT)
    Minimisation problems for the AES component functions, as provided in 
    this benchmark, but using a translation into weighted MaxSAT.


IV Instances

  - with size in bytes
  - "e" for easy, "h" for hard, "vh" for very hard.

In Benchmarks:

24142     sbox_4.pb    (e)
662020638 sbox_8.pb    (vh)
23669676  mul_8_3.pb   (h)
35237716  mul_8_9.pb   (h)
54849639  mul_8_11.pb  (h)
54473031  mul_8_13.pb  (h)
52090303  mul_8_14.pb  (h)

All benchmarks are linear optimisation problems. The only known optimum 
solution is for sbox_4.pb, which is 22.


V The Advanced Encryption Standard components

We provide translations of the problem of finding a CNF of minimum size
representing the:

- 4-bit small scale AES Sbox.
- 8-bit AES Sbox.
- 8-bit AES multiplication by 03.
- 8-bit AES multiplication by 09.
- 8-bit AES multiplication by 11.
- 8-bit AES multiplication by 13.
- 8-bit AES multiplication by 14.

Consider the 8-bit Sbox boolean function f, and the:

  - Clauses D in the full CNF F of f.
  - Prime implicates C in PI(f) of f.

We then construct the CNF SHG(f) with:

  - A variable for every prime implicate C.
  - A clause for every D specifying some C subsumes it.

A satisfying assignment for SHG(f) corresponds to a CNF F'. F' contains prime
implicates for those variables set to true. 

Consider a satisfying assignment with the minimum number of ones. This 
assignment corresponds to a minimum size CNF F' subset PI(f). That is, F' is a
minimum sized CNF representation for f.

We construct a pseudo-boolean instance with:

  - The variable set V(F).
  - Linear pseudo-boolean constraints translating the clauses of SHG(F).
  - The sum of the V(F) as the objective function.

Observe that an optimum solution must:

  - Satisfy all clauses in SHG(F).
  - Minimise the number of variables set to true.

Therefore, such an optimum solution corresponds to minimum sized CNF.

For full specifications of the AES Sbox and field operations, the AES cipher
itself and small scale variants, please refer to the following:

@Book{DaemenRijmen2001Rijndael,
  author =	 {Joan Daemen and Vincent Rijmen},
  title = 	 {The Design of Rijndael},
  publisher = 	 {Springer},
  year = 	 2001,
  address =	 {Berlin},
  note =	 {ISBN 3-540-42580-2; QA76.9.A25 D32 2001}
}

@Book{CidMurphyRobshaw2006AlgebraicAES,
  author =       {Carlos Cid and Sean Murphy and Matthew Robshaw},
  title =        {Algebraic Aspects of the Advanced Encryption Standard},
  publisher =    {Springer},
  year =         2006,
  note =         {ISBN-10 0-387-24363-1}
}


VI On the choice of instances

The Advanced Encryption Standard is widely used and well studied. Analysis of 
these core functions will yield new translations of AES. These translations 
should offer insights into the cryptographic properties of AES.

The 8-bit components come directly from the AES. They represent hard 
optimisation benchmarks of practical importance. The 4-bit component offers a
feasible, novel and non-trivial benchmark.


VII The OKlibrary http://www.ok-sat-library.org

All developments took place within the OKlibrary, an open-source research
platform around the SAT problem. Also the translation framework used to
generate the translations of the AES cipher is provided there.

List of relevant directories in OKplatform/OKsystem/OKlib (where OKplatform
is the directory of the unpacked OKlibrary-package):

 - Experimentation/Benchmarks: all our benchmark packages (typically without
   the instances)
 - Experimentation/Investigations/Cryptography/AdvancedEncryptionStandard: all
   current investigations into AES
 - ComputerAlgebra/Cryptology/Lisp/CryptoSystems/Rijndael/: an AES 
   implementation in the Maxima computer algebra system
 - ComputerAlgebra/Cryptology/Lisp/Cryptanalysis/Rijndael/: the AES 
   translation in the Maxima computer algebra system

The OKlibrary-internal documentation for the SAT2011-benchmarks is provided at

http://cs.swan.ac.uk/~csoliver/ok-sat-library/internet_html/doc/doxygen_html/d3/d83/SAT2011_8hpp.html

