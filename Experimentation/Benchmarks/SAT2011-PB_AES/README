# Matthew Gwynne 18.3.2011 (Swansea)

I Directory content:

  - sbox_8.pb is the pseudo-boolean translation of the problem of finding
    a minimum CNF for the 8-bit boolean function for the small scale AES Sbox.
  - sbox_16.pb is the pseudo-boolean translation of the problem of finding
    a minimum CNF for the 16-bit boolean function for the AES Sbox.
  - mul_16_E.pb are the pseudo-boolean translations of the problem of finding
    a minimum CNF for the 16-bit boolean function for the multiplication by E
    in the AES byte field.
  - *_primes.cnf are the prime implicates for the corresponding boolean
    functions.
  - MD5_components contains the md5 hash values of benchmarks.
  - MD5_primes contains the md5 hash values of prime implicate files.
  - this README file.


II Advanced Encryption Standard component benchmarks

We provide translations of CNF minimisation problems for boolean functions
given by components of the Advanced Encryption Standard (AES) and small scale
variants. Optimal solutions to these benchmarks correspond to minimum size 
CNF representations for the AES Sbox and field multiplications.


III Background

In a forthcoming technical report, we investigate different translations of
the AES into SAT. We provide instances of the AES key discovery problem, using
one such translation, which we call "the minimum box translation", to generate
benchmarks for the main track of SAT2011. This translation used CNF 
representations of minimum size of the components of the AES, with the aim of
producing a translation with as few clauses as possible. Finding such minimum 
CNF representations for these boxes is the problem presented by the set of 
benchmarks discussed here.

Using such minimum representations is a natural starting point. We investigate
better representations in the OKlibrary (see VII) and consider what constitutes 
a good translation in a forthcoming technical report on attacking the AES
cipher using SAT

@TechReport{GwynneKullmann2008AES,
  author =       {Matthew Gwynne and Oliver Kullmann},
  title =        {Attacking {AES} via {SAT}},
  institution =  {arXiv},
  year =         2011,
  number =       {arXiv:??? [cs.DM]},
  month =        {April},
  annote =       {In preparation.}
}

Additional to this benchmark set, we separately provide:

- Advanced Encryption Standard I benchmarks          (SAT2011 - main track)
    Key discovery problem instances for AES and small scale variants of AES.
- "The AES challenge" benchmark                      (SAT2011 - main track)
    A full AES instance with an unknown key: an open challenge to the
    SAT community.
- Advanced Encryption Standard component benchmarks  (SAT2011 - MaxSAT)
    Minimisation problems for the AES component functions, as provided in 
    this benchmark, but using a translation into weighted MaxSAT.


IV Instances

  - with size in bytes
  - "e" for easy, "h" for hard, "vh" for very hard.


24142     sbox_8.pb    (e)
662020638 sbox_16.pb    (vh)
23669676  mul_16_3.pb   (h)
35237716  mul_16_9.pb   (h)
54849639  mul_16_11.pb  (h)
54473031  mul_16_13.pb  (h)
52090303  mul_16_14.pb  (h)

The only known optimum solution is for sbox_8.pb which has an optimum
solution of size 22.


V The Advanced Encryption Standard components

We provide translations of the problem of finding a CNF of minimum size
representing the:

- 8-bit small scale AES Sbox.
- 16-bit AES Sbox.
- 16-bit AES multiplication by 03.
- 16-bit AES multiplication by 09.
- 16-bit AES multiplication by 11.
- 16-bit AES multiplication by 13.
- 16-bit AES multiplication by 14.

The translations are constructed by generating the prime implicates for each
boolean function and then producing the subsumption hypergraph G for these
prime implicates and the full CNF, where:

 - Each vertex in the hypergraph represents a prime implicate.
 - There is a hyperedge for each clause C in the full CNF which contains all 
   the vertices corresponding to prime clauses which subsume C.

A CNF clause-set F given by taking the subsumption hypergraph directly as a
clause-set has the transversals of G as it's satisfying assignments, and so
the problem of finding a minimum CNF, which corresponds to finding the minimum
transversals of the constructed hypergraph is the problem of finding an 
assignment to the variables of F which minimises the number of variables
set to 1. We translate the problem of finding such an assignment directly
into a pseudo-boolean problem, taking each clause as the corresponding
pseudo-boolean constraint, and specifying that the problem is to
minimise the sum of the variables (i.e. the number of 1s in the assignment).

In each problem, the variable with index xi corresponds to the i-th prime
implicate in the associated CNF file containing the prime implicates for that
boolean function. For example, variable x2 in sbox_4.pb corresponds to
the second clause in sbox_4_primes.cnf, {-1,3,-2,-5}.

For full specifications of the AES Sbox and field operations, the AES cipher
itself and small scale variants, please refer to the following:

@Book{DaemenRijmen2001Rijndael,
  author =	 {Joan Daemen and Vincent Rijmen},
  title = 	 {The Design of Rijndael},
  publisher = 	 {Springer},
  year = 	 2001,
  address =	 {Berlin},
  note =	 {ISBN 3-540-42580-2; QA76.9.A25 D32 2001}
}

@Book{CidMurphyRobshaw2006AlgebraicAES,
  author =       {Carlos Cid and Sean Murphy and Matthew Robshaw},
  title =        {Algebraic Aspects of the Advanced Encryption Standard},
  publisher =    {Springer},
  year =         2006,
  note =         {ISBN-10 0-387-24363-1}
}


VI On the choice of instances

The Advanced Encryption Standard is a widely used encryption algorithm and
the performance of SAT solvers on translations of the AES has a bearing the 
cryptographic security of the cipher. Analysis of the representations of these
core functions within the AES should yield insights into the cryptographic
security of the cipher, as well as providing smaller CNF representations
of the cipher itself.

The 16-bit boolean functions problems come directly from the standard AES
cipher and present hard optimisation benchmarks, while we include the 8-bit
small scale AES Sbox as an example of a benchmark which is feasible for
modern pseudo-boolean solvers.


VII The OKlibrary http://www.ok-sat-library.org

All developments took place within the OKlibrary, an open-source research
platform around the SAT problem. Also the translation framework used to
generate the translations of the AES cipher is provided there.

List of relevant directories in OKplatform/OKsystem/OKlib (where OKplatform
is the directory of the unpacked OKlibrary-package):

 - Experimentation/Benchmarks: all our benchmark packages (typically without
   the instances)
 - Experimentation/Investigations/Cryptography/AdvancedEncryptionStandard: all
   current investigations into AES
 - ComputerAlgebra/Cryptology/Lisp/CryptoSystems/Rijndael/: an AES 
   implementation in the Maxima computer algebra system
 - ComputerAlgebra/Cryptology/Lisp/Cryptanalysis/Rijndael/: the AES 
   translation in the Maxima computer algebra system

The OKlibrary-internal documentation for the SAT2011-benchmarks is provided at

http://cs.swan.ac.uk/~csoliver/ok-sat-library/internet_html/doc/doxygen_html/d3/d83/SAT2011_8hpp.html

