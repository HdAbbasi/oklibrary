# Matthew Gwynne 18.3.2011 (Swansea)

I Directory content:

XXX OBVIOUSLY THE BENCHMARKS MUST GO TO SUBDIRECTORIES XXX

  - sbox_8.wcnf corresponds to finding a smallest CNF for the 8-bit boolean
    function representing the small scale AES Sbox.
  - sbox_16.wcnf corresponds to finding a smallest CNF for the 16-bit boolean
    function representing the AES Sbox.
  - mul_16_x.wcnf corresponds to finding smallest CNFs for the 16-bit boolean
    functions representing multiplication by x in the AES byte field, for x in
    {3,9,11,13,14}.

  - MD5_components contains the md5 hash values of benchmarks.
  - MD5_primes contains the md5 hash values of prime implicate files.
  - this README file.


II Advanced Encryption Standard component benchmarks

We provide translations of CNF minimisation problems for boolean functions,
given by components of the Advanced Encryption Standard (AES) and small scale
variants. Optimal solutions to these benchmarks correspond to minimum size 
CNF representations for the AES Sbox and field multiplications.


III Background

In a forthcoming technical report, we investigate different translations of
AES into SAT. We provide instances of the AES key discovery problem, using
one such translation, which we call "the minimum box translation", to generate
benchmarks for the main track of SAT2011. This translation uses CNF 
representations of minimum size of the components of the AES, with the aim of
producing a translation with as few clauses as possible. Finding such minimum 
CNF representations for these boxes is the problem presented by the set of 
benchmarks discussed here.

Using such minimum representations is a natural starting point. We investigate
other representations in the OKlibrary (see VII), and consider what
constitutes a good translation in a forthcoming technical report on attacking
the AES cipher using SAT:

@TechReport{GwynneKullmann2011AES,
  author =       {Matthew Gwynne and Oliver Kullmann},
  title =        {Attacking {AES} via {SAT}: Constraints and boolean functions},
  institution =  {arXiv},
  year =         2011,
  number =       {arXiv:??? [cs.DM]},
  month =        {April},
  annote =       {In preparation.}
}

Additional to this benchmark set, we separately provide:

- Advanced Encryption Standard I benchmarks          (SAT2011 - main track)
    Key discovery problem instances for AES and small scale variants of AES.
- "The AES challenge" benchmark                      (SAT2011 - main track)
    A full AES instance with an unknown key: a challenge to the SAT community.
- Advanced Encryption Standard component benchmarks  (SAT2011 - PseudoBoolean)
    Minimisation problems for the AES component functions, as provided in 
    this benchmark, but using a translation into pseudo-boolean problems.


IV Instances

  - with size in bytes
  - "e" for easy, "h" for hard, "vh" for very hard.

11102     sbox_4.wcnf    (e)
366673984 sbox_8.wcnf    (vh)
11386697  mul_8_3.wcnf   (h)
17386969  mul_8_9.wcnf   (h)
28060140  mul_8_11.wcnf  (h)
28011516  mul_8_13.wcnf  (h)
26610816  mul_8_14.wcnf  (h)

The only known optimum solution is for sbox_8.wcnf which has an optimum
solution of size 22. All instances are weighted MaxSAT problems. ???
this is obviously false ???

XXX HOW DOES A SOLUTION FOR THE ABOVE PROBLEMS TRANSLATE INTO "a solution
of size 22"??? WHAT DOES SIZE MEAN HERE???


V The Advanced Encryption Standard components

We provide translations of the problem of finding a CNF of minimum size
representing the:

- 8-bit small scale AES Sbox.
- 16-bit AES Sbox.
- 16-bit AES multiplication by 03.
- 16-bit AES multiplication by 09.
- 16-bit AES multiplication by 11.
- 16-bit AES multiplication by 13.
- 16-bit AES multiplication by 14.

XXX WHAT DOES "8-bit" AND "16-bit" MEAN HERE? This information is misleading.
XXX Obviously there are 4-bit and 8-bit boxes!


XXX

For full specifications of the AES Sbox and field operations, the AES cipher
itself and small scale variants, please refer to the following:

@Book{DaemenRijmen2001Rijndael,
  author =	 {Joan Daemen and Vincent Rijmen},
  title = 	 {The Design of Rijndael},
  publisher = 	 {Springer},
  year = 	 2001,
  address =	 {Berlin},
  note =	 {ISBN 3-540-42580-2; QA76.9.A25 D32 2001}
}

@Book{CidMurphyRobshaw2006AlgebraicAES,
  author =       {Carlos Cid and Sean Murphy and Matthew Robshaw},
  title =        {Algebraic Aspects of the Advanced Encryption Standard},
  publisher =    {Springer},
  year =         2006,
  note =         {ISBN-10 0-387-24363-1}
}


VI On the choice of instances



VII The OKlibrary http://www.ok-sat-library.org

All developments took place within the OKlibrary, an open-source research
platform around the SAT problem. Also the translation framework used to
generate the translations of the AES cipher is provided there.

List of relevant directories in OKplatform/OKsystem/OKlib (where OKplatform
is the directory of the unpacked OKlibrary-package):

 - Experimentation/Benchmarks: all our benchmark packages
 - Experimentation/Investigations/Cryptography/AdvancedEncryptionStandard: all
   current investigations into AES
 - ComputerAlgebra/Cryptology/Lisp/CryptoSystems/Rijndael/: an AES 
   implementation using the Maxima computer algebra system
 - ComputerAlgebra/Cryptology/Lisp/Cryptanalysis/Rijndael/: the AES-to-SAT
   translation, using the Maxima computer algebra system.

The OKlibrary-internal documentation for the SAT2011-benchmarks is provided at

http://cs.swan.ac.uk/~csoliver/ok-sat-library/internet_html/doc/doxygen_html/d3/d83/SAT2011_8hpp.html

