// Oliver Kullmann, 7.11.2009 (Swansea)
/* Copyright 2009 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file Experimentation/Investigations/RamseyTheory/GreenTaoProblems/plans/GreenTao_te_m-3-5.hpp
  \brief Investigations regarding the "transversal extension" numbers greentao_{m+2}([2,...,2,3,5])

  Generated by output_greentao_stdname(append(create_list(2,i,1,m),[3,5]),n)
  and output_greentao_sb_stdname(append(create_list(2,i,1,m),[3,5]),n).


  \todo 550 < greentao_3(2,3,5)
  <ul>
   <li> n=550
    <ol>
     <li> OKsolver_2002 without preprocessing: the instance allows many
     autarkies and single-nodes, but full processing on csltok seems to take
     roughly a day, and after have processed roughly 25% of the monitoring
     nodes no solution was found:
     \verbatim
> OKsolver_2002-O3-DNDEBUG -M -D16 GreenTao_3-2-3-5_550.cnf
 15167:    330     97.85  6.41E+06     3.23s     1.08s     0y   0d 15h  7m  8s     0   116   44

s UNKNOWN
c sat_status                            2
c initial_maximal_clause_length         5
c initial_number_of_variables           1650
c initial_number_of_clauses             166883
c initial_number_of_literal_occurrences 348728
c number_of_initial_unit-eliminations   0
c reddiff_maximal_clause_length         0
c reddiff_number_of_variables           0
c reddiff_number_of_clauses             0
c reddiff_number_of_literal_occurrences 0
c number_of_2-clauses_after_reduction   152625
c running_time(sec)                     16392.5
c number_of_nodes                       1484482
c number_of_single_nodes                41131
c number_of_quasi_single_nodes          0
c number_of_2-reductions                16689392
c number_of_pure_literals               0
c number_of_autarkies                   496261
c number_of_missed_single_nodes         6
c max_tree_depth                        44
c number_of_table_enlargements          0
c number_of_1-autarkies                 157064664
c number_of_new_2-clauses               0
c maximal_number_of_added_2-clauses     0
c file_name                             GreenTao_3-2-3-5_550.cnf
     \endverbatim
     </li>
     <li> OKsolver_2002 with preprocessing: seems much worse (very
     slow processing of nodes); autarkies and single nodes apparently
     disappeared (while some pure literals showed up):
     \verbatim
> OKsolver_2002-m2pp -M -D16 GreenTao_3-2-3-5_550.cnf
s UNKNOWN
c sat_status                            2
c initial_maximal_clause_length         27
c initial_number_of_variables           956
c initial_number_of_clauses             144252
c initial_number_of_literal_occurrences 333179
c number_of_initial_unit-eliminations   0
c reddiff_maximal_clause_length         0
c reddiff_number_of_variables           0
c reddiff_number_of_clauses             0
c reddiff_number_of_literal_occurrences 0
c number_of_2-clauses_after_reduction   132796
c running_time(sec)                     1004.4
c number_of_nodes                       177
c number_of_single_nodes                0
c number_of_quasi_single_nodes          0
c number_of_2-reductions                9193
c number_of_pure_literals               68
c number_of_autarkies                   0
c number_of_missed_single_nodes         0
c max_tree_depth                        43
c number_of_table_enlargements          0
c number_of_1-autarkies                 4925
c number_of_new_2-clauses               0
c maximal_number_of_added_2-clauses     0
c file_name                             GreenTao_3-2-3-5_550.cnf_m2pp_9474
     \endverbatim
     (three monitoring nodes were processed). One should find out what kind of
     disaster here happened through preprocessing (is it that OKsolver_2002
     can't handle long clauses, since its heuristics is insensitive to them?
     but why is processing so slow? perhaps because of the tree-pruning?).
     </li>
     <li> march_pl: aborted after 30m (csltok), where some "progress" was
     achieved (according to the star-output), but no assignment was found.
     </li>
     <li> minisat2 </li>
     <li> ubcsat: saps determined satisfiability with cutoff=10^5 in run 17.
     </li>
    </ol>
   </li>
   <li> n=562
    <ol>
     <li> adaptnovelty+ with cutoff=10^6:
     \verbatim
> E=read_ubcsat("GreenTao_3-2-3-5_562.cnf_OUT")
  1   2   3
 91 104   5
200
> summary(E$osteps)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
 122700  262800  352800  413600  529700  996600
     \endverbatim
     (looks worse than for n=575 ?!)
     </li>
     <li> Evaluation of all ubcsat-algorithms:
     \verbatim
> E = eval_ubcsat("GreenTao_3-2-3-5_562.cnf", params=list(cutoff=1000000,runs=100))
     \endverbatim
     
     </li>
    </ol>
   </li>
   <li> n=575
    <ol>
     <li> adaptnovelty+ with cutoff=10^6:
     \verbatim
> E=read_ubcsat("GreenTao_3-2-3-5_575.cnf_OUT")
  1   2   3
108  91   1
200
> summary(E$osteps)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
 130900  331500  452000  506100  677500  992900
     \endverbatim
     </li>
    </ol>
   </li>
   <li> n=600
    <ol>
     <li> saps with cutoff=10^5:
     \verbatim
> ubcsat-okl -alg saps -runs 100 -cutoff 100000 -i GreenTao_3-2-3-5_600.cnf | tee GreenTao_3-2-3-5_600.cnf_OUT1
> E=read_ubcsat("GreenTao_3-2-3-5_600.cnf_OUT1")
 8  9 10 11 12 13 14 15 16 17 18
 2  2  6 13 11 16 26 15  5  3  1
100
> summary(E$osteps)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
   3693   19490   41420   45090   66360   98940
     \endverbatim
     </li>
     <li> Checking all ubcsat-algorithms via
     \verbatim
> E = eval_ubcsat("GreenTao_3-2-3-5_600.cnf")
plot(E$alg,E$best)
> min(E$best)
[1] 3
> E$alg[E$best==3]
[1] novelty  novelty  novelty  noveltyp
> table(E$best[E$alg=="novelty"])
 3  4  5  6  7  8  9 10
 3  5 12 15 22 19 16  8
> table(E$best[E$alg=="noveltyp"])
 3  4  5  6  7  8  9 10 11 12
 1  2 12 14 17 24 12 13  4  1
     \endverbatim
     shows novelty as best. </li>
     <li> novelty with cutoff=10^6:
     \verbatim
> summary(E$osteps)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
  37450  255200  485000  496100  746300  996700
> E=read_ubcsat("GreenTao_3-2-3-5_600.cnf_OUT2")
 2  3  4  5  6
 2 22 44 25  7
100
> summary(E$osteps)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
  23310  215500  431000  464800  727800  996700
     \endverbatim
     </li>
     <li> Checking saps with cutoff=10^6: Seems worse. </li>
     <li> Checking adaptnovelty+ with cutoff=10^6:
     \verbatim
> E=read_ubcsat("GreenTao_3-2-3-5_600.cnf_OUT2")
 2  3  4
 5 58 37
100
> summary(E$osteps)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
 167100  305900  432400  466300  606600  972000
     \endverbatim
     There seems to be a general tendency that adaptnovelty+ gets better than
     other algorithms with higher cutoffs (while it's not good with lower
     cutoffs). 
     </li>
     <li> Let's consider n=600 for now as unsatisfiable. </li>
    </ol>
   </li>
  </ul>

*/
