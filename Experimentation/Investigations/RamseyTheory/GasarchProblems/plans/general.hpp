// Oliver Kullmann, 23.9.2009 (Swansea)
/* Copyright 2009 Oliver Kullmann
This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation and included in this library; either version 3 of the
License, or any later version. */

/*!
  \file Experimentation/Investigations/RamseyTheory/GasarchProblems/plans/general.hpp
  \brief On investigations into Gasarch problems (including Gasarch numbers)

  Problems generated by output_gasarch_stdname(r,p,q).


  \todo Basic notions
  <ul>
   <li> Let gasarch(r) by the smallest d such that gasarch_nbfclud(r,d,d)
   is unsatisfiable. </li>
  </ul>


  \todo Best local search algorithms
  <ul>
   <li> Evaluating
   \verbatim
E = eval_ubcsat("Gasarch_4-17-17.cnf")
   \endverbatim
   by plot(E$alg,E$best) shows that adaptnovelty+ is clearly strongest
   (default values, that is, cutoff=10^5). </li>
  </ul>


  \todo Investigating the 16 x 16 case
  <ul>
   <li> Problem generation by output_gasarch_stdname(4,16,16). </li>
   <li> With cutoff=10^5 a solution was found in run 8. </li>
  </ul>


  \todo Investigating the 16 x 17 case
  <ul>
   <li> Problem generation by output_gasarch_stdname(4,16,17). </li>
   <li> cutoff=10^5:
   \verbatim
> ubcsat-okl -alg adaptnovelty+ -cutoff 100000 -runs 100 -i Gasarch_4-16-17.cnf -solve | tee Gasarch_4-16-17.cnf_OUT
> E = read_ubcsat("Gasarch_4-16-17.cnf_OUT");
 4  5  6  7  8
 4 31 44 20  1
100
> summary(E$osteps)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
   3534   14390   40630   41660   64290   98750
     \endverbatim
     </li>
     <li> cutoff=10^6:
     \verbatim
> E = read_ubcsat("Gasarch_4-16-17.cnf_OUT2");
 4  5  6
42 57  1
100
> summary(E$osteps)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.
   6984  116100  267100  324700  490500  998400
   \endverbatim
   </li>
  </ul>


  \todo Investigating the 17 x 17 case
  <ul>
   <li> Problem generation by output_gasarch_stdname(4,17,17). </li>
   <li> cutoff=10^7:
   \verbatim
> ubcsat-okl -alg adaptnovelty+ -cutoff 10000000 -runs 100 -i Gasarch_4-17-17.cnf -solve
Clauses = 76007
Variables = 1156
TotalLiterals = 300560
FlipsPerSecond = 119833
BestStep_Mean = 2985189.990000
Steps_Mean = 10000000.000000
Steps_Max = 10000000.000000
PercentSuccess = 0.00
BestSolution_Mean = 6.450000
BestSolution_Median = 6.500000
BestSolution_Min = 5.000000
BestSolution_Max = 7.000000
   \endverbatim
   </li>
   <li> cutoff=10^8:
   \verbatim
> E = read_ubcsat("Gasarch_4-17-17.cnf_OUT");
 5  6
 8 39
47
> summary(E$osteps)
    Min.  1st Qu.   Median     Mean  3rd Qu.     Max.
   40950  6445000 13800000 17590000 21600000 66880000
   \endverbatim
   Looks as if 5 would be the global minimum. </li>
   <li> OKsolver_2002 looks hopeless:
   \verbatim
> OKsolver_2002-O3-DNDEBUG -M -D30 Gasarch_4-17-17.cnf
s UNKNOWN
c sat_status                            2
c initial_maximal_clause_length         4
c initial_number_of_variables           1156
c initial_number_of_clauses             76007
c initial_number_of_literal_occurrences 300560
c number_of_initial_unit-eliminations   0
c reddiff_maximal_clause_length         0
c reddiff_number_of_variables           0
c reddiff_number_of_clauses             0
c reddiff_number_of_literal_occurrences 0
c number_of_2-clauses_after_reduction   1734
c running_time(sec)                     286.8
c number_of_nodes                       2184
c number_of_single_nodes                79
c number_of_quasi_single_nodes          0
c number_of_2-reductions                7789
c number_of_pure_literals               0
c number_of_autarkies                   16
c number_of_missed_single_nodes         124
c max_tree_depth                        243
c number_of_table_enlargements          0
c number_of_1-autarkies                 668409
c number_of_new_2-clauses               0
c maximal_number_of_added_2-clauses     0
c file_name                             Gasarch_4-17-17.cnf
   \endverbatim
   without reaching a monitoring node. </li>
   <li> Also with m2pp-preprocessing it looks hopeless:
   \verbatim
s UNKNOWN
c sat_status                            2
c initial_maximal_clause_length         12
c initial_number_of_variables           867
c initial_number_of_clauses             74851
c initial_number_of_literal_occurrences 445638
c number_of_initial_unit-eliminations   0
c reddiff_maximal_clause_length         0
c reddiff_number_of_variables           0
c reddiff_number_of_clauses             0
c reddiff_number_of_literal_occurrences 0
c number_of_2-clauses_after_reduction   867
c running_time(sec)                     283.9
c number_of_nodes                       596
c number_of_single_nodes                47
c number_of_quasi_single_nodes          0
c number_of_2-reductions                2397
c number_of_pure_literals               0
c number_of_autarkies                   0
c number_of_missed_single_nodes         10
c max_tree_depth                        177
c number_of_table_enlargements          0
c number_of_1-autarkies                 0
c number_of_new_2-clauses               0
c maximal_number_of_added_2-clauses     0
c file_name                             Gasarch_4-17-17.cnf_m2pp_22254
   \endverbatim
   </li>
   <li> minisat2 also looks hopeless, and aborted after 25 restarts (average
   length of clauses learned around 140). </li>
  </ul>


*/

