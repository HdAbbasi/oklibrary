#!/bin/bash
# Matthew Gwynne, 24.1.2012 (Swansea)
# Copyright 2012 Oliver Kullmann
# This file is part of the OKlibrary. OKlibrary is free software; you can redistribute
# it and/or modify it under the terms of the GNU General Public License as published by
# the Free Software Foundation and included in this library; either version 3 of the
# License, or any later version.

# RandomDESTotalAssignment des_instance seed r
# Calculates a pseudo-random total assignment on the variables of the r-round
# DES instance, des_instance. The total assignment to the plaintext, key and
# ciphertext variables is pseudo-randomly generated by the Maxima function
# des_random_pkc_pa_std using the seed, and then the remainder of the
# dependent variables are computed from these.

# XXX It makes no sense to speak of a "pseudo-random total assignment" here
# --- there is NOTHING (pseudo-)random about the assignments (in *this*
# context --- it is given by a *specific* external function).
# It is also inappropriate to compute *total* assignments, because this
# depends on the translation, and there is no need for them.
# So only two arguments, round and seed (in this order --- the order of
# generality), should be needed.
# If an optional third argument is given, then by a *specified* method,
# which spells out the dependencies, the other variables in the
# instance are assigned. XXX
# XXX Furthermore the output is not specified! XXX
# XXX After correcting this, the usage of RandomDESTotalAssignment in the
# plans must be updated. XXX

set -o errexit
set -o nounset

script_name="RandomDESTotalAssignment"
version_number="0.0.7"

if [[ $# != 3 ]]; then
  echo -e "ERROR[${script_name}]: Exactly three parameters are needed, the name\n"
  echo -e "of the DES instance (as generated by output_des2fcl_gen_std(seed,r)), the seed\n"
  echo -e "used to generate the instance, and the number of rounds, r.\n"
  exit 1
fi

instance=$1
seed=$2
r=$3

oklib --maxima --batch-string="\"oklib_load(\\\"OKlib/ComputerAlgebra/Cryptology/Lisp/Cryptanalysis/DataEncryptionStandard/GeneralisedConstraintTranslation.mac\\\"); output_des_random_pkctriple_pa_std(${seed},${r});\"" > /dev/null

applypass="ApplyPass-O3-DNDEBUG"
solver="OKsolver_2002-O3-DNDEBUG -O"

# Take partial assignment over the plaintext, key and ciphertext variables, and
# use OKsolver_2002-O3-DNDEBUG to extend the assignment to all of the
# variables of the instance:

pa_file=des_pkctriple_r${r}_s${seed}.pa
timestamp=$(date +"%Y-%m-%d-%H%M%S")
temp_file=temp_$(basename ${instance})_${timestamp}
cat ${instance} | ${applypass} ${pa_file} ${temp_file}
(cat ${pa_file} | sed 's/ 0 *\( \|$\)//g';
    ${solver} ${temp_file} | grep "^v" | sed 's/v //g')
rm ${pa_file}
rm ${temp_file}

exit 0
